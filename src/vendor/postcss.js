(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
let unpack = require('caniuse-lite').feature

function browsersSort(a, b) {
  a = a.split(' ')
  b = b.split(' ')
  if (a[0] > b[0]) {
    return 1
  } else if (a[0] < b[0]) {
    return -1
  } else {
    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]))
  }
}

// Convert Can I Use data
function f(data, opts, callback) {
  data = unpack(data)

  if (!callback) {
    ;[callback, opts] = [opts, {}]
  }

  let match = opts.match || /\sx($|\s)/
  let need = []

  for (let browser in data.stats) {
    let versions = data.stats[browser]
    for (let version in versions) {
      let support = versions[version]
      if (support.match(match)) {
        need.push(browser + ' ' + version)
      }
    }
  }

  callback(need.sort(browsersSort))
}

// Add data for all properties
let result = {}

function prefix(names, data) {
  for (let name of names) {
    result[name] = Object.assign({}, data)
  }
}

function add(names, data) {
  for (let name of names) {
    result[name].browsers = result[name].browsers
      .concat(data.browsers)
      .sort(browsersSort)
  }
}

module.exports = result

// Border Radius
let prefixBorderRadius = require('caniuse-lite/data/features/border-radius')

f(prefixBorderRadius, browsers =>
  prefix(
    [
      'border-radius',
      'border-top-left-radius',
      'border-top-right-radius',
      'border-bottom-right-radius',
      'border-bottom-left-radius'
    ],
    {
      mistakes: ['-khtml-', '-ms-', '-o-'],
      feature: 'border-radius',
      browsers
    }
  )
)

// Box Shadow
let prefixBoxshadow = require('caniuse-lite/data/features/css-boxshadow')

f(prefixBoxshadow, browsers =>
  prefix(['box-shadow'], {
    mistakes: ['-khtml-'],
    feature: 'css-boxshadow',
    browsers
  })
)

// Animation
let prefixAnimation = require('caniuse-lite/data/features/css-animation')

f(prefixAnimation, browsers =>
  prefix(
    [
      'animation',
      'animation-name',
      'animation-duration',
      'animation-delay',
      'animation-direction',
      'animation-fill-mode',
      'animation-iteration-count',
      'animation-play-state',
      'animation-timing-function',
      '@keyframes'
    ],
    {
      mistakes: ['-khtml-', '-ms-'],
      feature: 'css-animation',
      browsers
    }
  )
)

// Transition
let prefixTransition = require('caniuse-lite/data/features/css-transitions')

f(prefixTransition, browsers =>
  prefix(
    [
      'transition',
      'transition-property',
      'transition-duration',
      'transition-delay',
      'transition-timing-function'
    ],
    {
      mistakes: ['-khtml-', '-ms-'],
      browsers,
      feature: 'css-transitions'
    }
  )
)

// Transform 2D
let prefixTransform2d = require('caniuse-lite/data/features/transforms2d')

f(prefixTransform2d, browsers =>
  prefix(['transform', 'transform-origin'], {
    feature: 'transforms2d',
    browsers
  })
)

// Transform 3D
let prefixTransforms3d = require('caniuse-lite/data/features/transforms3d')

f(prefixTransforms3d, browsers => {
  prefix(['perspective', 'perspective-origin'], {
    feature: 'transforms3d',
    browsers
  })
  return prefix(['transform-style'], {
    mistakes: ['-ms-', '-o-'],
    browsers,
    feature: 'transforms3d'
  })
})

f(prefixTransforms3d, { match: /y\sx|y\s#2/ }, browsers =>
  prefix(['backface-visibility'], {
    mistakes: ['-ms-', '-o-'],
    feature: 'transforms3d',
    browsers
  })
)

// Gradients
let prefixGradients = require('caniuse-lite/data/features/css-gradients')

f(prefixGradients, { match: /y\sx/ }, browsers =>
  prefix(
    [
      'linear-gradient',
      'repeating-linear-gradient',
      'radial-gradient',
      'repeating-radial-gradient'
    ],
    {
      props: [
        'background',
        'background-image',
        'border-image',
        'mask',
        'list-style',
        'list-style-image',
        'content',
        'mask-image'
      ],
      mistakes: ['-ms-'],
      feature: 'css-gradients',
      browsers
    }
  )
)

f(prefixGradients, { match: /a\sx/ }, browsers => {
  browsers = browsers.map(i => {
    if (/firefox|op/.test(i)) {
      return i
    } else {
      return `${i} old`
    }
  })
  return add(
    [
      'linear-gradient',
      'repeating-linear-gradient',
      'radial-gradient',
      'repeating-radial-gradient'
    ],
    {
      feature: 'css-gradients',
      browsers
    }
  )
})

// Box sizing
let prefixBoxsizing = require('caniuse-lite/data/features/css3-boxsizing')

f(prefixBoxsizing, browsers =>
  prefix(['box-sizing'], {
    feature: 'css3-boxsizing',
    browsers
  })
)

// Filter Effects
let prefixFilters = require('caniuse-lite/data/features/css-filters')

f(prefixFilters, browsers =>
  prefix(['filter'], {
    feature: 'css-filters',
    browsers
  })
)

// filter() function
let prefixFilterFunction = require('caniuse-lite/data/features/css-filter-function')

f(prefixFilterFunction, browsers =>
  prefix(['filter-function'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-filter-function',
    browsers
  })
)

// Backdrop-filter
let prefixBackdrop = require('caniuse-lite/data/features/css-backdrop-filter')

f(prefixBackdrop, { match: /y\sx|y\s#2/ }, browsers =>
  prefix(['backdrop-filter'], {
    feature: 'css-backdrop-filter',
    browsers
  })
)

// element() function
let prefixElementFunction = require('caniuse-lite/data/features/css-element-function')

f(prefixElementFunction, browsers =>
  prefix(['element'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-element-function',
    browsers
  })
)

// Multicolumns
let prefixMulticolumns = require('caniuse-lite/data/features/multicolumn')

f(prefixMulticolumns, browsers => {
  prefix(
    [
      'columns',
      'column-width',
      'column-gap',
      'column-rule',
      'column-rule-color',
      'column-rule-width',
      'column-count',
      'column-rule-style',
      'column-span',
      'column-fill'
    ],
    {
      feature: 'multicolumn',
      browsers
    }
  )

  let noff = browsers.filter(i => !/firefox/.test(i))
  prefix(['break-before', 'break-after', 'break-inside'], {
    feature: 'multicolumn',
    browsers: noff
  })
})

// User select
let prefixUserSelect = require('caniuse-lite/data/features/user-select-none')

f(prefixUserSelect, browsers =>
  prefix(['user-select'], {
    mistakes: ['-khtml-'],
    feature: 'user-select-none',
    browsers
  })
)

// Flexible Box Layout
let prefixFlexbox = require('caniuse-lite/data/features/flexbox')

f(prefixFlexbox, { match: /a\sx/ }, browsers => {
  browsers = browsers.map(i => {
    if (/ie|firefox/.test(i)) {
      return i
    } else {
      return `${i} 2009`
    }
  })
  prefix(['display-flex', 'inline-flex'], {
    props: ['display'],
    feature: 'flexbox',
    browsers
  })
  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers
  })
  prefix(
    [
      'flex-direction',
      'flex-wrap',
      'flex-flow',
      'justify-content',
      'order',
      'align-items',
      'align-self',
      'align-content'
    ],
    {
      feature: 'flexbox',
      browsers
    }
  )
})

f(prefixFlexbox, { match: /y\sx/ }, browsers => {
  add(['display-flex', 'inline-flex'], {
    feature: 'flexbox',
    browsers
  })
  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers
  })
  add(
    [
      'flex-direction',
      'flex-wrap',
      'flex-flow',
      'justify-content',
      'order',
      'align-items',
      'align-self',
      'align-content'
    ],
    {
      feature: 'flexbox',
      browsers
    }
  )
})

// calc() unit
let prefixCalc = require('caniuse-lite/data/features/calc')

f(prefixCalc, browsers =>
  prefix(['calc'], {
    props: ['*'],
    feature: 'calc',
    browsers
  })
)

// Background options
let prefixBackgroundOptions = require('caniuse-lite/data/features/background-img-opts')

f(prefixBackgroundOptions, browsers =>
  prefix(['background-origin', 'background-size'], {
    feature: 'background-img-opts',
    browsers
  })
)

// background-clip: text
let prefixBackgroundClipText = require('caniuse-lite/data/features/background-clip-text')

f(prefixBackgroundClipText, browsers =>
  prefix(['background-clip'], {
    feature: 'background-clip-text',
    browsers
  })
)

// Font feature settings
let prefixFontFeature = require('caniuse-lite/data/features/font-feature')

f(prefixFontFeature, browsers =>
  prefix(
    [
      'font-feature-settings',
      'font-variant-ligatures',
      'font-language-override'
    ],
    {
      feature: 'font-feature',
      browsers
    }
  )
)

// CSS font-kerning property
let prefixFontKerning = require('caniuse-lite/data/features/font-kerning')

f(prefixFontKerning, browsers =>
  prefix(['font-kerning'], {
    feature: 'font-kerning',
    browsers
  })
)

// Border image
let prefixBorderImage = require('caniuse-lite/data/features/border-image')

f(prefixBorderImage, browsers =>
  prefix(['border-image'], {
    feature: 'border-image',
    browsers
  })
)

// Selection selector
let prefixSelection = require('caniuse-lite/data/features/css-selection')

f(prefixSelection, browsers =>
  prefix(['::selection'], {
    selector: true,
    feature: 'css-selection',
    browsers
  })
)

// Placeholder selector
let prefixPlaceholder = require('caniuse-lite/data/features/css-placeholder')

f(prefixPlaceholder, browsers => {
  prefix(['::placeholder'], {
    selector: true,
    feature: 'css-placeholder',
    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])
  })
})

// Placeholder-shown selector
let prefixPlaceholderShown = require('caniuse-lite/data/features/css-placeholder-shown')

f(prefixPlaceholderShown, browsers => {
  prefix([':placeholder-shown'], {
    selector: true,
    feature: 'css-placeholder-shown',
    browsers
  })
})

// Hyphenation
let prefixHyphens = require('caniuse-lite/data/features/css-hyphens')

f(prefixHyphens, browsers =>
  prefix(['hyphens'], {
    feature: 'css-hyphens',
    browsers
  })
)

// Fullscreen selector
let prefixFullscreen = require('caniuse-lite/data/features/fullscreen')

f(prefixFullscreen, browsers =>
  prefix([':fullscreen'], {
    selector: true,
    feature: 'fullscreen',
    browsers
  })
)

f(prefixFullscreen, { match: /x(\s#2|$)/ }, browsers =>
  prefix(['::backdrop'], {
    selector: true,
    feature: 'fullscreen',
    browsers
  })
)

// File selector button
prefix(['::file-selector-button'], {
  selector: true,
  feature: 'file-selector-button',
  browsers: [
    'chrome 89',
    'edge 89',
    'firefox 82',
    'opera 75',
    'safari 14.1',
    'android 89',
    'and_chr 89',
    'op_mob 63',
    'and_ff 82',
    'ios_saf 14.5',
    'samsung 15.0'
  ]
})

// :autofill
let prefixAutofill = require('caniuse-lite/data/features/css-autofill')

f(prefixAutofill, browsers =>
  prefix([':autofill'], {
    selector: true,
    feature: 'css-autofill',
    browsers
  })
)

// Tab size
let prefixTabsize = require('caniuse-lite/data/features/css3-tabsize')

f(prefixTabsize, browsers =>
  prefix(['tab-size'], {
    feature: 'css3-tabsize',
    browsers
  })
)

// Intrinsic & extrinsic sizing
let prefixIntrinsic = require('caniuse-lite/data/features/intrinsic-width')

let sizeProps = [
  'width',
  'min-width',
  'max-width',
  'height',
  'min-height',
  'max-height',
  'inline-size',
  'min-inline-size',
  'max-inline-size',
  'block-size',
  'min-block-size',
  'max-block-size',
  'grid',
  'grid-template',
  'grid-template-rows',
  'grid-template-columns',
  'grid-auto-columns',
  'grid-auto-rows'
]

f(prefixIntrinsic, browsers =>
  prefix(['max-content', 'min-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
)

f(prefixIntrinsic, { match: /x|\s#4/ }, browsers =>
  prefix(['fill', 'fill-available'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
)

f(prefixIntrinsic, { match: /x|\s#5/ }, browsers =>
  prefix(['stretch'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
)

f(prefixIntrinsic, { match: /x|\s#5/ }, browsers =>
  prefix(['fit-content'], {
    props: sizeProps,
    feature: 'intrinsic-width',
    browsers
  })
)

// Zoom cursors
let prefixCursorsNewer = require('caniuse-lite/data/features/css3-cursors-newer')

f(prefixCursorsNewer, browsers =>
  prefix(['zoom-in', 'zoom-out'], {
    props: ['cursor'],
    feature: 'css3-cursors-newer',
    browsers
  })
)

// Grab cursors
let prefixCursorsGrab = require('caniuse-lite/data/features/css3-cursors-grab')

f(prefixCursorsGrab, browsers =>
  prefix(['grab', 'grabbing'], {
    props: ['cursor'],
    feature: 'css3-cursors-grab',
    browsers
  })
)

// Sticky position
let prefixSticky = require('caniuse-lite/data/features/css-sticky')

f(prefixSticky, browsers =>
  prefix(['sticky'], {
    props: ['position'],
    feature: 'css-sticky',
    browsers
  })
)

// Pointer Events
let prefixPointer = require('caniuse-lite/data/features/pointer')

f(prefixPointer, browsers =>
  prefix(['touch-action'], {
    feature: 'pointer',
    browsers
  })
)

// Text decoration
let prefixDecoration = require('caniuse-lite/data/features/text-decoration')

f(prefixDecoration, browsers =>
  prefix(
    [
      'text-decoration-style',
      'text-decoration-color',
      'text-decoration-line',
      'text-decoration'
    ],
    {
      feature: 'text-decoration',
      browsers
    }
  )
)

f(prefixDecoration, { match: /x.*#[235]/ }, browsers =>
  prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {
    feature: 'text-decoration',
    browsers
  })
)

// Text Size Adjust
let prefixTextSizeAdjust = require('caniuse-lite/data/features/text-size-adjust')

f(prefixTextSizeAdjust, browsers =>
  prefix(['text-size-adjust'], {
    feature: 'text-size-adjust',
    browsers
  })
)

// CSS Masks
let prefixCssMasks = require('caniuse-lite/data/features/css-masks')

f(prefixCssMasks, browsers => {
  prefix(
    [
      'mask-clip',
      'mask-composite',
      'mask-image',
      'mask-origin',
      'mask-repeat',
      'mask-border-repeat',
      'mask-border-source'
    ],
    {
      feature: 'css-masks',
      browsers
    }
  )
  prefix(
    [
      'mask',
      'mask-position',
      'mask-size',
      'mask-border',
      'mask-border-outset',
      'mask-border-width',
      'mask-border-slice'
    ],
    {
      feature: 'css-masks',
      browsers
    }
  )
})

// CSS clip-path property
let prefixClipPath = require('caniuse-lite/data/features/css-clip-path')

f(prefixClipPath, browsers =>
  prefix(['clip-path'], {
    feature: 'css-clip-path',
    browsers
  })
)

// Fragmented Borders and Backgrounds
let prefixBoxdecoration = require('caniuse-lite/data/features/css-boxdecorationbreak')

f(prefixBoxdecoration, browsers =>
  prefix(['box-decoration-break'], {
    feature: 'css-boxdecorationbreak',
    browsers
  })
)

// CSS3 object-fit/object-position
let prefixObjectFit = require('caniuse-lite/data/features/object-fit')

f(prefixObjectFit, browsers =>
  prefix(['object-fit', 'object-position'], {
    feature: 'object-fit',
    browsers
  })
)

// CSS Shapes
let prefixShapes = require('caniuse-lite/data/features/css-shapes')

f(prefixShapes, browsers =>
  prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {
    feature: 'css-shapes',
    browsers
  })
)

// CSS3 text-overflow
let prefixTextOverflow = require('caniuse-lite/data/features/text-overflow')

f(prefixTextOverflow, browsers =>
  prefix(['text-overflow'], {
    feature: 'text-overflow',
    browsers
  })
)

// Viewport at-rule
let prefixDeviceadaptation = require('caniuse-lite/data/features/css-deviceadaptation')

f(prefixDeviceadaptation, browsers =>
  prefix(['@viewport'], {
    feature: 'css-deviceadaptation',
    browsers
  })
)

// Resolution Media Queries
let prefixResolut = require('caniuse-lite/data/features/css-media-resolution')

f(prefixResolut, { match: /( x($| )|a #2)/ }, browsers =>
  prefix(['@resolution'], {
    feature: 'css-media-resolution',
    browsers
  })
)

// CSS text-align-last
let prefixTextAlignLast = require('caniuse-lite/data/features/css-text-align-last')

f(prefixTextAlignLast, browsers =>
  prefix(['text-align-last'], {
    feature: 'css-text-align-last',
    browsers
  })
)

// Crisp Edges Image Rendering Algorithm
let prefixCrispedges = require('caniuse-lite/data/features/css-crisp-edges')

f(prefixCrispedges, { match: /y x|a x #1/ }, browsers =>
  prefix(['pixelated'], {
    props: ['image-rendering'],
    feature: 'css-crisp-edges',
    browsers
  })
)

f(prefixCrispedges, { match: /a x #2/ }, browsers =>
  prefix(['image-rendering'], {
    feature: 'css-crisp-edges',
    browsers
  })
)

// Logical Properties
let prefixLogicalProps = require('caniuse-lite/data/features/css-logical-props')

f(prefixLogicalProps, browsers =>
  prefix(
    [
      'border-inline-start',
      'border-inline-end',
      'margin-inline-start',
      'margin-inline-end',
      'padding-inline-start',
      'padding-inline-end'
    ],
    {
      feature: 'css-logical-props',
      browsers
    }
  )
)

f(prefixLogicalProps, { match: /x\s#2/ }, browsers =>
  prefix(
    [
      'border-block-start',
      'border-block-end',
      'margin-block-start',
      'margin-block-end',
      'padding-block-start',
      'padding-block-end'
    ],
    {
      feature: 'css-logical-props',
      browsers
    }
  )
)

// CSS appearance
let prefixAppearance = require('caniuse-lite/data/features/css-appearance')

f(prefixAppearance, { match: /#2|x/ }, browsers =>
  prefix(['appearance'], {
    feature: 'css-appearance',
    browsers
  })
)

// CSS Scroll snap points
let prefixSnappoints = require('caniuse-lite/data/features/css-snappoints')

f(prefixSnappoints, browsers =>
  prefix(
    [
      'scroll-snap-type',
      'scroll-snap-coordinate',
      'scroll-snap-destination',
      'scroll-snap-points-x',
      'scroll-snap-points-y'
    ],
    {
      feature: 'css-snappoints',
      browsers
    }
  )
)

// CSS Regions
let prefixRegions = require('caniuse-lite/data/features/css-regions')

f(prefixRegions, browsers =>
  prefix(['flow-into', 'flow-from', 'region-fragment'], {
    feature: 'css-regions',
    browsers
  })
)

// CSS image-set
let prefixImageSet = require('caniuse-lite/data/features/css-image-set')

f(prefixImageSet, browsers =>
  prefix(['image-set'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'cursor',
      'mask',
      'mask-image',
      'list-style',
      'list-style-image',
      'content'
    ],
    feature: 'css-image-set',
    browsers
  })
)

// Writing Mode
let prefixWritingMode = require('caniuse-lite/data/features/css-writing-mode')

f(prefixWritingMode, { match: /a|x/ }, browsers =>
  prefix(['writing-mode'], {
    feature: 'css-writing-mode',
    browsers
  })
)

// Cross-Fade Function
let prefixCrossFade = require('caniuse-lite/data/features/css-cross-fade')

f(prefixCrossFade, browsers =>
  prefix(['cross-fade'], {
    props: [
      'background',
      'background-image',
      'border-image',
      'mask',
      'list-style',
      'list-style-image',
      'content',
      'mask-image'
    ],
    feature: 'css-cross-fade',
    browsers
  })
)

// Read Only selector
let prefixReadOnly = require('caniuse-lite/data/features/css-read-only-write')

f(prefixReadOnly, browsers =>
  prefix([':read-only', ':read-write'], {
    selector: true,
    feature: 'css-read-only-write',
    browsers
  })
)

// Text Emphasize
let prefixTextEmphasis = require('caniuse-lite/data/features/text-emphasis')

f(prefixTextEmphasis, browsers =>
  prefix(
    [
      'text-emphasis',
      'text-emphasis-position',
      'text-emphasis-style',
      'text-emphasis-color'
    ],
    {
      feature: 'text-emphasis',
      browsers
    }
  )
)

// CSS Grid Layout
let prefixGrid = require('caniuse-lite/data/features/css-grid')

f(prefixGrid, browsers => {
  prefix(['display-grid', 'inline-grid'], {
    props: ['display'],
    feature: 'css-grid',
    browsers
  })
  prefix(
    [
      'grid-template-columns',
      'grid-template-rows',
      'grid-row-start',
      'grid-column-start',
      'grid-row-end',
      'grid-column-end',
      'grid-row',
      'grid-column',
      'grid-area',
      'grid-template',
      'grid-template-areas',
      'place-self'
    ],
    {
      feature: 'css-grid',
      browsers
    }
  )
})

f(prefixGrid, { match: /a x/ }, browsers =>
  prefix(['grid-column-align', 'grid-row-align'], {
    feature: 'css-grid',
    browsers
  })
)

// CSS text-spacing
let prefixTextSpacing = require('caniuse-lite/data/features/css-text-spacing')

f(prefixTextSpacing, browsers =>
  prefix(['text-spacing'], {
    feature: 'css-text-spacing',
    browsers
  })
)

// :any-link selector
let prefixAnyLink = require('caniuse-lite/data/features/css-any-link')

f(prefixAnyLink, browsers =>
  prefix([':any-link'], {
    selector: true,
    feature: 'css-any-link',
    browsers
  })
)

// unicode-bidi
let prefixBidi = require('caniuse-lite/data/features/css-unicode-bidi')

f(prefixBidi, browsers =>
  prefix(['isolate'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
)

f(prefixBidi, { match: /y x|a x #2/ }, browsers =>
  prefix(['plaintext'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
)

f(prefixBidi, { match: /y x/ }, browsers =>
  prefix(['isolate-override'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers
  })
)

// overscroll-behavior selector
let prefixOverscroll = require('caniuse-lite/data/features/css-overscroll-behavior')

f(prefixOverscroll, { match: /a #1/ }, browsers =>
  prefix(['overscroll-behavior'], {
    feature: 'css-overscroll-behavior',
    browsers
  })
)

// color-adjust
let prefixColorAdjust = require('caniuse-lite/data/features/css-color-adjust')

f(prefixColorAdjust, browsers =>
  prefix(['color-adjust'], {
    feature: 'css-color-adjust',
    browsers
  })
)

// text-orientation
let prefixTextOrientation = require('caniuse-lite/data/features/css-text-orientation')

f(prefixTextOrientation, browsers =>
  prefix(['text-orientation'], {
    feature: 'css-text-orientation',
    browsers
  })
)

},{"caniuse-lite":648,"caniuse-lite/data/features/background-clip-text":116,"caniuse-lite/data/features/background-img-opts":117,"caniuse-lite/data/features/border-image":127,"caniuse-lite/data/features/border-radius":128,"caniuse-lite/data/features/calc":131,"caniuse-lite/data/features/css-animation":157,"caniuse-lite/data/features/css-any-link":158,"caniuse-lite/data/features/css-appearance":159,"caniuse-lite/data/features/css-autofill":162,"caniuse-lite/data/features/css-backdrop-filter":163,"caniuse-lite/data/features/css-boxdecorationbreak":166,"caniuse-lite/data/features/css-boxshadow":167,"caniuse-lite/data/features/css-clip-path":172,"caniuse-lite/data/features/css-color-adjust":173,"caniuse-lite/data/features/css-crisp-edges":180,"caniuse-lite/data/features/css-cross-fade":181,"caniuse-lite/data/features/css-deviceadaptation":184,"caniuse-lite/data/features/css-element-function":187,"caniuse-lite/data/features/css-filter-function":191,"caniuse-lite/data/features/css-filters":192,"caniuse-lite/data/features/css-gradients":201,"caniuse-lite/data/features/css-grid":202,"caniuse-lite/data/features/css-hyphens":206,"caniuse-lite/data/features/css-image-set":208,"caniuse-lite/data/features/css-logical-props":216,"caniuse-lite/data/features/css-masks":218,"caniuse-lite/data/features/css-media-resolution":222,"caniuse-lite/data/features/css-overscroll-behavior":236,"caniuse-lite/data/features/css-placeholder":241,"caniuse-lite/data/features/css-placeholder-shown":240,"caniuse-lite/data/features/css-read-only-write":242,"caniuse-lite/data/features/css-regions":245,"caniuse-lite/data/features/css-selection":255,"caniuse-lite/data/features/css-shapes":256,"caniuse-lite/data/features/css-snappoints":257,"caniuse-lite/data/features/css-sticky":258,"caniuse-lite/data/features/css-text-align-last":262,"caniuse-lite/data/features/css-text-orientation":265,"caniuse-lite/data/features/css-text-spacing":266,"caniuse-lite/data/features/css-transitions":270,"caniuse-lite/data/features/css-unicode-bidi":271,"caniuse-lite/data/features/css-writing-mode":275,"caniuse-lite/data/features/css3-boxsizing":278,"caniuse-lite/data/features/css3-cursors-grab":280,"caniuse-lite/data/features/css3-cursors-newer":281,"caniuse-lite/data/features/css3-tabsize":283,"caniuse-lite/data/features/flexbox":337,"caniuse-lite/data/features/font-feature":342,"caniuse-lite/data/features/font-kerning":343,"caniuse-lite/data/features/fullscreen":357,"caniuse-lite/data/features/intrinsic-width":412,"caniuse-lite/data/features/multicolumn":458,"caniuse-lite/data/features/object-fit":468,"caniuse-lite/data/features/pointer":497,"caniuse-lite/data/features/text-decoration":571,"caniuse-lite/data/features/text-emphasis":572,"caniuse-lite/data/features/text-overflow":573,"caniuse-lite/data/features/text-size-adjust":574,"caniuse-lite/data/features/transforms2d":584,"caniuse-lite/data/features/transforms3d":585,"caniuse-lite/data/features/user-select-none":596}],2:[function(require,module,exports){
let Prefixer = require('./prefixer')

class AtRule extends Prefixer {
  /**
   * Clone and add prefixes for at-rule
   */
  add(rule, prefix) {
    let prefixed = prefix + rule.name

    let already = rule.parent.some(
      i => i.name === prefixed && i.params === rule.params
    )
    if (already) {
      return undefined
    }

    let cloned = this.clone(rule, { name: prefixed })
    return rule.parent.insertBefore(rule, cloned)
  }

  /**
   * Clone node with prefixes
   */
  process(node) {
    let parent = this.parentPrefix(node)

    for (let prefix of this.prefixes) {
      if (!parent || parent === prefix) {
        this.add(node, prefix)
      }
    }
  }
}

module.exports = AtRule

},{"./prefixer":69}],3:[function(require,module,exports){
(function (process){(function (){
let browserslist = require('browserslist')
let { agents } = require('caniuse-lite')
let pico = require('picocolors')

let Browsers = require('./browsers')
let Prefixes = require('./prefixes')
let dataPrefixes = require('../data/prefixes')
let getInfo = require('./info')

let autoprefixerData = { browsers: agents, prefixes: dataPrefixes }

const WARNING =
  '\n' +
  '  Replace Autoprefixer `browsers` option to Browserslist config.\n' +
  '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n' +
  '\n' +
  '  Using `browsers` option can cause errors. Browserslist config can\n' +
  '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\n' +
  '\n' +
  '  If you really need to use option, rename it to `overrideBrowserslist`.\n' +
  '\n' +
  '  Learn more at:\n' +
  '  https://github.com/browserslist/browserslist#readme\n' +
  '  https://twitter.com/browserslist\n' +
  '\n'

function isPlainObject(obj) {
  return Object.prototype.toString.apply(obj) === '[object Object]'
}

let cache = new Map()

function timeCapsule(result, prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return
  }
  if (prefixes.add.selectors.length > 0) {
    return
  }
  if (Object.keys(prefixes.add).length > 2) {
    return
  }

  /* istanbul ignore next */
  result.warn(
    'Autoprefixer target browsers do not need any prefixes.' +
      'You do not need Autoprefixer anymore.\n' +
      'Check your Browserslist config to be sure that your targets ' +
      'are set up correctly.\n' +
      '\n' +
      '  Learn more at:\n' +
      '  https://github.com/postcss/autoprefixer#readme\n' +
      '  https://github.com/browserslist/browserslist#readme\n' +
      '\n'
  )
}

module.exports = plugin

function plugin(...reqs) {
  let options
  if (reqs.length === 1 && isPlainObject(reqs[0])) {
    options = reqs[0]
    reqs = undefined
  } else if (reqs.length === 0 || (reqs.length === 1 && !reqs[0])) {
    reqs = undefined
  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {
    options = reqs[1]
    reqs = reqs[0]
  } else if (typeof reqs[reqs.length - 1] === 'object') {
    options = reqs.pop()
  }

  if (!options) {
    options = {}
  }

  if (options.browser) {
    throw new Error(
      'Change `browser` option to `overrideBrowserslist` in Autoprefixer'
    )
  } else if (options.browserslist) {
    throw new Error(
      'Change `browserslist` option to `overrideBrowserslist` in Autoprefixer'
    )
  }

  if (options.overrideBrowserslist) {
    reqs = options.overrideBrowserslist
  } else if (options.browsers) {
    if (typeof console !== 'undefined' && console.warn) {
      console.warn(
        pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1))))
      )
    }
    reqs = options.browsers
  }

  let brwlstOpts = {
    ignoreUnknownVersions: options.ignoreUnknownVersions,
    stats: options.stats,
    env: options.env
  }

  function loadPrefixes(opts) {
    let d = autoprefixerData
    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts)
    let key = browsers.selected.join(', ') + JSON.stringify(options)

    if (!cache.has(key)) {
      cache.set(key, new Prefixes(d.prefixes, browsers, options))
    }

    return cache.get(key)
  }

  return {
    postcssPlugin: 'autoprefixer',

    prepare(result) {
      let prefixes = loadPrefixes({
        from: result.opts.from,
        env: options.env
      })

      return {
        OnceExit(root) {
          timeCapsule(result, prefixes)
          if (options.remove !== false) {
            prefixes.processor.remove(root, result)
          }
          if (options.add !== false) {
            prefixes.processor.add(root, result)
          }
        }
      }
    },

    info(opts) {
      opts = opts || {}
      opts.from = opts.from || process.cwd()
      return getInfo(loadPrefixes(opts))
    },

    options,
    browsers: reqs
  }
}

plugin.postcss = true

/**
 * Autoprefixer data
 */
plugin.data = autoprefixerData

/**
 * Autoprefixer default browsers
 */
plugin.defaults = browserslist.defaults

/**
 * Inspect with default Autoprefixer
 */
plugin.info = () => plugin().info()

}).call(this)}).call(this,require('_process'))
},{"../data/prefixes":1,"./browsers":5,"./info":66,"./prefixes":70,"_process":755,"browserslist":85,"caniuse-lite":648,"picocolors":663}],4:[function(require,module,exports){
function last(array) {
  return array[array.length - 1]
}

let brackets = {
  /**
   * Parse string to nodes tree
   */
  parse(str) {
    let current = ['']
    let stack = [current]

    for (let sym of str) {
      if (sym === '(') {
        current = ['']
        last(stack).push(current)
        stack.push(current)
        continue
      }

      if (sym === ')') {
        stack.pop()
        current = last(stack)
        current.push('')
        continue
      }

      current[current.length - 1] += sym
    }

    return stack[0]
  },

  /**
   * Generate output string by nodes tree
   */
  stringify(ast) {
    let result = ''
    for (let i of ast) {
      if (typeof i === 'object') {
        result += `(${brackets.stringify(i)})`
        continue
      }

      result += i
    }
    return result
  }
}

module.exports = brackets

},{}],5:[function(require,module,exports){
let browserslist = require('browserslist')
let agents = require('caniuse-lite').agents

let utils = require('./utils')

class Browsers {
  /**
   * Return all prefixes for default browser data
   */
  static prefixes() {
    if (this.prefixesCache) {
      return this.prefixesCache
    }

    this.prefixesCache = []
    for (let name in agents) {
      this.prefixesCache.push(`-${agents[name].prefix}-`)
    }

    this.prefixesCache = utils
      .uniq(this.prefixesCache)
      .sort((a, b) => b.length - a.length)

    return this.prefixesCache
  }

  /**
   * Check is value contain any possible prefix
   */
  static withPrefix(value) {
    if (!this.prefixesRegexp) {
      this.prefixesRegexp = new RegExp(this.prefixes().join('|'))
    }

    return this.prefixesRegexp.test(value)
  }

  constructor(data, requirements, options, browserslistOpts) {
    this.data = data
    this.options = options || {}
    this.browserslistOpts = browserslistOpts || {}
    this.selected = this.parse(requirements)
  }

  /**
   * Return browsers selected by requirements
   */
  parse(requirements) {
    let opts = {}
    for (let i in this.browserslistOpts) {
      opts[i] = this.browserslistOpts[i]
    }
    opts.path = this.options.from
    return browserslist(requirements, opts)
  }

  /**
   * Return prefix for selected browser
   */
  prefix(browser) {
    let [name, version] = browser.split(' ')
    let data = this.data[name]

    let prefix = data.prefix_exceptions && data.prefix_exceptions[version]
    if (!prefix) {
      prefix = data.prefix
    }
    return `-${prefix}-`
  }

  /**
   * Is browser is selected by requirements
   */
  isSelected(browser) {
    return this.selected.includes(browser)
  }
}

module.exports = Browsers

},{"./utils":76,"browserslist":85,"caniuse-lite":648}],6:[function(require,module,exports){
let Prefixer = require('./prefixer')
let Browsers = require('./browsers')
let utils = require('./utils')

class Declaration extends Prefixer {
  /**
   * Always true, because we already get prefixer by property name
   */
  check(/* decl */) {
    return true
  }

  /**
   * Return prefixed version of property
   */
  prefixed(prop, prefix) {
    return prefix + prop
  }

  /**
   * Return unprefixed version of property
   */
  normalize(prop) {
    return prop
  }

  /**
   * Check `value`, that it contain other prefixes, rather than `prefix`
   */
  otherPrefixes(value, prefix) {
    for (let other of Browsers.prefixes()) {
      if (other === prefix) {
        continue
      }
      if (value.includes(other)) {
        return true
      }
    }
    return false
  }

  /**
   * Set prefix to declaration
   */
  set(decl, prefix) {
    decl.prop = this.prefixed(decl.prop, prefix)
    return decl
  }

  /**
   * Should we use visual cascade for prefixes
   */
  needCascade(decl) {
    if (!decl._autoprefixerCascade) {
      decl._autoprefixerCascade =
        this.all.options.cascade !== false && decl.raw('before').includes('\n')
    }
    return decl._autoprefixerCascade
  }

  /**
   * Return maximum length of possible prefixed property
   */
  maxPrefixed(prefixes, decl) {
    if (decl._autoprefixerMax) {
      return decl._autoprefixerMax
    }

    let max = 0
    for (let prefix of prefixes) {
      prefix = utils.removeNote(prefix)
      if (prefix.length > max) {
        max = prefix.length
      }
    }
    decl._autoprefixerMax = max

    return decl._autoprefixerMax
  }

  /**
   * Calculate indentation to create visual cascade
   */
  calcBefore(prefixes, decl, prefix = '') {
    let max = this.maxPrefixed(prefixes, decl)
    let diff = max - utils.removeNote(prefix).length

    let before = decl.raw('before')
    if (diff > 0) {
      before += Array(diff).fill(' ').join('')
    }

    return before
  }

  /**
   * Remove visual cascade
   */
  restoreBefore(decl) {
    let lines = decl.raw('before').split('\n')
    let min = lines[lines.length - 1]

    this.all.group(decl).up(prefixed => {
      let array = prefixed.raw('before').split('\n')
      let last = array[array.length - 1]
      if (last.length < min.length) {
        min = last
      }
    })

    lines[lines.length - 1] = min
    decl.raws.before = lines.join('\n')
  }

  /**
   * Clone and insert new declaration
   */
  insert(decl, prefix, prefixes) {
    let cloned = this.set(this.clone(decl), prefix)
    if (!cloned) return undefined

    let already = decl.parent.some(
      i => i.prop === cloned.prop && i.value === cloned.value
    )
    if (already) {
      return undefined
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    return decl.parent.insertBefore(decl, cloned)
  }

  /**
   * Did this declaration has this prefix above
   */
  isAlready(decl, prefixed) {
    let already = this.all.group(decl).up(i => i.prop === prefixed)
    if (!already) {
      already = this.all.group(decl).down(i => i.prop === prefixed)
    }
    return already
  }

  /**
   * Clone and add prefixes for declaration
   */
  add(decl, prefix, prefixes, result) {
    let prefixed = this.prefixed(decl.prop, prefix)
    if (
      this.isAlready(decl, prefixed) ||
      this.otherPrefixes(decl.value, prefix)
    ) {
      return undefined
    }
    return this.insert(decl, prefix, prefixes, result)
  }

  /**
   * Add spaces for visual cascade
   */
  process(decl, result) {
    if (!this.needCascade(decl)) {
      super.process(decl, result)
      return
    }

    let prefixes = super.process(decl, result)

    if (!prefixes || !prefixes.length) {
      return
    }

    this.restoreBefore(decl)
    decl.raws.before = this.calcBefore(prefixes, decl)
  }

  /**
   * Return list of prefixed properties to clean old prefixes
   */
  old(prop, prefix) {
    return [this.prefixed(prop, prefix)]
  }
}

module.exports = Declaration

},{"./browsers":5,"./prefixer":69,"./utils":76}],7:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class AlignContent extends Declaration {
  /**
   * Change property name for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012) {
      return prefix + 'flex-line-pack'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-content'
  }

  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2012) {
      decl.value = AlignContent.oldValues[decl.value] || decl.value
      return super.set(decl, prefix)
    }
    if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

AlignContent.names = ['align-content', 'flex-line-pack']

AlignContent.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
}

module.exports = AlignContent

},{"../declaration":6,"./flex-spec":32}],8:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class AlignItems extends Declaration {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return prefix + 'box-align'
    }
    if (spec === 2012) {
      return prefix + 'flex-align'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-items'
  }

  /**
   * Change value for 2009 and 2012 specs
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2009 || spec === 2012) {
      decl.value = AlignItems.oldValues[decl.value] || decl.value
    }
    return super.set(decl, prefix)
  }
}

AlignItems.names = ['align-items', 'flex-align', 'box-align']

AlignItems.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start'
}

module.exports = AlignItems

},{"../declaration":6,"./flex-spec":32}],9:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class AlignSelf extends Declaration {
  check(decl) {
    return (
      decl.parent &&
      !decl.parent.some(i => {
        return i.prop && i.prop.startsWith('grid-')
      })
    )
  }

  /**
   * Change property name for 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012) {
      return prefix + 'flex-item-align'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'align-self'
  }

  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2012) {
      decl.value = AlignSelf.oldValues[decl.value] || decl.value
      return super.set(decl, prefix)
    }
    if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

AlignSelf.names = ['align-self', 'flex-item-align']

AlignSelf.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start'
}

module.exports = AlignSelf

},{"../declaration":6,"./flex-spec":32}],10:[function(require,module,exports){
let Declaration = require('../declaration')

class Animation extends Declaration {
  /**
   * Don’t add prefixes for modern values.
   */
  check(decl) {
    return !decl.value.split(/\s+/).some(i => {
      let lower = i.toLowerCase()
      return lower === 'reverse' || lower === 'alternate-reverse'
    })
  }
}

Animation.names = ['animation', 'animation-direction']

module.exports = Animation

},{"../declaration":6}],11:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('../utils')

class Appearance extends Declaration {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)

    if (this.prefixes) {
      this.prefixes = utils.uniq(
        this.prefixes.map(i => {
          if (i === '-ms-') {
            return '-webkit-'
          }
          return i
        })
      )
    }
  }
}

Appearance.names = ['appearance']

module.exports = Appearance

},{"../declaration":6,"../utils":76}],12:[function(require,module,exports){
let Selector = require('../selector')
let utils = require('../utils')

class Autofill extends Selector {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)

    if (this.prefixes) {
      this.prefixes = utils.uniq(
        this.prefixes.map(i => {
          return '-webkit-'
        })
      )
    }
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-autofill'
    }
    return `:${prefix}autofill`
  }
}

Autofill.names = [':autofill']

module.exports = Autofill

},{"../selector":73,"../utils":76}],13:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('../utils')

class BackdropFilter extends Declaration {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)

    if (this.prefixes) {
      this.prefixes = utils.uniq(
        this.prefixes.map(i => {
          return i === '-ms-' ? '-webkit-' : i
        })
      )
    }
  }
}

BackdropFilter.names = ['backdrop-filter']

module.exports = BackdropFilter

},{"../declaration":6,"../utils":76}],14:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('../utils')

class BackgroundClip extends Declaration {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)

    if (this.prefixes) {
      this.prefixes = utils.uniq(
        this.prefixes.map(i => {
          return i === '-ms-' ? '-webkit-' : i
        })
      )
    }
  }

  check(decl) {
    return decl.value.toLowerCase() === 'text'
  }
}

BackgroundClip.names = ['background-clip']

module.exports = BackgroundClip

},{"../declaration":6,"../utils":76}],15:[function(require,module,exports){
let Declaration = require('../declaration')

class BackgroundSize extends Declaration {
  /**
   * Duplication parameter for -webkit- browsers
   */
  set(decl, prefix) {
    let value = decl.value.toLowerCase()
    if (
      prefix === '-webkit-' &&
      !value.includes(' ') &&
      value !== 'contain' &&
      value !== 'cover'
    ) {
      decl.value = decl.value + ' ' + decl.value
    }
    return super.set(decl, prefix)
  }
}

BackgroundSize.names = ['background-size']

module.exports = BackgroundSize

},{"../declaration":6}],16:[function(require,module,exports){
let Declaration = require('../declaration')

class BlockLogical extends Declaration {
  /**
   * Use old syntax for -moz- and -webkit-
   */
  prefixed(prop, prefix) {
    if (prop.includes('-start')) {
      return prefix + prop.replace('-block-start', '-before')
    }
    return prefix + prop.replace('-block-end', '-after')
  }

  /**
   * Return property name by spec
   */
  normalize(prop) {
    if (prop.includes('-before')) {
      return prop.replace('-before', '-block-start')
    }
    return prop.replace('-after', '-block-end')
  }
}

BlockLogical.names = [
  'border-block-start',
  'border-block-end',
  'margin-block-start',
  'margin-block-end',
  'padding-block-start',
  'padding-block-end',
  'border-before',
  'border-after',
  'margin-before',
  'margin-after',
  'padding-before',
  'padding-after'
]

module.exports = BlockLogical

},{"../declaration":6}],17:[function(require,module,exports){
let Declaration = require('../declaration')

class BorderImage extends Declaration {
  /**
   * Remove fill parameter for prefixed declarations
   */
  set(decl, prefix) {
    decl.value = decl.value.replace(/\s+fill(\s)/, '$1')
    return super.set(decl, prefix)
  }
}

BorderImage.names = ['border-image']

module.exports = BorderImage

},{"../declaration":6}],18:[function(require,module,exports){
let Declaration = require('../declaration')

class BorderRadius extends Declaration {
  /**
   * Change syntax, when add Mozilla prefix
   */
  prefixed(prop, prefix) {
    if (prefix === '-moz-') {
      return prefix + (BorderRadius.toMozilla[prop] || prop)
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return unprefixed version of property
   */
  normalize(prop) {
    return BorderRadius.toNormal[prop] || prop
  }
}

BorderRadius.names = ['border-radius']

BorderRadius.toMozilla = {}
BorderRadius.toNormal = {}

for (let ver of ['top', 'bottom']) {
  for (let hor of ['left', 'right']) {
    let normal = `border-${ver}-${hor}-radius`
    let mozilla = `border-radius-${ver}${hor}`

    BorderRadius.names.push(normal)
    BorderRadius.names.push(mozilla)

    BorderRadius.toMozilla[normal] = mozilla
    BorderRadius.toNormal[mozilla] = normal
  }
}

module.exports = BorderRadius

},{"../declaration":6}],19:[function(require,module,exports){
let Declaration = require('../declaration')

class BreakProps extends Declaration {
  /**
   * Change name for -webkit- and -moz- prefix
   */
  prefixed(prop, prefix) {
    return `${prefix}column-${prop}`
  }

  /**
   * Return property name by final spec
   */
  normalize(prop) {
    if (prop.includes('inside')) {
      return 'break-inside'
    }
    if (prop.includes('before')) {
      return 'break-before'
    }
    return 'break-after'
  }

  /**
   * Change prefixed value for avoid-column and avoid-page
   */
  set(decl, prefix) {
    if (
      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||
      decl.value === 'avoid-page'
    ) {
      decl.value = 'avoid'
    }
    return super.set(decl, prefix)
  }

  /**
   * Don’t prefix some values
   */
  insert(decl, prefix, prefixes) {
    if (decl.prop !== 'break-inside') {
      return super.insert(decl, prefix, prefixes)
    }
    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {
      return undefined
    }
    return super.insert(decl, prefix, prefixes)
  }
}

BreakProps.names = [
  'break-inside',
  'page-break-inside',
  'column-break-inside',
  'break-before',
  'page-break-before',
  'column-break-before',
  'break-after',
  'page-break-after',
  'column-break-after'
]

module.exports = BreakProps

},{"../declaration":6}],20:[function(require,module,exports){
let Declaration = require('../declaration')

class ColorAdjust extends Declaration {
  /**
   * Change property name for WebKit-based browsers
   */
  prefixed(prop, prefix) {
    return prefix + 'print-color-adjust'
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'color-adjust'
  }
}

ColorAdjust.names = ['color-adjust', 'print-color-adjust']

module.exports = ColorAdjust

},{"../declaration":6}],21:[function(require,module,exports){
let list = require('postcss').list

let Value = require('../value')

class CrossFade extends Value {
  replace(string, prefix) {
    return list
      .space(string)
      .map(value => {
        if (value.slice(0, +this.name.length + 1) !== this.name + '(') {
          return value
        }

        let close = value.lastIndexOf(')')
        let after = value.slice(close + 1)
        let args = value.slice(this.name.length + 1, close)

        if (prefix === '-webkit-') {
          let match = args.match(/\d*.?\d+%?/)
          if (match) {
            args = args.slice(match[0].length).trim()
            args += `, ${match[0]}`
          } else {
            args += ', 0.5'
          }
        }
        return prefix + this.name + '(' + args + ')' + after
      })
      .join(' ')
  }
}

CrossFade.names = ['cross-fade']

module.exports = CrossFade

},{"../value":77,"postcss":743}],22:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let OldValue = require('../old-value')
let Value = require('../value')

class DisplayFlex extends Value {
  constructor(name, prefixes) {
    super(name, prefixes)
    if (name === 'display-flex') {
      this.name = 'flex'
    }
  }

  /**
   * Faster check for flex value
   */
  check(decl) {
    return decl.prop === 'display' && decl.value === this.name
  }

  /**
   * Return value by spec
   */
  prefixed(prefix) {
    let spec, value
    ;[spec, prefix] = flexSpec(prefix)

    if (spec === 2009) {
      if (this.name === 'flex') {
        value = 'box'
      } else {
        value = 'inline-box'
      }
    } else if (spec === 2012) {
      if (this.name === 'flex') {
        value = 'flexbox'
      } else {
        value = 'inline-flexbox'
      }
    } else if (spec === 'final') {
      value = this.name
    }

    return prefix + value
  }

  /**
   * Add prefix to value depend on flebox spec version
   */
  replace(string, prefix) {
    return this.prefixed(prefix)
  }

  /**
   * Change value for old specs
   */
  old(prefix) {
    let prefixed = this.prefixed(prefix)
    if (!prefixed) return undefined
    return new OldValue(this.name, prefixed)
  }
}

DisplayFlex.names = ['display-flex', 'inline-flex']

module.exports = DisplayFlex

},{"../old-value":68,"../value":77,"./flex-spec":32}],23:[function(require,module,exports){
let Value = require('../value')

class DisplayGrid extends Value {
  constructor(name, prefixes) {
    super(name, prefixes)
    if (name === 'display-grid') {
      this.name = 'grid'
    }
  }

  /**
   * Faster check for flex value
   */
  check(decl) {
    return decl.prop === 'display' && decl.value === this.name
  }
}

DisplayGrid.names = ['display-grid', 'inline-grid']

module.exports = DisplayGrid

},{"../value":77}],24:[function(require,module,exports){
let Selector = require('../selector')
let utils = require('../utils')

class FileSelectorButton extends Selector {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)

    if (this.prefixes) {
      this.prefixes = utils.uniq(
        this.prefixes.map(i => {
          return '-webkit-'
        })
      )
    }
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-file-upload-button'
    }
    return `::${prefix}file-selector-button`
  }
}

FileSelectorButton.names = ['::file-selector-button']

module.exports = FileSelectorButton

},{"../selector":73,"../utils":76}],25:[function(require,module,exports){
let Value = require('../value')

class FilterValue extends Value {
  constructor(name, prefixes) {
    super(name, prefixes)
    if (name === 'filter-function') {
      this.name = 'filter'
    }
  }
}

FilterValue.names = ['filter', 'filter-function']

module.exports = FilterValue

},{"../value":77}],26:[function(require,module,exports){
let Declaration = require('../declaration')

class Filter extends Declaration {
  /**
   * Check is it Internet Explorer filter
   */
  check(decl) {
    let v = decl.value
    return (
      !v.toLowerCase().includes('alpha(') &&
      !v.includes('DXImageTransform.Microsoft') &&
      !v.includes('data:image/svg+xml')
    )
  }
}

Filter.names = ['filter']

module.exports = Filter

},{"../declaration":6}],27:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class FlexBasis extends Declaration {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-basis'
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012) {
      return prefix + 'flex-preferred-size'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  set(decl, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012 || spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexBasis.names = ['flex-basis', 'flex-preferred-size']

module.exports = FlexBasis

},{"../declaration":6,"./flex-spec":32}],28:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class FlexDirection extends Declaration {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-direction'
  }

  /**
   * Use two properties for 2009 spec
   */
  insert(decl, prefix, prefixes) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec !== 2009) {
      return super.insert(decl, prefix, prefixes)
    }
    let already = decl.parent.some(
      i =>
        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'
    )
    if (already) {
      return undefined
    }

    let v = decl.value
    let orient, dir
    if (v === 'inherit' || v === 'initial' || v === 'unset') {
      orient = v
      dir = v
    } else {
      orient = v.includes('row') ? 'horizontal' : 'vertical'
      dir = v.includes('reverse') ? 'reverse' : 'normal'
    }

    let cloned = this.clone(decl)
    cloned.prop = prefix + 'box-orient'
    cloned.value = orient
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    decl.parent.insertBefore(decl, cloned)

    cloned = this.clone(decl)
    cloned.prop = prefix + 'box-direction'
    cloned.value = dir
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    return decl.parent.insertBefore(decl, cloned)
  }

  /**
   * Clean two properties for 2009 spec
   */
  old(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return [prefix + 'box-orient', prefix + 'box-direction']
    } else {
      return super.old(prop, prefix)
    }
  }
}

FlexDirection.names = ['flex-direction', 'box-direction', 'box-orient']

module.exports = FlexDirection

},{"../declaration":6,"./flex-spec":32}],29:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class FlexFlow extends Declaration {
  /**
   * Use two properties for 2009 spec
   */
  insert(decl, prefix, prefixes) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec !== 2009) {
      return super.insert(decl, prefix, prefixes)
    }
    let values = decl.value
      .split(/\s+/)
      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')
    if (values.length === 0) {
      return undefined
    }

    let already = decl.parent.some(
      i =>
        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'
    )
    if (already) {
      return undefined
    }

    let value = values[0]
    let orient = value.includes('row') ? 'horizontal' : 'vertical'
    let dir = value.includes('reverse') ? 'reverse' : 'normal'

    let cloned = this.clone(decl)
    cloned.prop = prefix + 'box-orient'
    cloned.value = orient
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    decl.parent.insertBefore(decl, cloned)

    cloned = this.clone(decl)
    cloned.prop = prefix + 'box-direction'
    cloned.value = dir
    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    return decl.parent.insertBefore(decl, cloned)
  }
}

FlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']

module.exports = FlexFlow

},{"../declaration":6,"./flex-spec":32}],30:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class Flex extends Declaration {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex'
  }

  /**
   * Return flex property for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return prefix + 'box-flex'
    }
    if (spec === 2012) {
      return prefix + 'flex-positive'
    }
    return super.prefixed(prop, prefix)
  }
}

Flex.names = ['flex-grow', 'flex-positive']

module.exports = Flex

},{"../declaration":6,"./flex-spec":32}],31:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class FlexShrink extends Declaration {
  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex-shrink'
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012) {
      return prefix + 'flex-negative'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  set(decl, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2012 || spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexShrink.names = ['flex-shrink', 'flex-negative']

module.exports = FlexShrink

},{"../declaration":6,"./flex-spec":32}],32:[function(require,module,exports){
/**
 * Return flexbox spec versions by prefix
 */
module.exports = function (prefix) {
  let spec
  if (prefix === '-webkit- 2009' || prefix === '-moz-') {
    spec = 2009
  } else if (prefix === '-ms-') {
    spec = 2012
  } else if (prefix === '-webkit-') {
    spec = 'final'
  }

  if (prefix === '-webkit- 2009') {
    prefix = '-webkit-'
  }

  return [spec, prefix]
}

},{}],33:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class FlexWrap extends Declaration {
  /**
   * Don't add prefix for 2009 spec
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec !== 2009) {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

FlexWrap.names = ['flex-wrap']

module.exports = FlexWrap

},{"../declaration":6,"./flex-spec":32}],34:[function(require,module,exports){
let list = require('postcss').list

let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class Flex extends Declaration {
  /**
   * Change property name for 2009 spec
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return prefix + 'box-flex'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'flex'
  }

  /**
   * Spec 2009 supports only first argument
   * Spec 2012 disallows unitless basis
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2009) {
      decl.value = list.space(decl.value)[0]
      decl.value = Flex.oldValues[decl.value] || decl.value
      return super.set(decl, prefix)
    }
    if (spec === 2012) {
      let components = list.space(decl.value)
      if (components.length === 3 && components[2] === '0') {
        decl.value = components.slice(0, 2).concat('0px').join(' ')
      }
    }
    return super.set(decl, prefix)
  }
}

Flex.names = ['flex', 'box-flex']

Flex.oldValues = {
  auto: '1',
  none: '0'
}

module.exports = Flex

},{"../declaration":6,"./flex-spec":32,"postcss":743}],35:[function(require,module,exports){
let Selector = require('../selector')

class Fullscreen extends Selector {
  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-full-screen'
    }
    if (prefix === '-moz-') {
      return ':-moz-full-screen'
    }
    return `:${prefix}fullscreen`
  }
}

Fullscreen.names = [':fullscreen']

module.exports = Fullscreen

},{"../selector":73}],36:[function(require,module,exports){
let parser = require('postcss-value-parser')
let range = require('normalize-range')

let OldValue = require('../old-value')
let Value = require('../value')
let utils = require('../utils')

let IS_DIRECTION = /top|left|right|bottom/gi

class Gradient extends Value {
  /**
   * Change degrees for webkit prefix
   */
  replace(string, prefix) {
    let ast = parser(string)
    for (let node of ast.nodes) {
      if (node.type === 'function' && node.value === this.name) {
        node.nodes = this.newDirection(node.nodes)
        node.nodes = this.normalize(node.nodes)
        if (prefix === '-webkit- old') {
          let changes = this.oldWebkit(node)
          if (!changes) {
            return false
          }
        } else {
          node.nodes = this.convertDirection(node.nodes)
          node.value = prefix + node.value
        }
      }
    }
    return ast.toString()
  }

  /**
   * Replace first token
   */
  replaceFirst(params, ...words) {
    let prefix = words.map(i => {
      if (i === ' ') {
        return { type: 'space', value: i }
      }
      return { type: 'word', value: i }
    })
    return prefix.concat(params.slice(1))
  }

  /**
   * Convert angle unit to deg
   */
  normalizeUnit(str, full) {
    let num = parseFloat(str)
    let deg = (num / full) * 360
    return `${deg}deg`
  }

  /**
   * Normalize angle
   */
  normalize(nodes) {
    if (!nodes[0]) return nodes

    if (/-?\d+(.\d+)?grad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 400)
    } else if (/-?\d+(.\d+)?rad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI)
    } else if (/-?\d+(.\d+)?turn/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 1)
    } else if (nodes[0].value.includes('deg')) {
      let num = parseFloat(nodes[0].value)
      num = range.wrap(0, 360, num)
      nodes[0].value = `${num}deg`
    }

    if (nodes[0].value === '0deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'top')
    } else if (nodes[0].value === '90deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'right')
    } else if (nodes[0].value === '180deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom')
    } else if (nodes[0].value === '270deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'left')
    }

    return nodes
  }

  /**
   * Replace old direction to new
   */
  newDirection(params) {
    if (params[0].value === 'to') {
      return params
    }
    IS_DIRECTION.lastIndex = 0 // reset search index of global regexp
    if (!IS_DIRECTION.test(params[0].value)) {
      return params
    }

    params.unshift(
      {
        type: 'word',
        value: 'to'
      },
      {
        type: 'space',
        value: ' '
      }
    )

    for (let i = 2; i < params.length; i++) {
      if (params[i].type === 'div') {
        break
      }
      if (params[i].type === 'word') {
        params[i].value = this.revertDirection(params[i].value)
      }
    }

    return params
  }

  /**
   * Look for at word
   */
  isRadial(params) {
    let state = 'before'
    for (let param of params) {
      if (state === 'before' && param.type === 'space') {
        state = 'at'
      } else if (state === 'at' && param.value === 'at') {
        state = 'after'
      } else if (state === 'after' && param.type === 'space') {
        return true
      } else if (param.type === 'div') {
        break
      } else {
        state = 'before'
      }
    }
    return false
  }

  /**
   * Change new direction to old
   */
  convertDirection(params) {
    if (params.length > 0) {
      if (params[0].value === 'to') {
        this.fixDirection(params)
      } else if (params[0].value.includes('deg')) {
        this.fixAngle(params)
      } else if (this.isRadial(params)) {
        this.fixRadial(params)
      }
    }
    return params
  }

  /**
   * Replace `to top left` to `bottom right`
   */
  fixDirection(params) {
    params.splice(0, 2)

    for (let param of params) {
      if (param.type === 'div') {
        break
      }
      if (param.type === 'word') {
        param.value = this.revertDirection(param.value)
      }
    }
  }

  /**
   * Add 90 degrees
   */
  fixAngle(params) {
    let first = params[0].value
    first = parseFloat(first)
    first = Math.abs(450 - first) % 360
    first = this.roundFloat(first, 3)
    params[0].value = `${first}deg`
  }

  /**
   * Fix radial direction syntax
   */
  fixRadial(params) {
    let first = []
    let second = []
    let a, b, c, i, next

    for (i = 0; i < params.length - 2; i++) {
      a = params[i]
      b = params[i + 1]
      c = params[i + 2]
      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {
        next = i + 3
        break
      } else {
        first.push(a)
      }
    }

    let div
    for (i = next; i < params.length; i++) {
      if (params[i].type === 'div') {
        div = params[i]
        break
      } else {
        second.push(params[i])
      }
    }

    params.splice(0, i, ...second, div, ...first)
  }

  revertDirection(word) {
    return Gradient.directions[word.toLowerCase()] || word
  }

  /**
   * Round float and save digits under dot
   */
  roundFloat(float, digits) {
    return parseFloat(float.toFixed(digits))
  }

  /**
   * Convert to old webkit syntax
   */
  oldWebkit(node) {
    let { nodes } = node
    let string = parser.stringify(node.nodes)

    if (this.name !== 'linear-gradient') {
      return false
    }
    if (nodes[0] && nodes[0].value.includes('deg')) {
      return false
    }
    if (
      string.includes('px') ||
      string.includes('-corner') ||
      string.includes('-side')
    ) {
      return false
    }

    let params = [[]]
    for (let i of nodes) {
      params[params.length - 1].push(i)
      if (i.type === 'div' && i.value === ',') {
        params.push([])
      }
    }

    this.oldDirection(params)
    this.colorStops(params)

    node.nodes = []
    for (let param of params) {
      node.nodes = node.nodes.concat(param)
    }

    node.nodes.unshift(
      { type: 'word', value: 'linear' },
      this.cloneDiv(node.nodes)
    )
    node.value = '-webkit-gradient'

    return true
  }

  /**
   * Change direction syntax to old webkit
   */
  oldDirection(params) {
    let div = this.cloneDiv(params[0])

    if (params[0][0].value !== 'to') {
      return params.unshift([
        { type: 'word', value: Gradient.oldDirections.bottom },
        div
      ])
    } else {
      let words = []
      for (let node of params[0].slice(2)) {
        if (node.type === 'word') {
          words.push(node.value.toLowerCase())
        }
      }

      words = words.join(' ')
      let old = Gradient.oldDirections[words] || words

      params[0] = [{ type: 'word', value: old }, div]
      return params[0]
    }
  }

  /**
   * Get div token from exists parameters
   */
  cloneDiv(params) {
    for (let i of params) {
      if (i.type === 'div' && i.value === ',') {
        return i
      }
    }
    return { type: 'div', value: ',', after: ' ' }
  }

  /**
   * Change colors syntax to old webkit
   */
  colorStops(params) {
    let result = []
    for (let i = 0; i < params.length; i++) {
      let pos
      let param = params[i]
      let item
      if (i === 0) {
        continue
      }

      let color = parser.stringify(param[0])
      if (param[1] && param[1].type === 'word') {
        pos = param[1].value
      } else if (param[2] && param[2].type === 'word') {
        pos = param[2].value
      }

      let stop
      if (i === 1 && (!pos || pos === '0%')) {
        stop = `from(${color})`
      } else if (i === params.length - 1 && (!pos || pos === '100%')) {
        stop = `to(${color})`
      } else if (pos) {
        stop = `color-stop(${pos}, ${color})`
      } else {
        stop = `color-stop(${color})`
      }

      let div = param[param.length - 1]
      params[i] = [{ type: 'word', value: stop }]
      if (div.type === 'div' && div.value === ',') {
        item = params[i].push(div)
      }
      result.push(item)
    }
    return result
  }

  /**
   * Remove old WebKit gradient too
   */
  old(prefix) {
    if (prefix === '-webkit-') {
      let type = this.name === 'linear-gradient' ? 'linear' : 'radial'
      let string = '-gradient'
      let regexp = utils.regexp(
        `-webkit-(${type}-gradient|gradient\\(\\s*${type})`,
        false
      )

      return new OldValue(this.name, prefix + this.name, string, regexp)
    } else {
      return super.old(prefix)
    }
  }

  /**
   * Do not add non-webkit prefixes for list-style and object
   */
  add(decl, prefix) {
    let p = decl.prop
    if (p.includes('mask')) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return super.add(decl, prefix)
      }
    } else if (
      p === 'list-style' ||
      p === 'list-style-image' ||
      p === 'content'
    ) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return super.add(decl, prefix)
      }
    } else {
      return super.add(decl, prefix)
    }
    return undefined
  }
}

Gradient.names = [
  'linear-gradient',
  'repeating-linear-gradient',
  'radial-gradient',
  'repeating-radial-gradient'
]

Gradient.directions = {
  top: 'bottom',
  left: 'right',
  bottom: 'top',
  right: 'left'
}

// Direction to replace
Gradient.oldDirections = {
  'top': 'left bottom, left top',
  'left': 'right top, left top',
  'bottom': 'left top, left bottom',
  'right': 'left top, right top',

  'top right': 'left bottom, right top',
  'top left': 'right bottom, left top',
  'right top': 'left bottom, right top',
  'right bottom': 'left top, right bottom',
  'bottom right': 'left top, right bottom',
  'bottom left': 'right top, left bottom',
  'left top': 'right bottom, left top',
  'left bottom': 'right top, left bottom'
}

module.exports = Gradient

},{"../old-value":68,"../utils":76,"../value":77,"normalize-range":661,"postcss-value-parser":723}],37:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('./grid-utils')

class GridArea extends Declaration {
  /**
   * Translate grid-area to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let values = utils.parse(decl)

    let [rowStart, rowSpan] = utils.translate(values, 0, 2)
    let [columnStart, columnSpan] = utils.translate(values, 1, 3)

    ;[
      ['grid-row', rowStart],
      ['grid-row-span', rowSpan],
      ['grid-column', columnStart],
      ['grid-column-span', columnSpan]
    ].forEach(([prop, value]) => {
      utils.insertDecl(decl, prop, value)
    })

    utils.warnTemplateSelectorNotFound(decl, result)
    utils.warnIfGridRowColumnExists(decl, result)

    return undefined
  }
}

GridArea.names = ['grid-area']

module.exports = GridArea

},{"../declaration":6,"./grid-utils":46}],38:[function(require,module,exports){
let Declaration = require('../declaration')

class GridColumnAlign extends Declaration {
  /**
   * Do not prefix flexbox values
   */
  check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'grid-column-align'
  }

  /**
   * Change IE property back
   */
  normalize() {
    return 'justify-self'
  }
}

GridColumnAlign.names = ['grid-column-align']

module.exports = GridColumnAlign

},{"../declaration":6}],39:[function(require,module,exports){
let Declaration = require('../declaration')

class GridEnd extends Declaration {
  /**
   * Change repeating syntax for IE
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let clonedDecl = this.clone(decl)

    let startProp = decl.prop.replace(/end$/, 'start')
    let spanProp = prefix + decl.prop.replace(/end$/, 'span')

    if (decl.parent.some(i => i.prop === spanProp)) {
      return undefined
    }

    clonedDecl.prop = spanProp

    if (decl.value.includes('span')) {
      clonedDecl.value = decl.value.replace(/span\s/i, '')
    } else {
      let startDecl
      decl.parent.walkDecls(startProp, d => {
        startDecl = d
      })
      if (startDecl) {
        let value = Number(decl.value) - Number(startDecl.value) + ''
        clonedDecl.value = value
      } else {
        decl.warn(
          result,
          `Can not prefix ${decl.prop} (${startProp} is not found)`
        )
      }
    }

    decl.cloneBefore(clonedDecl)

    return undefined
  }
}

GridEnd.names = ['grid-row-end', 'grid-column-end']

module.exports = GridEnd

},{"../declaration":6}],40:[function(require,module,exports){
let Declaration = require('../declaration')

class GridRowAlign extends Declaration {
  /**
   * Do not prefix flexbox values
   */
  check(decl) {
    return !decl.value.includes('flex-') && decl.value !== 'baseline'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'grid-row-align'
  }

  /**
   * Change IE property back
   */
  normalize() {
    return 'align-self'
  }
}

GridRowAlign.names = ['grid-row-align']

module.exports = GridRowAlign

},{"../declaration":6}],41:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('./grid-utils')

class GridRowColumn extends Declaration {
  /**
   * Translate grid-row / grid-column to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let values = utils.parse(decl)
    let [start, span] = utils.translate(values, 0, 1)

    let hasStartValueSpan = values[0] && values[0].includes('span')

    if (hasStartValueSpan) {
      span = values[0].join('').replace(/\D/g, '')
    }

    ;[
      [decl.prop, start],
      [`${decl.prop}-span`, span]
    ].forEach(([prop, value]) => {
      utils.insertDecl(decl, prop, value)
    })

    return undefined
  }
}

GridRowColumn.names = ['grid-row', 'grid-column']

module.exports = GridRowColumn

},{"../declaration":6,"./grid-utils":46}],42:[function(require,module,exports){
let Declaration = require('../declaration')
let {
  prefixTrackProp,
  prefixTrackValue,
  autoplaceGridItems,
  getGridGap,
  inheritGridGap
} = require('./grid-utils')
let Processor = require('../processor')

class GridRowsColumns extends Declaration {
  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return prefixTrackProp({ prop, prefix })
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Change IE property back
   */
  normalize(prop) {
    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1')
  }

  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let { parent, prop, value } = decl
    let isRowProp = prop.includes('rows')
    let isColumnProp = prop.includes('columns')

    let hasGridTemplate = parent.some(
      i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'
    )

    /**
     * Not to prefix rows declaration if grid-template(-areas) is present
     */
    if (hasGridTemplate && isRowProp) {
      return false
    }

    let processor = new Processor({ options: {} })
    let status = processor.gridStatus(parent, result)
    let gap = getGridGap(decl)
    gap = inheritGridGap(decl, gap) || gap

    let gapValue = isRowProp ? gap.row : gap.column

    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {
      gapValue = null
    }

    let prefixValue = prefixTrackValue({
      value,
      gap: gapValue
    })

    /**
     * Insert prefixes
     */
    decl.cloneBefore({
      prop: prefixTrackProp({ prop, prefix }),
      value: prefixValue
    })

    let autoflow = parent.nodes.find(i => i.prop === 'grid-auto-flow')
    let autoflowValue = 'row'

    if (autoflow && !processor.disabled(autoflow, result)) {
      autoflowValue = autoflow.value.trim()
    }
    if (status === 'autoplace') {
      /**
       * Show warning if grid-template-rows decl is not found
       */
      let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')

      if (!rowDecl && hasGridTemplate) {
        return undefined
      } else if (!rowDecl && !hasGridTemplate) {
        decl.warn(
          result,
          'Autoplacement does not work without grid-template-rows property'
        )
        return undefined
      }

      /**
       * Show warning if grid-template-columns decl is not found
       */
      let columnDecl = parent.nodes.find(i => {
        return i.prop === 'grid-template-columns'
      })
      if (!columnDecl && !hasGridTemplate) {
        decl.warn(
          result,
          'Autoplacement does not work without grid-template-columns property'
        )
      }

      /**
       * Autoplace grid items
       */
      if (isColumnProp && !hasGridTemplate) {
        autoplaceGridItems(decl, result, gap, autoflowValue)
      }
    }

    return undefined
  }
}

GridRowsColumns.names = [
  'grid-template-rows',
  'grid-template-columns',
  'grid-rows',
  'grid-columns'
]

module.exports = GridRowsColumns

},{"../declaration":6,"../processor":71,"./grid-utils":46}],43:[function(require,module,exports){
let Declaration = require('../declaration')

class GridStart extends Declaration {
  /**
   * Do not add prefix for unsupported value in IE
   */
  check(decl) {
    let value = decl.value
    return !value.includes('/') || value.includes('span')
  }

  /**
   * Return a final spec property
   */
  normalize(prop) {
    return prop.replace('-start', '')
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    let result = super.prefixed(prop, prefix)
    if (prefix === '-ms-') {
      result = result.replace('-start', '')
    }
    return result
  }
}

GridStart.names = ['grid-row-start', 'grid-column-start']

module.exports = GridStart

},{"../declaration":6}],44:[function(require,module,exports){
let Declaration = require('../declaration')
let {
  parseGridAreas,
  warnMissedAreas,
  prefixTrackProp,
  prefixTrackValue,
  getGridGap,
  warnGridGap,
  inheritGridGap
} = require('./grid-utils')

function getGridRows(tpl) {
  return tpl
    .trim()
    .slice(1, -1)
    .split(/["']\s*["']?/g)
}

class GridTemplateAreas extends Declaration {
  /**
   * Translate grid-template-areas to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    let hasColumns = false
    let hasRows = false
    let parent = decl.parent
    let gap = getGridGap(decl)
    gap = inheritGridGap(decl, gap) || gap

    // remove already prefixed rows
    // to prevent doubling prefixes
    parent.walkDecls(/-ms-grid-rows/, i => i.remove())

    // add empty tracks to rows
    parent.walkDecls(/grid-template-(rows|columns)/, trackDecl => {
      if (trackDecl.prop === 'grid-template-rows') {
        hasRows = true
        let { prop, value } = trackDecl
        trackDecl.cloneBefore({
          prop: prefixTrackProp({ prop, prefix }),
          value: prefixTrackValue({ value, gap: gap.row })
        })
      } else {
        hasColumns = true
      }
    })

    let gridRows = getGridRows(decl.value)

    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: prefixTrackValue({
          value: `repeat(${gridRows.length}, auto)`,
          gap: gap.row
        }),
        raws: {}
      })
    }

    // warnings
    warnGridGap({
      gap,
      hasColumns,
      decl,
      result
    })

    let areas = parseGridAreas({
      rows: gridRows,
      gap
    })

    warnMissedAreas(areas, decl, result)

    return decl
  }
}

GridTemplateAreas.names = ['grid-template-areas']

module.exports = GridTemplateAreas

},{"../declaration":6,"./grid-utils":46}],45:[function(require,module,exports){
let Declaration = require('../declaration')
let {
  parseTemplate,
  warnMissedAreas,
  getGridGap,
  warnGridGap,
  inheritGridGap
} = require('./grid-utils')

class GridTemplate extends Declaration {
  /**
   * Translate grid-template to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    if (decl.parent.some(i => i.prop === '-ms-grid-rows')) {
      return undefined
    }

    let gap = getGridGap(decl)

    /**
     * we must insert inherited gap values in some cases:
     * if we are inside media query && if we have no grid-gap value
     */
    let inheritedGap = inheritGridGap(decl, gap)

    let { rows, columns, areas } = parseTemplate({
      decl,
      gap: inheritedGap || gap
    })

    let hasAreas = Object.keys(areas).length > 0
    let hasRows = Boolean(rows)
    let hasColumns = Boolean(columns)

    warnGridGap({
      gap,
      hasColumns,
      decl,
      result
    })

    warnMissedAreas(areas, decl, result)

    if ((hasRows && hasColumns) || hasAreas) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: rows,
        raws: {}
      })
    }

    if (hasColumns) {
      decl.cloneBefore({
        prop: '-ms-grid-columns',
        value: columns,
        raws: {}
      })
    }

    return decl
  }
}

GridTemplate.names = ['grid-template']

module.exports = GridTemplate

},{"../declaration":6,"./grid-utils":46}],46:[function(require,module,exports){
let parser = require('postcss-value-parser')
let list = require('postcss').list

let uniq = require('../utils').uniq
let escapeRegexp = require('../utils').escapeRegexp
let splitSelector = require('../utils').splitSelector

function convert(value) {
  if (
    value &&
    value.length === 2 &&
    value[0] === 'span' &&
    parseInt(value[1], 10) > 0
  ) {
    return [false, parseInt(value[1], 10)]
  }

  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {
    return [parseInt(value[0], 10), false]
  }

  return [false, false]
}

exports.translate = translate

function translate(values, startIndex, endIndex) {
  let startValue = values[startIndex]
  let endValue = values[endIndex]

  if (!startValue) {
    return [false, false]
  }

  let [start, spanStart] = convert(startValue)
  let [end, spanEnd] = convert(endValue)

  if (start && !endValue) {
    return [start, false]
  }

  if (spanStart && end) {
    return [end - spanStart, spanStart]
  }

  if (start && spanEnd) {
    return [start, spanEnd]
  }

  if (start && end) {
    return [start, end - start]
  }

  return [false, false]
}

exports.parse = parse

function parse(decl) {
  let node = parser(decl.value)

  let values = []
  let current = 0
  values[current] = []

  for (let i of node.nodes) {
    if (i.type === 'div') {
      current += 1
      values[current] = []
    } else if (i.type === 'word') {
      values[current].push(i.value)
    }
  }

  return values
}

exports.insertDecl = insertDecl

function insertDecl(decl, prop, value) {
  if (value && !decl.parent.some(i => i.prop === `-ms-${prop}`)) {
    decl.cloneBefore({
      prop: `-ms-${prop}`,
      value: value.toString()
    })
  }
}

// Track transforms

exports.prefixTrackProp = prefixTrackProp

function prefixTrackProp({ prop, prefix }) {
  return prefix + prop.replace('template-', '')
}

function transformRepeat({ nodes }, { gap }) {
  let { count, size } = nodes.reduce(
    (result, node) => {
      if (node.type === 'div' && node.value === ',') {
        result.key = 'size'
      } else {
        result[result.key].push(parser.stringify(node))
      }
      return result
    },
    {
      key: 'count',
      size: [],
      count: []
    }
  )

  // insert gap values
  if (gap) {
    size = size.filter(i => i.trim())
    let val = []
    for (let i = 1; i <= count; i++) {
      size.forEach((item, index) => {
        if (index > 0 || i > 1) {
          val.push(gap)
        }
        val.push(item)
      })
    }

    return val.join(' ')
  }

  return `(${size.join('')})[${count.join('')}]`
}

exports.prefixTrackValue = prefixTrackValue

function prefixTrackValue({ value, gap }) {
  let result = parser(value).nodes.reduce((nodes, node) => {
    if (node.type === 'function' && node.value === 'repeat') {
      return nodes.concat({
        type: 'word',
        value: transformRepeat(node, { gap })
      })
    }
    if (gap && node.type === 'space') {
      return nodes.concat(
        {
          type: 'space',
          value: ' '
        },
        {
          type: 'word',
          value: gap
        },
        node
      )
    }
    return nodes.concat(node)
  }, [])

  return parser.stringify(result)
}

// Parse grid-template-areas

let DOTS = /^\.+$/

function track(start, end) {
  return { start, end, span: end - start }
}

function getColumns(line) {
  return line.trim().split(/\s+/g)
}

exports.parseGridAreas = parseGridAreas

function parseGridAreas({ rows, gap }) {
  return rows.reduce((areas, line, rowIndex) => {
    if (gap.row) rowIndex *= 2

    if (line.trim() === '') return areas

    getColumns(line).forEach((area, columnIndex) => {
      if (DOTS.test(area)) return

      if (gap.column) columnIndex *= 2

      if (typeof areas[area] === 'undefined') {
        areas[area] = {
          column: track(columnIndex + 1, columnIndex + 2),
          row: track(rowIndex + 1, rowIndex + 2)
        }
      } else {
        let { column, row } = areas[area]

        column.start = Math.min(column.start, columnIndex + 1)
        column.end = Math.max(column.end, columnIndex + 2)
        column.span = column.end - column.start

        row.start = Math.min(row.start, rowIndex + 1)
        row.end = Math.max(row.end, rowIndex + 2)
        row.span = row.end - row.start
      }
    })

    return areas
  }, {})
}

// Parse grid-template

function testTrack(node) {
  return node.type === 'word' && /^\[.+]$/.test(node.value)
}

function verifyRowSize(result) {
  if (result.areas.length > result.rows.length) {
    result.rows.push('auto')
  }
  return result
}

exports.parseTemplate = parseTemplate

function parseTemplate({ decl, gap }) {
  let gridTemplate = parser(decl.value).nodes.reduce(
    (result, node) => {
      let { type, value } = node

      if (testTrack(node) || type === 'space') return result

      // area
      if (type === 'string') {
        result = verifyRowSize(result)
        result.areas.push(value)
      }

      // values and function
      if (type === 'word' || type === 'function') {
        result[result.key].push(parser.stringify(node))
      }

      // divider(/)
      if (type === 'div' && value === '/') {
        result.key = 'columns'
        result = verifyRowSize(result)
      }

      return result
    },
    {
      key: 'rows',
      columns: [],
      rows: [],
      areas: []
    }
  )

  return {
    areas: parseGridAreas({
      rows: gridTemplate.areas,
      gap
    }),
    columns: prefixTrackValue({
      value: gridTemplate.columns.join(' '),
      gap: gap.column
    }),
    rows: prefixTrackValue({
      value: gridTemplate.rows.join(' '),
      gap: gap.row
    })
  }
}

// Insert parsed grid areas

/**
 * Get an array of -ms- prefixed props and values
 * @param  {Object} [area] area object with column and row data
 * @param  {Boolean} [addRowSpan] should we add grid-column-row value?
 * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?
 * @return {Array<Object>}
 */
function getMSDecls(area, addRowSpan = false, addColumnSpan = false) {
  let result = [
    {
      prop: '-ms-grid-row',
      value: String(area.row.start)
    }
  ]
  if (area.row.span > 1 || addRowSpan) {
    result.push({
      prop: '-ms-grid-row-span',
      value: String(area.row.span)
    })
  }
  result.push({
    prop: '-ms-grid-column',
    value: String(area.column.start)
  })
  if (area.column.span > 1 || addColumnSpan) {
    result.push({
      prop: '-ms-grid-column-span',
      value: String(area.column.span)
    })
  }
  return result
}

function getParentMedia(parent) {
  if (parent.type === 'atrule' && parent.name === 'media') {
    return parent
  }
  if (!parent.parent) {
    return false
  }
  return getParentMedia(parent.parent)
}

/**
 * change selectors for rules with duplicate grid-areas.
 * @param  {Array<Rule>} rules
 * @param  {Array<String>} templateSelectors
 * @return {Array<Rule>} rules with changed selectors
 */
function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {
  ruleSelectors = ruleSelectors.map(selector => {
    let selectorBySpace = list.space(selector)
    let selectorByComma = list.comma(selector)

    if (selectorBySpace.length > selectorByComma.length) {
      selector = selectorBySpace.slice(-1).join('')
    }
    return selector
  })

  return ruleSelectors.map(ruleSelector => {
    let newSelector = templateSelectors.map((tplSelector, index) => {
      let space = index === 0 ? '' : ' '
      return `${space}${tplSelector} > ${ruleSelector}`
    })

    return newSelector
  })
}

/**
 * check if selector of rules are equal
 * @param  {Rule} ruleA
 * @param  {Rule} ruleB
 * @return {Boolean}
 */
function selectorsEqual(ruleA, ruleB) {
  return ruleA.selectors.some(sel => {
    return ruleB.selectors.includes(sel)
  })
}

/**
 * Parse data from all grid-template(-areas) declarations
 * @param  {Root} css css root
 * @return {Object} parsed data
 */
function parseGridTemplatesData(css) {
  let parsed = []

  // we walk through every grid-template(-areas) declaration and store
  // data with the same area names inside the item
  css.walkDecls(/grid-template(-areas)?$/, d => {
    let rule = d.parent
    let media = getParentMedia(rule)
    let gap = getGridGap(d)
    let inheritedGap = inheritGridGap(d, gap)
    let { areas } = parseTemplate({ decl: d, gap: inheritedGap || gap })
    let areaNames = Object.keys(areas)

    // skip node if it doesn't have areas
    if (areaNames.length === 0) {
      return true
    }

    // check parsed array for item that include the same area names
    // return index of that item
    let index = parsed.reduce((acc, { allAreas }, idx) => {
      let hasAreas = allAreas && areaNames.some(area => allAreas.includes(area))
      return hasAreas ? idx : acc
    }, null)

    if (index !== null) {
      // index is found, add the grid-template data to that item
      let { allAreas, rules } = parsed[index]

      // check if rule has no duplicate area names
      let hasNoDuplicates = rules.some(r => {
        return r.hasDuplicates === false && selectorsEqual(r, rule)
      })

      let duplicatesFound = false

      // check need to gather all duplicate area names
      let duplicateAreaNames = rules.reduce((acc, r) => {
        if (!r.params && selectorsEqual(r, rule)) {
          duplicatesFound = true
          return r.duplicateAreaNames
        }
        if (!duplicatesFound) {
          areaNames.forEach(name => {
            if (r.areas[name]) {
              acc.push(name)
            }
          })
        }
        return uniq(acc)
      }, [])

      // update grid-row/column-span values for areas with duplicate
      // area names. @see #1084 and #1146
      rules.forEach(r => {
        areaNames.forEach(name => {
          let area = r.areas[name]
          if (area && area.row.span !== areas[name].row.span) {
            areas[name].row.updateSpan = true
          }

          if (area && area.column.span !== areas[name].column.span) {
            areas[name].column.updateSpan = true
          }
        })
      })

      parsed[index].allAreas = uniq([...allAreas, ...areaNames])
      parsed[index].rules.push({
        hasDuplicates: !hasNoDuplicates,
        params: media.params,
        selectors: rule.selectors,
        node: rule,
        duplicateAreaNames,
        areas
      })
    } else {
      // index is NOT found, push the new item to the parsed array
      parsed.push({
        allAreas: areaNames,
        areasCount: 0,
        rules: [
          {
            hasDuplicates: false,
            duplicateRules: [],
            params: media.params,
            selectors: rule.selectors,
            node: rule,
            duplicateAreaNames: [],
            areas
          }
        ]
      })
    }

    return undefined
  })

  return parsed
}

/**
 * insert prefixed grid-area declarations
 * @param  {Root}  css css root
 * @param  {Function} isDisabled check if the rule is disabled
 * @return {void}
 */
exports.insertAreas = insertAreas

function insertAreas(css, isDisabled) {
  // parse grid-template declarations
  let gridTemplatesData = parseGridTemplatesData(css)

  // return undefined if no declarations found
  if (gridTemplatesData.length === 0) {
    return undefined
  }

  // we need to store the rules that we will insert later
  let rulesToInsert = {}

  css.walkDecls('grid-area', gridArea => {
    let gridAreaRule = gridArea.parent
    let hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row'
    let gridAreaMedia = getParentMedia(gridAreaRule)

    if (isDisabled(gridArea)) {
      return undefined
    }

    let gridAreaRuleIndex = css.index(gridAreaMedia || gridAreaRule)

    let value = gridArea.value
    // found the data that matches grid-area identifier
    let data = gridTemplatesData.filter(d => d.allAreas.includes(value))[0]

    if (!data) {
      return true
    }

    let lastArea = data.allAreas[data.allAreas.length - 1]
    let selectorBySpace = list.space(gridAreaRule.selector)
    let selectorByComma = list.comma(gridAreaRule.selector)
    let selectorIsComplex =
      selectorBySpace.length > 1 &&
      selectorBySpace.length > selectorByComma.length

    // prevent doubling of prefixes
    if (hasPrefixedRow) {
      return false
    }

    // create the empty object with the key as the last area name
    // e.g if we have templates with "a b c" values, "c" will be the last area
    if (!rulesToInsert[lastArea]) {
      rulesToInsert[lastArea] = {}
    }

    let lastRuleIsSet = false

    // walk through every grid-template rule data
    for (let rule of data.rules) {
      let area = rule.areas[value]
      let hasDuplicateName = rule.duplicateAreaNames.includes(value)

      // if we can't find the area name, update lastRule and continue
      if (!area) {
        let lastRule = rulesToInsert[lastArea].lastRule
        let lastRuleIndex
        if (lastRule) {
          lastRuleIndex = css.index(lastRule)
        } else {
          /* istanbul ignore next */
          lastRuleIndex = -1
        }

        if (gridAreaRuleIndex > lastRuleIndex) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule
        }
        continue
      }

      // for grid-templates inside media rule we need to create empty
      // array to push prefixed grid-area rules later
      if (rule.params && !rulesToInsert[lastArea][rule.params]) {
        rulesToInsert[lastArea][rule.params] = []
      }

      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {
        // grid-template has no duplicates and not inside media rule

        getMSDecls(area, false, false)
          .reverse()
          .forEach(i =>
            gridAreaRule.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          )

        rulesToInsert[lastArea].lastRule = gridAreaRule
        lastRuleIsSet = true
      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {
        // grid-template has duplicates and not inside media rule
        let cloned = gridAreaRule.clone()
        cloned.removeAll()

        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            cloned.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          )

        cloned.selectors = changeDuplicateAreaSelectors(
          cloned.selectors,
          rule.selectors
        )

        if (rulesToInsert[lastArea].lastRule) {
          rulesToInsert[lastArea].lastRule.after(cloned)
        }
        rulesToInsert[lastArea].lastRule = cloned
        lastRuleIsSet = true
      } else if (
        rule.hasDuplicates &&
        !rule.params &&
        selectorIsComplex &&
        gridAreaRule.selector.includes(rule.selectors[0])
      ) {
        // grid-template has duplicates and not inside media rule
        // and the selector is complex
        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, d => d.remove())
        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            gridAreaRule.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          )
      } else if (rule.params) {
        // grid-template is inside media rule
        // if we're inside media rule, we need to store prefixed rules
        // inside rulesToInsert object to be able to preserve the order of media
        // rules and merge them easily
        let cloned = gridAreaRule.clone()
        cloned.removeAll()

        getMSDecls(area, area.row.updateSpan, area.column.updateSpan)
          .reverse()
          .forEach(i =>
            cloned.prepend(
              Object.assign(i, {
                raws: {
                  between: gridArea.raws.between
                }
              })
            )
          )

        if (rule.hasDuplicates && hasDuplicateName) {
          cloned.selectors = changeDuplicateAreaSelectors(
            cloned.selectors,
            rule.selectors
          )
        }

        cloned.raws = rule.node.raws

        if (css.index(rule.node.parent) > gridAreaRuleIndex) {
          // append the prefixed rules right inside media rule
          // with grid-template
          rule.node.parent.append(cloned)
        } else {
          // store the rule to insert later
          rulesToInsert[lastArea][rule.params].push(cloned)
        }

        // set new rule as last rule ONLY if we didn't set lastRule for
        // this grid-area before
        if (!lastRuleIsSet) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule
        }
      }
    }

    return undefined
  })

  // append stored rules inside the media rules
  Object.keys(rulesToInsert).forEach(area => {
    let data = rulesToInsert[area]
    let lastRule = data.lastRule
    Object.keys(data)
      .reverse()
      .filter(p => p !== 'lastRule')
      .forEach(params => {
        if (data[params].length > 0 && lastRule) {
          lastRule.after({ name: 'media', params })
          lastRule.next().append(data[params])
        }
      })
  })

  return undefined
}

/**
 * Warn user if grid area identifiers are not found
 * @param  {Object} areas
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
exports.warnMissedAreas = warnMissedAreas

function warnMissedAreas(areas, decl, result) {
  let missed = Object.keys(areas)

  decl.root().walkDecls('grid-area', gridArea => {
    missed = missed.filter(e => e !== gridArea.value)
  })

  if (missed.length > 0) {
    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '))
  }

  return undefined
}

/**
 * compare selectors with grid-area rule and grid-template rule
 * show warning if grid-template selector is not found
 * (this function used for grid-area rule)
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
exports.warnTemplateSelectorNotFound = warnTemplateSelectorNotFound

function warnTemplateSelectorNotFound(decl, result) {
  let rule = decl.parent
  let root = decl.root()
  let duplicatesFound = false

  // slice selector array. Remove the last part (for comparison)
  let slicedSelectorArr = list
    .space(rule.selector)
    .filter(str => str !== '>')
    .slice(0, -1)

  // we need to compare only if selector is complex.
  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex
  if (slicedSelectorArr.length > 0) {
    let gridTemplateFound = false
    let foundAreaSelector = null

    root.walkDecls(/grid-template(-areas)?$/, d => {
      let parent = d.parent
      let templateSelectors = parent.selectors

      let { areas } = parseTemplate({ decl: d, gap: getGridGap(d) })
      let hasArea = areas[decl.value]

      // find the the matching selectors
      for (let tplSelector of templateSelectors) {
        if (gridTemplateFound) {
          break
        }
        let tplSelectorArr = list.space(tplSelector).filter(str => str !== '>')

        gridTemplateFound = tplSelectorArr.every(
          (item, idx) => item === slicedSelectorArr[idx]
        )
      }

      if (gridTemplateFound || !hasArea) {
        return true
      }

      if (!foundAreaSelector) {
        foundAreaSelector = parent.selector
      }

      // if we found the duplicate area with different selector
      if (foundAreaSelector && foundAreaSelector !== parent.selector) {
        duplicatesFound = true
      }

      return undefined
    })

    // warn user if we didn't find template
    if (!gridTemplateFound && duplicatesFound) {
      decl.warn(
        result,
        'Autoprefixer cannot find a grid-template ' +
          `containing the duplicate grid-area "${decl.value}" ` +
          `with full selector matching: ${slicedSelectorArr.join(' ')}`
      )
    }
  }
}

/**
 * warn user if both grid-area and grid-(row|column)
 * declarations are present in the same rule
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */
exports.warnIfGridRowColumnExists = warnIfGridRowColumnExists

function warnIfGridRowColumnExists(decl, result) {
  let rule = decl.parent
  let decls = []
  rule.walkDecls(/^grid-(row|column)/, d => {
    if (
      !d.prop.endsWith('-end') &&
      !d.value.startsWith('span') &&
      !d.prop.endsWith('-gap')
    ) {
      decls.push(d)
    }
  })
  if (decls.length > 0) {
    decls.forEach(d => {
      d.warn(
        result,
        'You already have a grid-area declaration present in the rule. ' +
          `You should use either grid-area or ${d.prop}, not both`
      )
    })
  }

  return undefined
}

// Gap utils

exports.getGridGap = getGridGap

function getGridGap(decl) {
  let gap = {}

  // try to find gap
  let testGap = /^(grid-)?((row|column)-)?gap$/
  decl.parent.walkDecls(testGap, ({ prop, value }) => {
    if (/^(grid-)?gap$/.test(prop)) {
      let [row, , column] = parser(value).nodes

      gap.row = row && parser.stringify(row)
      gap.column = column ? parser.stringify(column) : gap.row
    }
    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value
    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value
  })

  return gap
}

/**
 * parse media parameters (for example 'min-width: 500px')
 * @param  {String} params parameter to parse
 * @return {}
 */
function parseMediaParams(params) {
  if (!params) {
    return []
  }
  let parsed = parser(params)
  let prop
  let value

  parsed.walk(node => {
    if (node.type === 'word' && /min|max/g.test(node.value)) {
      prop = node.value
    } else if (node.value.includes('px')) {
      value = parseInt(node.value.replace(/\D/g, ''))
    }
  })

  return [prop, value]
}

/**
 * Compare the selectors and decide if we
 * need to inherit gap from compared selector or not.
 * @type {String} selA
 * @type {String} selB
 * @return {Boolean}
 */
function shouldInheritGap(selA, selB) {
  let result

  // get arrays of selector split in 3-deep array
  let splitSelectorArrA = splitSelector(selA)
  let splitSelectorArrB = splitSelector(selB)

  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {
    // abort if selectorA has lower descendant specificity then selectorB
    // (e.g '.grid' and '.hello .world .grid')
    return false
  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {
    // if selectorA has higher descendant specificity then selectorB
    // (e.g '.foo .bar .grid' and '.grid')

    let idx = splitSelectorArrA[0].reduce((res, [item], index) => {
      let firstSelectorPart = splitSelectorArrB[0][0][0]
      if (item === firstSelectorPart) {
        return index
      }
      return false
    }, false)

    if (idx) {
      result = splitSelectorArrB[0].every((arr, index) => {
        return arr.every(
          (part, innerIndex) =>
            // because selectorA has more space elements, we need to slice
            // selectorA array by 'idx' number to compare them
            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part
        )
      })
    }
  } else {
    // if selectorA has the same descendant specificity as selectorB
    // this condition covers cases such as: '.grid.foo.bar' and '.grid'
    result = splitSelectorArrB.some(byCommaArr => {
      return byCommaArr.every((bySpaceArr, index) => {
        return bySpaceArr.every(
          (part, innerIndex) => splitSelectorArrA[0][index][innerIndex] === part
        )
      })
    })
  }

  return result
}
/**
 * inherit grid gap values from the closest rule above
 * with the same selector
 * @param  {Declaration} decl
 * @param  {Object} gap gap values
 * @return {Object | Boolean} return gap values or false (if not found)
 */
exports.inheritGridGap = inheritGridGap

function inheritGridGap(decl, gap) {
  let rule = decl.parent
  let mediaRule = getParentMedia(rule)
  let root = rule.root()

  // get an array of selector split in 3-deep array
  let splitSelectorArr = splitSelector(rule.selector)

  // abort if the rule already has gaps
  if (Object.keys(gap).length > 0) {
    return false
  }

  // e.g ['min-width']
  let [prop] = parseMediaParams(mediaRule.params)

  let lastBySpace = splitSelectorArr[0]

  // get escaped value from the selector
  // if we have '.grid-2.foo.bar' selector, will be '\.grid\-2'
  let escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0])

  let regexp = new RegExp(`(${escaped}$)|(${escaped}[,.])`)

  // find the closest rule with the same selector
  let closestRuleGap
  root.walkRules(regexp, r => {
    let gridGap

    // abort if are checking the same rule
    if (rule.toString() === r.toString()) {
      return false
    }

    // find grid-gap values
    r.walkDecls('grid-gap', d => (gridGap = getGridGap(d)))

    // skip rule without gaps
    if (!gridGap || Object.keys(gridGap).length === 0) {
      return true
    }

    // skip rules that should not be inherited from
    if (!shouldInheritGap(rule.selector, r.selector)) {
      return true
    }

    let media = getParentMedia(r)
    if (media) {
      // if we are inside media, we need to check that media props match
      // e.g ('min-width' === 'min-width')
      let propToCompare = parseMediaParams(media.params)[0]
      if (propToCompare === prop) {
        closestRuleGap = gridGap
        return true
      }
    } else {
      closestRuleGap = gridGap
      return true
    }

    return undefined
  })

  // if we find the closest gap object
  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {
    return closestRuleGap
  }
  return false
}

exports.warnGridGap = warnGridGap

function warnGridGap({ gap, hasColumns, decl, result }) {
  let hasBothGaps = gap.row && gap.column
  if (!hasColumns && (hasBothGaps || (gap.column && !gap.row))) {
    delete gap.column
    decl.warn(
      result,
      'Can not implement grid-gap without grid-template-columns'
    )
  }
}

/**
 * normalize the grid-template-rows/columns values
 * @param  {String} str grid-template-rows/columns value
 * @return {Array} normalized array with values
 * @example
 * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')
 * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']
 */
function normalizeRowColumn(str) {
  let normalized = parser(str).nodes.reduce((result, node) => {
    if (node.type === 'function' && node.value === 'repeat') {
      let key = 'count'

      let [count, value] = node.nodes.reduce(
        (acc, n) => {
          if (n.type === 'word' && key === 'count') {
            acc[0] = Math.abs(parseInt(n.value))
            return acc
          }
          if (n.type === 'div' && n.value === ',') {
            key = 'value'
            return acc
          }
          if (key === 'value') {
            acc[1] += parser.stringify(n)
          }
          return acc
        },
        [0, '']
      )

      if (count) {
        for (let i = 0; i < count; i++) {
          result.push(value)
        }
      }

      return result
    }
    if (node.type === 'space') {
      return result
    }
    return result.concat(parser.stringify(node))
  }, [])

  return normalized
}

exports.autoplaceGridItems = autoplaceGridItems

/**
 * Autoplace grid items
 * @param {Declaration} decl
 * @param {Result} result
 * @param {Object} gap gap values
 * @param {String} autoflowValue grid-auto-flow value
 * @return {void}
 * @see https://github.com/postcss/autoprefixer/issues/1148
 */
function autoplaceGridItems(decl, result, gap, autoflowValue = 'row') {
  let { parent } = decl

  let rowDecl = parent.nodes.find(i => i.prop === 'grid-template-rows')
  let rows = normalizeRowColumn(rowDecl.value)
  let columns = normalizeRowColumn(decl.value)

  // Build array of area names with dummy values. If we have 3 columns and
  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']
  let filledRows = rows.map((_, rowIndex) => {
    return Array.from(
      { length: columns.length },
      (v, k) => k + rowIndex * columns.length + 1
    ).join(' ')
  })

  let areas = parseGridAreas({ rows: filledRows, gap })
  let keys = Object.keys(areas)
  let items = keys.map(i => areas[i])

  // Change the order of cells if grid-auto-flow value is 'column'
  if (autoflowValue.includes('column')) {
    items = items.sort((a, b) => a.column.start - b.column.start)
  }

  // Insert new rules
  items.reverse().forEach((item, index) => {
    let { column, row } = item
    let nodeSelector = parent.selectors
      .map(sel => sel + ` > *:nth-child(${keys.length - index})`)
      .join(', ')

    // create new rule
    let node = parent.clone().removeAll()

    // change rule selector
    node.selector = nodeSelector

    // insert prefixed row/column values
    node.append({ prop: '-ms-grid-row', value: row.start })
    node.append({ prop: '-ms-grid-column', value: column.start })

    // insert rule
    parent.after(node)
  })

  return undefined
}

},{"../utils":76,"postcss":743,"postcss-value-parser":723}],47:[function(require,module,exports){
let Declaration = require('../declaration')

class ImageRendering extends Declaration {
  /**
   * Add hack only for crisp-edges
   */
  check(decl) {
    return decl.value === 'pixelated'
  }

  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return '-ms-interpolation-mode'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Change property and value for IE
   */
  set(decl, prefix) {
    if (prefix !== '-ms-') return super.set(decl, prefix)
    decl.prop = '-ms-interpolation-mode'
    decl.value = 'nearest-neighbor'
    return decl
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'image-rendering'
  }

  /**
   * Warn on old value
   */
  process(node, result) {
    return super.process(node, result)
  }
}

ImageRendering.names = ['image-rendering', 'interpolation-mode']

module.exports = ImageRendering

},{"../declaration":6}],48:[function(require,module,exports){
let Value = require('../value')

class ImageSet extends Value {
  /**
   * Use non-standard name for WebKit and Firefox
   */
  replace(string, prefix) {
    let fixed = super.replace(string, prefix)
    if (prefix === '-webkit-') {
      fixed = fixed.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi, 'url($1)$2')
    }
    return fixed
  }
}

ImageSet.names = ['image-set']

module.exports = ImageSet

},{"../value":77}],49:[function(require,module,exports){
let Declaration = require('../declaration')

class InlineLogical extends Declaration {
  /**
   * Use old syntax for -moz- and -webkit-
   */
  prefixed(prop, prefix) {
    return prefix + prop.replace('-inline', '')
  }

  /**
   * Return property name by spec
   */
  normalize(prop) {
    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2')
  }
}

InlineLogical.names = [
  'border-inline-start',
  'border-inline-end',
  'margin-inline-start',
  'margin-inline-end',
  'padding-inline-start',
  'padding-inline-end',
  'border-start',
  'border-end',
  'margin-start',
  'margin-end',
  'padding-start',
  'padding-end'
]

module.exports = InlineLogical

},{"../declaration":6}],50:[function(require,module,exports){
let OldValue = require('../old-value')
let Value = require('../value')

function regexp(name) {
  return new RegExp(`(^|[\\s,(])(${name}($|[\\s),]))`, 'gi')
}

class Intrinsic extends Value {
  regexp() {
    if (!this.regexpCache) this.regexpCache = regexp(this.name)
    return this.regexpCache
  }

  isStretch() {
    return (
      this.name === 'stretch' ||
      this.name === 'fill' ||
      this.name === 'fill-available'
    )
  }

  replace(string, prefix) {
    if (prefix === '-moz-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-moz-available$3')
    }
    if (prefix === '-webkit-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-webkit-fill-available$3')
    }
    return super.replace(string, prefix)
  }

  old(prefix) {
    let prefixed = prefix + this.name
    if (this.isStretch()) {
      if (prefix === '-moz-') {
        prefixed = '-moz-available'
      } else if (prefix === '-webkit-') {
        prefixed = '-webkit-fill-available'
      }
    }
    return new OldValue(this.name, prefixed, prefixed, regexp(prefixed))
  }

  add(decl, prefix) {
    if (decl.prop.includes('grid') && prefix !== '-webkit-') {
      return undefined
    }
    return super.add(decl, prefix)
  }
}

Intrinsic.names = [
  'max-content',
  'min-content',
  'fit-content',
  'fill',
  'fill-available',
  'stretch'
]

module.exports = Intrinsic

},{"../old-value":68,"../value":77}],51:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class JustifyContent extends Declaration {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return prefix + 'box-pack'
    }
    if (spec === 2012) {
      return prefix + 'flex-pack'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'justify-content'
  }

  /**
   * Change value for 2009 and 2012 specs
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2009 || spec === 2012) {
      let value = JustifyContent.oldValues[decl.value] || decl.value
      decl.value = value
      if (spec !== 2009 || value !== 'distribute') {
        return super.set(decl, prefix)
      }
    } else if (spec === 'final') {
      return super.set(decl, prefix)
    }
    return undefined
  }
}

JustifyContent.names = ['justify-content', 'flex-pack', 'box-pack']

JustifyContent.oldValues = {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
}

module.exports = JustifyContent

},{"../declaration":6,"./flex-spec":32}],52:[function(require,module,exports){
let Declaration = require('../declaration')

class MaskBorder extends Declaration {
  /**
   * Return property name by final spec
   */
  normalize() {
    return this.name.replace('box-image', 'border')
  }

  /**
   * Return flex property for 2012 spec
   */
  prefixed(prop, prefix) {
    let result = super.prefixed(prop, prefix)
    if (prefix === '-webkit-') {
      result = result.replace('border', 'box-image')
    }
    return result
  }
}

MaskBorder.names = [
  'mask-border',
  'mask-border-source',
  'mask-border-slice',
  'mask-border-width',
  'mask-border-outset',
  'mask-border-repeat',
  'mask-box-image',
  'mask-box-image-source',
  'mask-box-image-slice',
  'mask-box-image-width',
  'mask-box-image-outset',
  'mask-box-image-repeat'
]

module.exports = MaskBorder

},{"../declaration":6}],53:[function(require,module,exports){
let Declaration = require('../declaration')

class MaskComposite extends Declaration {
  /**
   * Prefix mask-composite for webkit
   */
  insert(decl, prefix, prefixes) {
    let isCompositeProp = decl.prop === 'mask-composite'

    let compositeValues

    if (isCompositeProp) {
      compositeValues = decl.value.split(',')
    } else {
      compositeValues = decl.value.match(MaskComposite.regexp) || []
    }

    compositeValues = compositeValues.map(el => el.trim()).filter(el => el)
    let hasCompositeValues = compositeValues.length

    let compositeDecl

    if (hasCompositeValues) {
      compositeDecl = this.clone(decl)
      compositeDecl.value = compositeValues
        .map(value => MaskComposite.oldValues[value] || value)
        .join(', ')

      if (compositeValues.includes('intersect')) {
        compositeDecl.value += ', xor'
      }

      compositeDecl.prop = prefix + 'mask-composite'
    }

    if (isCompositeProp) {
      if (!hasCompositeValues) {
        return undefined
      }

      if (this.needCascade(decl)) {
        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)
      }

      return decl.parent.insertBefore(decl, compositeDecl)
    }

    let cloned = this.clone(decl)
    cloned.prop = prefix + cloned.prop

    if (hasCompositeValues) {
      cloned.value = cloned.value.replace(MaskComposite.regexp, '')
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
    }

    decl.parent.insertBefore(decl, cloned)

    if (!hasCompositeValues) {
      return decl
    }

    if (this.needCascade(decl)) {
      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix)
    }
    return decl.parent.insertBefore(decl, compositeDecl)
  }
}

MaskComposite.names = ['mask', 'mask-composite']

MaskComposite.oldValues = {
  add: 'source-over',
  subtract: 'source-out',
  intersect: 'source-in',
  exclude: 'xor'
}

MaskComposite.regexp = new RegExp(
  `\\s+(${Object.keys(MaskComposite.oldValues).join(
    '|'
  )})\\b(?!\\))\\s*(?=[,])`,
  'ig'
)

module.exports = MaskComposite

},{"../declaration":6}],54:[function(require,module,exports){
let flexSpec = require('./flex-spec')
let Declaration = require('../declaration')

class Order extends Declaration {
  /**
   * Change property name for 2009 and 2012 specs
   */
  prefixed(prop, prefix) {
    let spec
    ;[spec, prefix] = flexSpec(prefix)
    if (spec === 2009) {
      return prefix + 'box-ordinal-group'
    }
    if (spec === 2012) {
      return prefix + 'flex-order'
    }
    return super.prefixed(prop, prefix)
  }

  /**
   * Return property name by final spec
   */
  normalize() {
    return 'order'
  }

  /**
   * Fix value for 2009 spec
   */
  set(decl, prefix) {
    let spec = flexSpec(prefix)[0]
    if (spec === 2009 && /\d/.test(decl.value)) {
      decl.value = (parseInt(decl.value) + 1).toString()
      return super.set(decl, prefix)
    }
    return super.set(decl, prefix)
  }
}

Order.names = ['order', 'flex-order', 'box-ordinal-group']

module.exports = Order

},{"../declaration":6,"./flex-spec":32}],55:[function(require,module,exports){
let Declaration = require('../declaration')

class OverscrollBehavior extends Declaration {
  /**
   * Change property name for IE
   */
  prefixed(prop, prefix) {
    return prefix + 'scroll-chaining'
  }

  /**
   * Return property name by spec
   */
  normalize() {
    return 'overscroll-behavior'
  }

  /**
   * Change value for IE
   */
  set(decl, prefix) {
    if (decl.value === 'auto') {
      decl.value = 'chained'
    } else if (decl.value === 'none' || decl.value === 'contain') {
      decl.value = 'none'
    }
    return super.set(decl, prefix)
  }
}

OverscrollBehavior.names = ['overscroll-behavior', 'scroll-chaining']

module.exports = OverscrollBehavior

},{"../declaration":6}],56:[function(require,module,exports){
let OldValue = require('../old-value')
let Value = require('../value')

class Pixelated extends Value {
  /**
   * Use non-standard name for WebKit and Firefox
   */
  replace(string, prefix) {
    if (prefix === '-webkit-') {
      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')
    }
    if (prefix === '-moz-') {
      return string.replace(this.regexp(), '$1-moz-crisp-edges')
    }
    return super.replace(string, prefix)
  }

  /**
   * Different name for WebKit and Firefox
   */
  old(prefix) {
    if (prefix === '-webkit-') {
      return new OldValue(this.name, '-webkit-optimize-contrast')
    }
    if (prefix === '-moz-') {
      return new OldValue(this.name, '-moz-crisp-edges')
    }
    return super.old(prefix)
  }
}

Pixelated.names = ['pixelated']

module.exports = Pixelated

},{"../old-value":68,"../value":77}],57:[function(require,module,exports){
let Declaration = require('../declaration')
let utils = require('./grid-utils')

class PlaceSelf extends Declaration {
  /**
   * Translate place-self to separate -ms- prefixed properties
   */
  insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)

    // prevent doubling of prefixes
    if (decl.parent.some(i => i.prop === '-ms-grid-row-align')) {
      return undefined
    }

    let [[first, second]] = utils.parse(decl)

    if (second) {
      utils.insertDecl(decl, 'grid-row-align', first)
      utils.insertDecl(decl, 'grid-column-align', second)
    } else {
      utils.insertDecl(decl, 'grid-row-align', first)
      utils.insertDecl(decl, 'grid-column-align', first)
    }

    return undefined
  }
}

PlaceSelf.names = ['place-self']

module.exports = PlaceSelf

},{"../declaration":6,"./grid-utils":46}],58:[function(require,module,exports){
let Selector = require('../selector')

class PlaceholderShown extends Selector {
  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-ms-') {
      return ':-ms-input-placeholder'
    }
    return `:${prefix}placeholder-shown`
  }
}

PlaceholderShown.names = [':placeholder-shown']

module.exports = PlaceholderShown

},{"../selector":73}],59:[function(require,module,exports){
let Selector = require('../selector')

class Placeholder extends Selector {
  /**
   * Add old mozilla to possible prefixes
   */
  possible() {
    return super.possible().concat(['-moz- old', '-ms- old'])
  }

  /**
   * Return different selectors depend on prefix
   */
  prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-input-placeholder'
    }
    if (prefix === '-ms-') {
      return '::-ms-input-placeholder'
    }
    if (prefix === '-ms- old') {
      return ':-ms-input-placeholder'
    }
    if (prefix === '-moz- old') {
      return ':-moz-placeholder'
    }
    return `::${prefix}placeholder`
  }
}

Placeholder.names = ['::placeholder']

module.exports = Placeholder

},{"../selector":73}],60:[function(require,module,exports){
let Declaration = require('../declaration')

class TextDecorationSkipInk extends Declaration {
  /**
   * Change prefix for ink value
   */
  set(decl, prefix) {
    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {
      decl.prop = prefix + 'text-decoration-skip'
      decl.value = 'ink'
      return decl
    } else {
      return super.set(decl, prefix)
    }
  }
}

TextDecorationSkipInk.names = [
  'text-decoration-skip-ink',
  'text-decoration-skip'
]

module.exports = TextDecorationSkipInk

},{"../declaration":6}],61:[function(require,module,exports){
let Declaration = require('../declaration')

const BASIC = [
  'none',
  'underline',
  'overline',
  'line-through',
  'blink',
  'inherit',
  'initial',
  'unset'
]

class TextDecoration extends Declaration {
  /**
   * Do not add prefixes for basic values.
   */
  check(decl) {
    return decl.value.split(/\s+/).some(i => !BASIC.includes(i))
  }
}

TextDecoration.names = ['text-decoration']

module.exports = TextDecoration

},{"../declaration":6}],62:[function(require,module,exports){
let Declaration = require('../declaration')

class TextEmphasisPosition extends Declaration {
  set(decl, prefix) {
    if (prefix === '-webkit-') {
      decl.value = decl.value.replace(/\s*(right|left)\s*/i, '')
    }
    return super.set(decl, prefix)
  }
}

TextEmphasisPosition.names = ['text-emphasis-position']

module.exports = TextEmphasisPosition

},{"../declaration":6}],63:[function(require,module,exports){
let Declaration = require('../declaration')

class TransformDecl extends Declaration {
  /**
   * Recursively check all parents for @keyframes
   */
  keyframeParents(decl) {
    let { parent } = decl
    while (parent) {
      if (parent.type === 'atrule' && parent.name === 'keyframes') {
        return true
      }
      ;({ parent } = parent)
    }
    return false
  }

  /**
   * Is transform contain 3D commands
   */
  contain3d(decl) {
    if (decl.prop === 'transform-origin') {
      return false
    }

    for (let func of TransformDecl.functions3d) {
      if (decl.value.includes(`${func}(`)) {
        return true
      }
    }

    return false
  }

  /**
   * Replace rotateZ to rotate for IE 9
   */
  set(decl, prefix) {
    decl = super.set(decl, prefix)
    if (prefix === '-ms-') {
      decl.value = decl.value.replace(/rotatez/gi, 'rotate')
    }
    return decl
  }

  /**
   * Don't add prefix for IE in keyframes
   */
  insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {
        return super.insert(decl, prefix, prefixes)
      }
    } else if (prefix === '-o-') {
      if (!this.contain3d(decl)) {
        return super.insert(decl, prefix, prefixes)
      }
    } else {
      return super.insert(decl, prefix, prefixes)
    }
    return undefined
  }
}

TransformDecl.names = ['transform', 'transform-origin']

TransformDecl.functions3d = [
  'matrix3d',
  'translate3d',
  'translateZ',
  'scale3d',
  'scaleZ',
  'rotate3d',
  'rotateX',
  'rotateY',
  'perspective'
]

module.exports = TransformDecl

},{"../declaration":6}],64:[function(require,module,exports){
let Declaration = require('../declaration')

class UserSelect extends Declaration {
  /**
   * Change prefixed value for IE
   */
  set(decl, prefix) {
    if (prefix === '-ms-' && decl.value === 'contain') {
      decl.value = 'element'
    }
    return super.set(decl, prefix)
  }

  /**
   * Avoid prefixing all in IE
   */
  insert(decl, prefix, prefixes) {
    if (decl.value === 'all' && prefix === '-ms-') {
      return undefined
    } else {
      return super.insert(decl, prefix, prefixes)
    }
  }
}

UserSelect.names = ['user-select']

module.exports = UserSelect

},{"../declaration":6}],65:[function(require,module,exports){
let Declaration = require('../declaration')

class WritingMode extends Declaration {
  insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      let cloned = this.set(this.clone(decl), prefix)

      if (this.needCascade(decl)) {
        cloned.raws.before = this.calcBefore(prefixes, decl, prefix)
      }
      let direction = 'ltr'

      decl.parent.nodes.forEach(i => {
        if (i.prop === 'direction') {
          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value
        }
      })

      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value
      return decl.parent.insertBefore(decl, cloned)
    }

    return super.insert(decl, prefix, prefixes)
  }
}

WritingMode.names = ['writing-mode']

WritingMode.msValues = {
  ltr: {
    'horizontal-tb': 'lr-tb',
    'vertical-rl': 'tb-rl',
    'vertical-lr': 'tb-lr'
  },
  rtl: {
    'horizontal-tb': 'rl-tb',
    'vertical-rl': 'bt-rl',
    'vertical-lr': 'bt-lr'
  }
}

module.exports = WritingMode

},{"../declaration":6}],66:[function(require,module,exports){
let browserslist = require('browserslist')

function capitalize(str) {
  return str.slice(0, 1).toUpperCase() + str.slice(1)
}

const NAMES = {
  ie: 'IE',
  ie_mob: 'IE Mobile',
  ios_saf: 'iOS Safari',
  op_mini: 'Opera Mini',
  op_mob: 'Opera Mobile',
  and_chr: 'Chrome for Android',
  and_ff: 'Firefox for Android',
  and_uc: 'UC for Android',
  and_qq: 'QQ Browser',
  kaios: 'KaiOS Browser',
  baidu: 'Baidu Browser',
  samsung: 'Samsung Internet'
}

function prefix(name, prefixes, note) {
  let out = `  ${name}`
  if (note) out += ' *'
  out += ': '
  out += prefixes.map(i => i.replace(/^-(.*)-$/g, '$1')).join(', ')
  out += '\n'
  return out
}

module.exports = function (prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return 'No browsers selected'
  }

  let versions = {}
  for (let browser of prefixes.browsers.selected) {
    let parts = browser.split(' ')
    let name = parts[0]
    let version = parts[1]

    name = NAMES[name] || capitalize(name)
    if (versions[name]) {
      versions[name].push(version)
    } else {
      versions[name] = [version]
    }
  }

  let out = 'Browsers:\n'
  for (let browser in versions) {
    let list = versions[browser]
    list = list.sort((a, b) => parseFloat(b) - parseFloat(a))
    out += `  ${browser}: ${list.join(', ')}\n`
  }

  let coverage = browserslist.coverage(prefixes.browsers.selected)
  let round = Math.round(coverage * 100) / 100.0
  out += `\nThese browsers account for ${round}% of all users globally\n`

  let atrules = []
  for (let name in prefixes.add) {
    let data = prefixes.add[name]
    if (name[0] === '@' && data.prefixes) {
      atrules.push(prefix(name, data.prefixes))
    }
  }
  if (atrules.length > 0) {
    out += `\nAt-Rules:\n${atrules.sort().join('')}`
  }

  let selectors = []
  for (let selector of prefixes.add.selectors) {
    if (selector.prefixes) {
      selectors.push(prefix(selector.name, selector.prefixes))
    }
  }
  if (selectors.length > 0) {
    out += `\nSelectors:\n${selectors.sort().join('')}`
  }

  let values = []
  let props = []
  let hadGrid = false
  for (let name in prefixes.add) {
    let data = prefixes.add[name]
    if (name[0] !== '@' && data.prefixes) {
      let grid = name.indexOf('grid-') === 0
      if (grid) hadGrid = true
      props.push(prefix(name, data.prefixes, grid))
    }

    if (!Array.isArray(data.values)) {
      continue
    }
    for (let value of data.values) {
      let grid = value.name.includes('grid')
      if (grid) hadGrid = true
      let string = prefix(value.name, value.prefixes, grid)
      if (!values.includes(string)) {
        values.push(string)
      }
    }
  }

  if (props.length > 0) {
    out += `\nProperties:\n${props.sort().join('')}`
  }
  if (values.length > 0) {
    out += `\nValues:\n${values.sort().join('')}`
  }
  if (hadGrid) {
    out += '\n* - Prefixes will be added only on grid: true option.\n'
  }

  if (!atrules.length && !selectors.length && !props.length && !values.length) {
    out +=
      "\nAwesome! Your browsers don't require any vendor prefixes." +
      '\nNow you can remove Autoprefixer from build steps.'
  }

  return out
}

},{"browserslist":85}],67:[function(require,module,exports){
class OldSelector {
  constructor(selector, prefix) {
    this.prefix = prefix
    this.prefixed = selector.prefixed(this.prefix)
    this.regexp = selector.regexp(this.prefix)

    this.prefixeds = selector
      .possible()
      .map(x => [selector.prefixed(x), selector.regexp(x)])

    this.unprefixed = selector.name
    this.nameRegexp = selector.regexp()
  }

  /**
   * Is rule a hack without unprefixed version bottom
   */
  isHack(rule) {
    let index = rule.parent.index(rule) + 1
    let rules = rule.parent.nodes

    while (index < rules.length) {
      let before = rules[index].selector
      if (!before) {
        return true
      }

      if (before.includes(this.unprefixed) && before.match(this.nameRegexp)) {
        return false
      }

      let some = false
      for (let [string, regexp] of this.prefixeds) {
        if (before.includes(string) && before.match(regexp)) {
          some = true
          break
        }
      }

      if (!some) {
        return true
      }

      index += 1
    }

    return true
  }

  /**
   * Does rule contain an unnecessary prefixed selector
   */
  check(rule) {
    if (!rule.selector.includes(this.prefixed)) {
      return false
    }
    if (!rule.selector.match(this.regexp)) {
      return false
    }
    if (this.isHack(rule)) {
      return false
    }
    return true
  }
}

module.exports = OldSelector

},{}],68:[function(require,module,exports){
let utils = require('./utils')

class OldValue {
  constructor(unprefixed, prefixed, string, regexp) {
    this.unprefixed = unprefixed
    this.prefixed = prefixed
    this.string = string || prefixed
    this.regexp = regexp || utils.regexp(prefixed)
  }

  /**
   * Check, that value contain old value
   */
  check(value) {
    if (value.includes(this.string)) {
      return !!value.match(this.regexp)
    }
    return false
  }
}

module.exports = OldValue

},{"./utils":76}],69:[function(require,module,exports){
let Browsers = require('./browsers')
let vendor = require('./vendor')
let utils = require('./utils')

/**
 * Recursively clone objects
 */
function clone(obj, parent) {
  let cloned = new obj.constructor()

  for (let i of Object.keys(obj || {})) {
    let value = obj[i]
    if (i === 'parent' && typeof value === 'object') {
      if (parent) {
        cloned[i] = parent
      }
    } else if (i === 'source' || i === null) {
      cloned[i] = value
    } else if (Array.isArray(value)) {
      cloned[i] = value.map(x => clone(x, cloned))
    } else if (
      i !== '_autoprefixerPrefix' &&
      i !== '_autoprefixerValues' &&
      i !== 'proxyCache'
    ) {
      if (typeof value === 'object' && value !== null) {
        value = clone(value, cloned)
      }
      cloned[i] = value
    }
  }

  return cloned
}

class Prefixer {
  /**
   * Add hack to selected names
   */
  static hack(klass) {
    if (!this.hacks) {
      this.hacks = {}
    }
    return klass.names.map(name => {
      this.hacks[name] = klass
      return this.hacks[name]
    })
  }

  /**
   * Load hacks for some names
   */
  static load(name, prefixes, all) {
    let Klass = this.hacks && this.hacks[name]
    if (Klass) {
      return new Klass(name, prefixes, all)
    } else {
      return new this(name, prefixes, all)
    }
  }

  /**
   * Clone node and clean autprefixer custom caches
   */
  static clone(node, overrides) {
    let cloned = clone(node)
    for (let name in overrides) {
      cloned[name] = overrides[name]
    }
    return cloned
  }

  constructor(name, prefixes, all) {
    this.prefixes = prefixes
    this.name = name
    this.all = all
  }

  /**
   * Find prefix in node parents
   */
  parentPrefix(node) {
    let prefix

    if (typeof node._autoprefixerPrefix !== 'undefined') {
      prefix = node._autoprefixerPrefix
    } else if (node.type === 'decl' && node.prop[0] === '-') {
      prefix = vendor.prefix(node.prop)
    } else if (node.type === 'root') {
      prefix = false
    } else if (
      node.type === 'rule' &&
      node.selector.includes(':-') &&
      /:(-\w+-)/.test(node.selector)
    ) {
      prefix = node.selector.match(/:(-\w+-)/)[1]
    } else if (node.type === 'atrule' && node.name[0] === '-') {
      prefix = vendor.prefix(node.name)
    } else {
      prefix = this.parentPrefix(node.parent)
    }

    if (!Browsers.prefixes().includes(prefix)) {
      prefix = false
    }

    node._autoprefixerPrefix = prefix

    return node._autoprefixerPrefix
  }

  /**
   * Clone node with prefixes
   */
  process(node, result) {
    if (!this.check(node)) {
      return undefined
    }

    let parent = this.parentPrefix(node)

    let prefixes = this.prefixes.filter(
      prefix => !parent || parent === utils.removeNote(prefix)
    )

    let added = []
    for (let prefix of prefixes) {
      if (this.add(node, prefix, added.concat([prefix]), result)) {
        added.push(prefix)
      }
    }

    return added
  }

  /**
   * Shortcut for Prefixer.clone
   */
  clone(node, overrides) {
    return Prefixer.clone(node, overrides)
  }
}

module.exports = Prefixer

},{"./browsers":5,"./utils":76,"./vendor":78}],70:[function(require,module,exports){
let vendor = require('./vendor')
let Declaration = require('./declaration')
let Resolution = require('./resolution')
let Transition = require('./transition')
let Processor = require('./processor')
let Supports = require('./supports')
let Browsers = require('./browsers')
let Selector = require('./selector')
let AtRule = require('./at-rule')
let Value = require('./value')
let utils = require('./utils')
let hackFullscreen = require('./hacks/fullscreen')
let hackPlaceholder = require('./hacks/placeholder')
let hackPlaceholderShown = require('./hacks/placeholder-shown')
let hackFileSelectorButton = require('./hacks/file-selector-button')
let hackFlex = require('./hacks/flex')
let hackOrder = require('./hacks/order')
let hackFilter = require('./hacks/filter')
let hackGridEnd = require('./hacks/grid-end')
let hackAnimation = require('./hacks/animation')
let hackFlexFlow = require('./hacks/flex-flow')
let hackFlexGrow = require('./hacks/flex-grow')
let hackFlexWrap = require('./hacks/flex-wrap')
let hackGridArea = require('./hacks/grid-area')
let hackPlaceSelf = require('./hacks/place-self')
let hackGridStart = require('./hacks/grid-start')
let hackAlignSelf = require('./hacks/align-self')
let hackAppearance = require('./hacks/appearance')
let hackFlexBasis = require('./hacks/flex-basis')
let hackMaskBorder = require('./hacks/mask-border')
let hackMaskComposite = require('./hacks/mask-composite')
let hackAlignItems = require('./hacks/align-items')
let hackUserSelect = require('./hacks/user-select')
let hackFlexShrink = require('./hacks/flex-shrink')
let hackBreakProps = require('./hacks/break-props')
let hackColorAdjust = require('./hacks/color-adjust')
let hackWritingMode = require('./hacks/writing-mode')
let hackBorderImage = require('./hacks/border-image')
let hackAlignContent = require('./hacks/align-content')
let hackBorderRadius = require('./hacks/border-radius')
let hackBlockLogical = require('./hacks/block-logical')
let hackGridTemplate = require('./hacks/grid-template')
let hackInlineLogical = require('./hacks/inline-logical')
let hackGridRowAlign = require('./hacks/grid-row-align')
let hackTransformDecl = require('./hacks/transform-decl')
let hackFlexDirection = require('./hacks/flex-direction')
let hackImageRendering = require('./hacks/image-rendering')
let hackBackdropFilter = require('./hacks/backdrop-filter')
let hackBackgroundClip = require('./hacks/background-clip')
let hackTextDecoration = require('./hacks/text-decoration')
let hackJustifyContent = require('./hacks/justify-content')
let hackBackgroundSize = require('./hacks/background-size')
let hackGridRowColumn = require('./hacks/grid-row-column')
let hackGridRowsColumns = require('./hacks/grid-rows-columns')
let hackGridColumnAlign = require('./hacks/grid-column-align')
let hackOverscrollBehavior = require('./hacks/overscroll-behavior')
let hackGridTemplateAreas = require('./hacks/grid-template-areas')
let hackTextEmphasisPosition = require('./hacks/text-emphasis-position')
let hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')
let hackGradient = require('./hacks/gradient')
let hackIntrinsic = require('./hacks/intrinsic')
let hackPixelated = require('./hacks/pixelated')
let hackImageSet = require('./hacks/image-set')
let hackCrossFade = require('./hacks/cross-fade')
let hackDisplayFlex = require('./hacks/display-flex')
let hackDisplayGrid = require('./hacks/display-grid')
let hackFilterValue = require('./hacks/filter-value')
let hackAutofill = require('./hacks/autofill')

Selector.hack(hackAutofill)
Selector.hack(hackFullscreen)
Selector.hack(hackPlaceholder)
Selector.hack(hackPlaceholderShown)
Selector.hack(hackFileSelectorButton)
Declaration.hack(hackFlex)
Declaration.hack(hackOrder)
Declaration.hack(hackFilter)
Declaration.hack(hackGridEnd)
Declaration.hack(hackAnimation)
Declaration.hack(hackFlexFlow)
Declaration.hack(hackFlexGrow)
Declaration.hack(hackFlexWrap)
Declaration.hack(hackGridArea)
Declaration.hack(hackPlaceSelf)
Declaration.hack(hackGridStart)
Declaration.hack(hackAlignSelf)
Declaration.hack(hackAppearance)
Declaration.hack(hackFlexBasis)
Declaration.hack(hackMaskBorder)
Declaration.hack(hackMaskComposite)
Declaration.hack(hackAlignItems)
Declaration.hack(hackUserSelect)
Declaration.hack(hackFlexShrink)
Declaration.hack(hackBreakProps)
Declaration.hack(hackColorAdjust)
Declaration.hack(hackWritingMode)
Declaration.hack(hackBorderImage)
Declaration.hack(hackAlignContent)
Declaration.hack(hackBorderRadius)
Declaration.hack(hackBlockLogical)
Declaration.hack(hackGridTemplate)
Declaration.hack(hackInlineLogical)
Declaration.hack(hackGridRowAlign)
Declaration.hack(hackTransformDecl)
Declaration.hack(hackFlexDirection)
Declaration.hack(hackImageRendering)
Declaration.hack(hackBackdropFilter)
Declaration.hack(hackBackgroundClip)
Declaration.hack(hackTextDecoration)
Declaration.hack(hackJustifyContent)
Declaration.hack(hackBackgroundSize)
Declaration.hack(hackGridRowColumn)
Declaration.hack(hackGridRowsColumns)
Declaration.hack(hackGridColumnAlign)
Declaration.hack(hackOverscrollBehavior)
Declaration.hack(hackGridTemplateAreas)
Declaration.hack(hackTextEmphasisPosition)
Declaration.hack(hackTextDecorationSkipInk)
Value.hack(hackGradient)
Value.hack(hackIntrinsic)
Value.hack(hackPixelated)
Value.hack(hackImageSet)
Value.hack(hackCrossFade)
Value.hack(hackDisplayFlex)
Value.hack(hackDisplayGrid)
Value.hack(hackFilterValue)

let declsCache = new Map()

class Prefixes {
  constructor(data, browsers, options = {}) {
    this.data = data
    this.browsers = browsers
    this.options = options
    ;[this.add, this.remove] = this.preprocess(this.select(this.data))
    this.transition = new Transition(this)
    this.processor = new Processor(this)
  }

  /**
   * Return clone instance to remove all prefixes
   */
  cleaner() {
    if (this.cleanerCache) {
      return this.cleanerCache
    }

    if (this.browsers.selected.length) {
      let empty = new Browsers(this.browsers.data, [])
      this.cleanerCache = new Prefixes(this.data, empty, this.options)
    } else {
      return this
    }

    return this.cleanerCache
  }

  /**
   * Select prefixes from data, which is necessary for selected browsers
   */
  select(list) {
    let selected = { add: {}, remove: {} }

    for (let name in list) {
      let data = list[name]
      let add = data.browsers.map(i => {
        let params = i.split(' ')
        return {
          browser: `${params[0]} ${params[1]}`,
          note: params[2]
        }
      })

      let notes = add
        .filter(i => i.note)
        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)
      notes = utils.uniq(notes)

      add = add
        .filter(i => this.browsers.isSelected(i.browser))
        .map(i => {
          let prefix = this.browsers.prefix(i.browser)
          if (i.note) {
            return `${prefix} ${i.note}`
          } else {
            return prefix
          }
        })
      add = this.sort(utils.uniq(add))

      if (this.options.flexbox === 'no-2009') {
        add = add.filter(i => !i.includes('2009'))
      }

      let all = data.browsers.map(i => this.browsers.prefix(i))
      if (data.mistakes) {
        all = all.concat(data.mistakes)
      }
      all = all.concat(notes)
      all = utils.uniq(all)

      if (add.length) {
        selected.add[name] = add
        if (add.length < all.length) {
          selected.remove[name] = all.filter(i => !add.includes(i))
        }
      } else {
        selected.remove[name] = all
      }
    }

    return selected
  }

  /**
   * Sort vendor prefixes
   */
  sort(prefixes) {
    return prefixes.sort((a, b) => {
      let aLength = utils.removeNote(a).length
      let bLength = utils.removeNote(b).length

      if (aLength === bLength) {
        return b.length - a.length
      } else {
        return bLength - aLength
      }
    })
  }

  /**
   * Cache prefixes data to fast CSS processing
   */
  preprocess(selected) {
    let add = {
      'selectors': [],
      '@supports': new Supports(Prefixes, this)
    }
    for (let name in selected.add) {
      let prefixes = selected.add[name]
      if (name === '@keyframes' || name === '@viewport') {
        add[name] = new AtRule(name, prefixes, this)
      } else if (name === '@resolution') {
        add[name] = new Resolution(name, prefixes, this)
      } else if (this.data[name].selector) {
        add.selectors.push(Selector.load(name, prefixes, this))
      } else {
        let props = this.data[name].props

        if (props) {
          let value = Value.load(name, prefixes, this)
          for (let prop of props) {
            if (!add[prop]) {
              add[prop] = { values: [] }
            }
            add[prop].values.push(value)
          }
        } else {
          let values = (add[name] && add[name].values) || []
          add[name] = Declaration.load(name, prefixes, this)
          add[name].values = values
        }
      }
    }

    let remove = { selectors: [] }
    for (let name in selected.remove) {
      let prefixes = selected.remove[name]
      if (this.data[name].selector) {
        let selector = Selector.load(name, prefixes)
        for (let prefix of prefixes) {
          remove.selectors.push(selector.old(prefix))
        }
      } else if (name === '@keyframes' || name === '@viewport') {
        for (let prefix of prefixes) {
          let prefixed = `@${prefix}${name.slice(1)}`
          remove[prefixed] = { remove: true }
        }
      } else if (name === '@resolution') {
        remove[name] = new Resolution(name, prefixes, this)
      } else {
        let props = this.data[name].props
        if (props) {
          let value = Value.load(name, [], this)
          for (let prefix of prefixes) {
            let old = value.old(prefix)
            if (old) {
              for (let prop of props) {
                if (!remove[prop]) {
                  remove[prop] = {}
                }
                if (!remove[prop].values) {
                  remove[prop].values = []
                }
                remove[prop].values.push(old)
              }
            }
          }
        } else {
          for (let p of prefixes) {
            let olds = this.decl(name).old(name, p)
            if (name === 'align-self') {
              let a = add[name] && add[name].prefixes
              if (a) {
                if (p === '-webkit- 2009' && a.includes('-webkit-')) {
                  continue
                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {
                  continue
                }
              }
            }
            for (let prefixed of olds) {
              if (!remove[prefixed]) {
                remove[prefixed] = {}
              }
              remove[prefixed].remove = true
            }
          }
        }
      }
    }

    return [add, remove]
  }

  /**
   * Declaration loader with caching
   */
  decl(prop) {
    if (!declsCache.has(prop)) {
      declsCache.set(prop, Declaration.load(prop))
    }

    return declsCache.get(prop)
  }

  /**
   * Return unprefixed version of property
   */
  unprefixed(prop) {
    let value = this.normalize(vendor.unprefixed(prop))
    if (value === 'flex-direction') {
      value = 'flex-flow'
    }
    return value
  }

  /**
   * Normalize prefix for remover
   */
  normalize(prop) {
    return this.decl(prop).normalize(prop)
  }

  /**
   * Return prefixed version of property
   */
  prefixed(prop, prefix) {
    prop = vendor.unprefixed(prop)
    return this.decl(prop).prefixed(prop, prefix)
  }

  /**
   * Return values, which must be prefixed in selected property
   */
  values(type, prop) {
    let data = this[type]

    let global = data['*'] && data['*'].values
    let values = data[prop] && data[prop].values

    if (global && values) {
      return utils.uniq(global.concat(values))
    } else {
      return global || values || []
    }
  }

  /**
   * Group declaration by unprefixed property to check them
   */
  group(decl) {
    let rule = decl.parent
    let index = rule.index(decl)
    let { length } = rule.nodes
    let unprefixed = this.unprefixed(decl.prop)

    let checker = (step, callback) => {
      index += step
      while (index >= 0 && index < length) {
        let other = rule.nodes[index]
        if (other.type === 'decl') {
          if (step === -1 && other.prop === unprefixed) {
            if (!Browsers.withPrefix(other.value)) {
              break
            }
          }

          if (this.unprefixed(other.prop) !== unprefixed) {
            break
          } else if (callback(other) === true) {
            return true
          }

          if (step === +1 && other.prop === unprefixed) {
            if (!Browsers.withPrefix(other.value)) {
              break
            }
          }
        }

        index += step
      }
      return false
    }

    return {
      up(callback) {
        return checker(-1, callback)
      },
      down(callback) {
        return checker(+1, callback)
      }
    }
  }
}

module.exports = Prefixes

},{"./at-rule":2,"./browsers":5,"./declaration":6,"./hacks/align-content":7,"./hacks/align-items":8,"./hacks/align-self":9,"./hacks/animation":10,"./hacks/appearance":11,"./hacks/autofill":12,"./hacks/backdrop-filter":13,"./hacks/background-clip":14,"./hacks/background-size":15,"./hacks/block-logical":16,"./hacks/border-image":17,"./hacks/border-radius":18,"./hacks/break-props":19,"./hacks/color-adjust":20,"./hacks/cross-fade":21,"./hacks/display-flex":22,"./hacks/display-grid":23,"./hacks/file-selector-button":24,"./hacks/filter":26,"./hacks/filter-value":25,"./hacks/flex":34,"./hacks/flex-basis":27,"./hacks/flex-direction":28,"./hacks/flex-flow":29,"./hacks/flex-grow":30,"./hacks/flex-shrink":31,"./hacks/flex-wrap":33,"./hacks/fullscreen":35,"./hacks/gradient":36,"./hacks/grid-area":37,"./hacks/grid-column-align":38,"./hacks/grid-end":39,"./hacks/grid-row-align":40,"./hacks/grid-row-column":41,"./hacks/grid-rows-columns":42,"./hacks/grid-start":43,"./hacks/grid-template":45,"./hacks/grid-template-areas":44,"./hacks/image-rendering":47,"./hacks/image-set":48,"./hacks/inline-logical":49,"./hacks/intrinsic":50,"./hacks/justify-content":51,"./hacks/mask-border":52,"./hacks/mask-composite":53,"./hacks/order":54,"./hacks/overscroll-behavior":55,"./hacks/pixelated":56,"./hacks/place-self":57,"./hacks/placeholder":59,"./hacks/placeholder-shown":58,"./hacks/text-decoration":61,"./hacks/text-decoration-skip-ink":60,"./hacks/text-emphasis-position":62,"./hacks/transform-decl":63,"./hacks/user-select":64,"./hacks/writing-mode":65,"./processor":71,"./resolution":72,"./selector":73,"./supports":74,"./transition":75,"./utils":76,"./value":77,"./vendor":78}],71:[function(require,module,exports){
(function (process){(function (){
let parser = require('postcss-value-parser')

let Value = require('./value')
let insertAreas = require('./hacks/grid-utils').insertAreas

const OLD_LINEAR = /(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i
const OLD_RADIAL = /(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i
const IGNORE_NEXT = /(!\s*)?autoprefixer:\s*ignore\s+next/i
const GRID_REGEX = /(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i

const SIZES = [
  'width',
  'height',
  'min-width',
  'max-width',
  'min-height',
  'max-height',
  'inline-size',
  'min-inline-size',
  'max-inline-size',
  'block-size',
  'min-block-size',
  'max-block-size'
]

function hasGridTemplate(decl) {
  return decl.parent.some(
    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'
  )
}

function hasRowsAndColumns(decl) {
  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')
  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')
  return hasRows && hasColumns
}

class Processor {
  constructor(prefixes) {
    this.prefixes = prefixes
  }

  /**
   * Add necessary prefixes
   */
  add(css, result) {
    // At-rules
    let resolution = this.prefixes.add['@resolution']
    let keyframes = this.prefixes.add['@keyframes']
    let viewport = this.prefixes.add['@viewport']
    let supports = this.prefixes.add['@supports']

    css.walkAtRules(rule => {
      if (rule.name === 'keyframes') {
        if (!this.disabled(rule, result)) {
          return keyframes && keyframes.process(rule)
        }
      } else if (rule.name === 'viewport') {
        if (!this.disabled(rule, result)) {
          return viewport && viewport.process(rule)
        }
      } else if (rule.name === 'supports') {
        if (
          this.prefixes.options.supports !== false &&
          !this.disabled(rule, result)
        ) {
          return supports.process(rule)
        }
      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {
        if (!this.disabled(rule, result)) {
          return resolution && resolution.process(rule)
        }
      }

      return undefined
    })

    // Selectors
    css.walkRules(rule => {
      if (this.disabled(rule, result)) return undefined

      return this.prefixes.add.selectors.map(selector => {
        return selector.process(rule, result)
      })
    })

    function insideGrid(decl) {
      return decl.parent.nodes.some(node => {
        if (node.type !== 'decl') return false
        let displayGrid =
          node.prop === 'display' && /(inline-)?grid/.test(node.value)
        let gridTemplate = node.prop.startsWith('grid-template')
        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)
        return displayGrid || gridTemplate || gridGap
      })
    }
    function insideFlex(decl) {
      return decl.parent.some(node => {
        return node.prop === 'display' && /(inline-)?flex/.test(node.value)
      })
    }

    let gridPrefixes =
      this.gridStatus(css, result) &&
      this.prefixes.add['grid-area'] &&
      this.prefixes.add['grid-area'].prefixes

    css.walkDecls(decl => {
      if (this.disabledDecl(decl, result)) return undefined

      let parent = decl.parent
      let prop = decl.prop
      let value = decl.value

      if (prop === 'grid-row-span') {
        result.warn(
          'grid-row-span is not part of final Grid Layout. Use grid-row.',
          { node: decl }
        )
        return undefined
      } else if (prop === 'grid-column-span') {
        result.warn(
          'grid-column-span is not part of final Grid Layout. Use grid-column.',
          { node: decl }
        )
        return undefined
      } else if (prop === 'display' && value === 'box') {
        result.warn(
          'You should write display: flex by final spec ' +
            'instead of display: box',
          { node: decl }
        )
        return undefined
      } else if (prop === 'text-emphasis-position') {
        if (value === 'under' || value === 'over') {
          result.warn(
            'You should use 2 values for text-emphasis-position ' +
              'For example, `under left` instead of just `under`.',
            { node: decl }
          )
        }
      } else if (
        /^(align|justify|place)-(items|content)$/.test(prop) &&
        insideFlex(decl)
      ) {
        if (value === 'start' || value === 'end') {
          result.warn(
            `${value} value has mixed support, consider using ` +
              `flex-${value} instead`,
            { node: decl }
          )
        }
      } else if (prop === 'text-decoration-skip' && value === 'ink') {
        result.warn(
          'Replace text-decoration-skip: ink to ' +
            'text-decoration-skip-ink: auto, because spec had been changed',
          { node: decl }
        )
      } else {
        if (gridPrefixes && this.gridStatus(decl, result)) {
          if (decl.value === 'subgrid') {
            result.warn('IE does not support subgrid', { node: decl })
          }
          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {
            let fixed = prop.replace('-items', '-self')
            result.warn(
              `IE does not support ${prop} on grid containers. ` +
                `Try using ${fixed} on child elements instead: ` +
                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,
              { node: decl }
            )
          } else if (
            /^(align|justify|place)-content$/.test(prop) &&
            insideGrid(decl)
          ) {
            result.warn(`IE does not support ${decl.prop} on grid containers`, {
              node: decl
            })
          } else if (prop === 'display' && decl.value === 'contents') {
            result.warn(
              'Please do not use display: contents; ' +
                'if you have grid setting enabled',
              { node: decl }
            )
            return undefined
          } else if (decl.prop === 'grid-gap') {
            let status = this.gridStatus(decl, result)
            if (
              status === 'autoplace' &&
              !hasRowsAndColumns(decl) &&
              !hasGridTemplate(decl)
            ) {
              result.warn(
                'grid-gap only works if grid-template(-areas) is being ' +
                  'used or both rows and columns have been declared ' +
                  'and cells have not been manually ' +
                  'placed inside the explicit grid',
                { node: decl }
              )
            } else if (
              (status === true || status === 'no-autoplace') &&
              !hasGridTemplate(decl)
            ) {
              result.warn(
                'grid-gap only works if grid-template(-areas) is being used',
                { node: decl }
              )
            }
          } else if (prop === 'grid-auto-columns') {
            result.warn('grid-auto-columns is not supported by IE', {
              node: decl
            })
            return undefined
          } else if (prop === 'grid-auto-rows') {
            result.warn('grid-auto-rows is not supported by IE', { node: decl })
            return undefined
          } else if (prop === 'grid-auto-flow') {
            let hasRows = parent.some(i => i.prop === 'grid-template-rows')
            let hasCols = parent.some(i => i.prop === 'grid-template-columns')

            if (hasGridTemplate(decl)) {
              result.warn('grid-auto-flow is not supported by IE', {
                node: decl
              })
            } else if (value.includes('dense')) {
              result.warn('grid-auto-flow: dense is not supported by IE', {
                node: decl
              })
            } else if (!hasRows && !hasCols) {
              result.warn(
                'grid-auto-flow works only if grid-template-rows and ' +
                  'grid-template-columns are present in the same rule',
                { node: decl }
              )
            }
            return undefined
          } else if (value.includes('auto-fit')) {
            result.warn('auto-fit value is not supported by IE', {
              node: decl,
              word: 'auto-fit'
            })
            return undefined
          } else if (value.includes('auto-fill')) {
            result.warn('auto-fill value is not supported by IE', {
              node: decl,
              word: 'auto-fill'
            })
            return undefined
          } else if (prop.startsWith('grid-template') && value.includes('[')) {
            result.warn(
              'Autoprefixer currently does not support line names. ' +
                'Try using grid-template-areas instead.',
              { node: decl, word: '[' }
            )
          }
        }
        if (value.includes('radial-gradient')) {
          if (OLD_RADIAL.test(decl.value)) {
            result.warn(
              'Gradient has outdated direction syntax. ' +
                'New syntax is like `closest-side at 0 0` ' +
                'instead of `0 0, closest-side`.',
              { node: decl }
            )
          } else {
            let ast = parser(value)

            for (let i of ast.nodes) {
              if (i.type === 'function' && i.value === 'radial-gradient') {
                for (let word of i.nodes) {
                  if (word.type === 'word') {
                    if (word.value === 'cover') {
                      result.warn(
                        'Gradient has outdated direction syntax. ' +
                          'Replace `cover` to `farthest-corner`.',
                        { node: decl }
                      )
                    } else if (word.value === 'contain') {
                      result.warn(
                        'Gradient has outdated direction syntax. ' +
                          'Replace `contain` to `closest-side`.',
                        { node: decl }
                      )
                    }
                  }
                }
              }
            }
          }
        }
        if (value.includes('linear-gradient')) {
          if (OLD_LINEAR.test(value)) {
            result.warn(
              'Gradient has outdated direction syntax. ' +
                'New syntax is like `to left` instead of `right`.',
              { node: decl }
            )
          }
        }
      }

      if (SIZES.includes(decl.prop)) {
        if (!decl.value.includes('-fill-available')) {
          if (decl.value.includes('fill-available')) {
            result.warn(
              'Replace fill-available to stretch, ' +
                'because spec had been changed',
              { node: decl }
            )
          } else if (decl.value.includes('fill')) {
            let ast = parser(value)
            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {
              result.warn(
                'Replace fill to stretch, because spec had been changed',
                { node: decl }
              )
            }
          }
        }
      }

      let prefixer

      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        // Transition
        return this.prefixes.transition.add(decl, result)
      } else if (decl.prop === 'align-self') {
        // align-self flexbox or grid
        let display = this.displayType(decl)
        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {
          prefixer = this.prefixes.add['align-self']
          if (prefixer && prefixer.prefixes) {
            prefixer.process(decl)
          }
        }
        if (this.gridStatus(decl, result) !== false) {
          prefixer = this.prefixes.add['grid-row-align']
          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result)
          }
        }
      } else if (decl.prop === 'justify-self') {
        // justify-self flexbox or grid
        if (this.gridStatus(decl, result) !== false) {
          prefixer = this.prefixes.add['grid-column-align']
          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result)
          }
        }
      } else if (decl.prop === 'place-self') {
        prefixer = this.prefixes.add['place-self']
        if (
          prefixer &&
          prefixer.prefixes &&
          this.gridStatus(decl, result) !== false
        ) {
          return prefixer.process(decl, result)
        }
      } else {
        // Properties
        prefixer = this.prefixes.add[decl.prop]
        if (prefixer && prefixer.prefixes) {
          return prefixer.process(decl, result)
        }
      }

      return undefined
    })

    // Insert grid-area prefixes. We need to be able to store the different
    // rules as a data and hack API is not enough for this
    if (this.gridStatus(css, result)) {
      insertAreas(css, this.disabled)
    }

    // Values
    return css.walkDecls(decl => {
      if (this.disabledValue(decl, result)) return

      let unprefixed = this.prefixes.unprefixed(decl.prop)
      let list = this.prefixes.values('add', unprefixed)
      if (Array.isArray(list)) {
        for (let value of list) {
          if (value.process) value.process(decl, result)
        }
      }
      Value.save(this.prefixes, decl)
    })
  }

  /**
   * Remove unnecessary pefixes
   */
  remove(css, result) {
    // At-rules
    let resolution = this.prefixes.remove['@resolution']

    css.walkAtRules((rule, i) => {
      if (this.prefixes.remove[`@${rule.name}`]) {
        if (!this.disabled(rule, result)) {
          rule.parent.removeChild(i)
        }
      } else if (
        rule.name === 'media' &&
        rule.params.includes('-resolution') &&
        resolution
      ) {
        resolution.clean(rule)
      }
    })

    // Selectors
    for (let checker of this.prefixes.remove.selectors) {
      css.walkRules((rule, i) => {
        if (checker.check(rule)) {
          if (!this.disabled(rule, result)) {
            rule.parent.removeChild(i)
          }
        }
      })
    }

    return css.walkDecls((decl, i) => {
      if (this.disabled(decl, result)) return

      let rule = decl.parent
      let unprefixed = this.prefixes.unprefixed(decl.prop)

      // Transition
      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        this.prefixes.transition.remove(decl)
      }

      // Properties
      if (
        this.prefixes.remove[decl.prop] &&
        this.prefixes.remove[decl.prop].remove
      ) {
        let notHack = this.prefixes.group(decl).down(other => {
          return this.prefixes.normalize(other.prop) === unprefixed
        })

        if (unprefixed === 'flex-flow') {
          notHack = true
        }

        if (decl.prop === '-webkit-box-orient') {
          let hacks = { 'flex-direction': true, 'flex-flow': true }
          if (!decl.parent.some(j => hacks[j.prop])) return
        }

        if (notHack && !this.withHackValue(decl)) {
          if (decl.raw('before').includes('\n')) {
            this.reduceSpaces(decl)
          }
          rule.removeChild(i)
          return
        }
      }

      // Values
      for (let checker of this.prefixes.values('remove', unprefixed)) {
        if (!checker.check) continue
        if (!checker.check(decl.value)) continue

        unprefixed = checker.unprefixed
        let notHack = this.prefixes.group(decl).down(other => {
          return other.value.includes(unprefixed)
        })

        if (notHack) {
          rule.removeChild(i)
          return
        }
      }
    })
  }

  /**
   * Some rare old values, which is not in standard
   */
  withHackValue(decl) {
    return decl.prop === '-webkit-background-clip' && decl.value === 'text'
  }

  /**
   * Check for grid/flexbox options.
   */
  disabledValue(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('grid')) {
        return true
      }
    }
    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.includes('flex')) {
        return true
      }
    }
    if (node.type === 'decl' && node.prop === 'content') {
      return true
    }

    return this.disabled(node, result)
  }

  /**
   * Check for grid/flexbox options.
   */
  disabledDecl(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop.includes('grid') || node.prop === 'justify-items') {
        return true
      }
    }
    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      let other = ['order', 'justify-content', 'align-items', 'align-content']
      if (node.prop.includes('flex') || other.includes(node.prop)) {
        return true
      }
    }

    return this.disabled(node, result)
  }

  /**
   * Check for control comment and global options
   */
  disabled(node, result) {
    if (!node) return false

    if (node._autoprefixerDisabled !== undefined) {
      return node._autoprefixerDisabled
    }

    if (node.parent) {
      let p = node.prev()
      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {
        node._autoprefixerDisabled = true
        node._autoprefixerSelfDisabled = true
        return true
      }
    }

    let value = null
    if (node.nodes) {
      let status
      node.each(i => {
        if (i.type !== 'comment') return
        if (/(!\s*)?autoprefixer:\s*(off|on)/i.test(i.text)) {
          if (typeof status !== 'undefined') {
            result.warn(
              'Second Autoprefixer control comment ' +
                'was ignored. Autoprefixer applies control ' +
                'comment to whole block, not to next rules.',
              { node: i }
            )
          } else {
            status = /on/i.test(i.text)
          }
        }
      })

      if (status !== undefined) {
        value = !status
      }
    }
    if (!node.nodes || value === null) {
      if (node.parent) {
        let isParentDisabled = this.disabled(node.parent, result)
        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false
        } else {
          value = isParentDisabled
        }
      } else {
        value = false
      }
    }
    node._autoprefixerDisabled = value
    return value
  }

  /**
   * Normalize spaces in cascade declaration group
   */
  reduceSpaces(decl) {
    let stop = false
    this.prefixes.group(decl).up(() => {
      stop = true
      return true
    })
    if (stop) {
      return
    }

    let parts = decl.raw('before').split('\n')
    let prevMin = parts[parts.length - 1].length
    let diff = false

    this.prefixes.group(decl).down(other => {
      parts = other.raw('before').split('\n')
      let last = parts.length - 1

      if (parts[last].length > prevMin) {
        if (diff === false) {
          diff = parts[last].length - prevMin
        }

        parts[last] = parts[last].slice(0, -diff)
        other.raws.before = parts.join('\n')
      }
    })
  }

  /**
   * Is it flebox or grid rule
   */
  displayType(decl) {
    for (let i of decl.parent.nodes) {
      if (i.prop !== 'display') {
        continue
      }

      if (i.value.includes('flex')) {
        return 'flex'
      }

      if (i.value.includes('grid')) {
        return 'grid'
      }
    }

    return false
  }

  /**
   * Set grid option via control comment
   */
  gridStatus(node, result) {
    if (!node) return false

    if (node._autoprefixerGridStatus !== undefined) {
      return node._autoprefixerGridStatus
    }

    let value = null
    if (node.nodes) {
      let status
      node.each(i => {
        if (i.type !== 'comment') return
        if (GRID_REGEX.test(i.text)) {
          let hasAutoplace = /:\s*autoplace/i.test(i.text)
          let noAutoplace = /no-autoplace/i.test(i.text)
          if (typeof status !== 'undefined') {
            result.warn(
              'Second Autoprefixer grid control comment was ' +
                'ignored. Autoprefixer applies control comments to the whole ' +
                'block, not to the next rules.',
              { node: i }
            )
          } else if (hasAutoplace) {
            status = 'autoplace'
          } else if (noAutoplace) {
            status = true
          } else {
            status = /on/i.test(i.text)
          }
        }
      })

      if (status !== undefined) {
        value = status
      }
    }

    if (node.type === 'atrule' && node.name === 'supports') {
      let params = node.params
      if (params.includes('grid') && params.includes('auto')) {
        value = false
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        let isParentGrid = this.gridStatus(node.parent, result)
        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false
        } else {
          value = isParentGrid
        }
      } else if (typeof this.prefixes.options.grid !== 'undefined') {
        value = this.prefixes.options.grid
      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {
        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {
          value = 'autoplace'
        } else {
          value = true
        }
      } else {
        value = false
      }
    }

    node._autoprefixerGridStatus = value
    return value
  }
}

module.exports = Processor

}).call(this)}).call(this,require('_process'))
},{"./hacks/grid-utils":46,"./value":77,"_process":755,"postcss-value-parser":723}],72:[function(require,module,exports){
let FractionJs = require('fraction.js')

let Prefixer = require('./prefixer')
let utils = require('./utils')

const REGEXP = /(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpcm|dpi|x)/gi
const SPLIT = /(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpcm|dpi|x)/i

class Resolution extends Prefixer {
  /**
   * Return prefixed query name
   */
  prefixName(prefix, name) {
    if (prefix === '-moz-') {
      return name + '--moz-device-pixel-ratio'
    } else {
      return prefix + name + '-device-pixel-ratio'
    }
  }

  /**
   * Return prefixed query
   */
  prefixQuery(prefix, name, colon, value, units) {
    value = new FractionJs(value)

    // 1dpcm = 2.54dpi
    // 1dppx = 96dpi
    if (units === 'dpi') {
      value = value.div(96)
    } else if (units === 'dpcm') {
      value = value.mul(2.54).div(96)
    }
    value = value.simplify()

    if (prefix === '-o-') {
      value = value.n + '/' + value.d
    }
    return this.prefixName(prefix, name) + colon + value
  }

  /**
   * Remove prefixed queries
   */
  clean(rule) {
    if (!this.bad) {
      this.bad = []
      for (let prefix of this.prefixes) {
        this.bad.push(this.prefixName(prefix, 'min'))
        this.bad.push(this.prefixName(prefix, 'max'))
      }
    }

    rule.params = utils.editList(rule.params, queries => {
      return queries.filter(query => this.bad.every(i => !query.includes(i)))
    })
  }

  /**
   * Add prefixed queries
   */
  process(rule) {
    let parent = this.parentPrefix(rule)
    let prefixes = parent ? [parent] : this.prefixes

    rule.params = utils.editList(rule.params, (origin, prefixed) => {
      for (let query of origin) {
        if (
          !query.includes('min-resolution') &&
          !query.includes('max-resolution')
        ) {
          prefixed.push(query)
          continue
        }

        for (let prefix of prefixes) {
          let processed = query.replace(REGEXP, str => {
            let parts = str.match(SPLIT)
            return this.prefixQuery(
              prefix,
              parts[1],
              parts[2],
              parts[3],
              parts[4]
            )
          })
          prefixed.push(processed)
        }
        prefixed.push(query)
      }

      return utils.uniq(prefixed)
    })
  }
}

module.exports = Resolution

},{"./prefixer":69,"./utils":76,"fraction.js":656}],73:[function(require,module,exports){
let { list } = require('postcss')

let OldSelector = require('./old-selector')
let Prefixer = require('./prefixer')
let Browsers = require('./browsers')
let utils = require('./utils')

class Selector extends Prefixer {
  constructor(name, prefixes, all) {
    super(name, prefixes, all)
    this.regexpCache = new Map()
  }

  /**
   * Is rule selectors need to be prefixed
   */
  check(rule) {
    if (rule.selector.includes(this.name)) {
      return !!rule.selector.match(this.regexp())
    }

    return false
  }

  /**
   * Return prefixed version of selector
   */
  prefixed(prefix) {
    return this.name.replace(/^(\W*)/, `$1${prefix}`)
  }

  /**
   * Lazy loadRegExp for name
   */
  regexp(prefix) {
    if (!this.regexpCache.has(prefix)) {
      let name = prefix ? this.prefixed(prefix) : this.name
      this.regexpCache.set(
        prefix,
        new RegExp(`(^|[^:"'=])${utils.escapeRegexp(name)}`, 'gi')
      )
    }

    return this.regexpCache.get(prefix)
  }

  /**
   * All possible prefixes
   */
  possible() {
    return Browsers.prefixes()
  }

  /**
   * Return all possible selector prefixes
   */
  prefixeds(rule) {
    if (rule._autoprefixerPrefixeds) {
      if (rule._autoprefixerPrefixeds[this.name]) {
        return rule._autoprefixerPrefixeds
      }
    } else {
      rule._autoprefixerPrefixeds = {}
    }

    let prefixeds = {}
    if (rule.selector.includes(',')) {
      let ruleParts = list.comma(rule.selector)
      let toProcess = ruleParts.filter(el => el.includes(this.name))

      for (let prefix of this.possible()) {
        prefixeds[prefix] = toProcess
          .map(el => this.replace(el, prefix))
          .join(', ')
      }
    } else {
      for (let prefix of this.possible()) {
        prefixeds[prefix] = this.replace(rule.selector, prefix)
      }
    }

    rule._autoprefixerPrefixeds[this.name] = prefixeds
    return rule._autoprefixerPrefixeds
  }

  /**
   * Is rule already prefixed before
   */
  already(rule, prefixeds, prefix) {
    let index = rule.parent.index(rule) - 1

    while (index >= 0) {
      let before = rule.parent.nodes[index]

      if (before.type !== 'rule') {
        return false
      }

      let some = false
      for (let key in prefixeds[this.name]) {
        let prefixed = prefixeds[this.name][key]
        if (before.selector === prefixed) {
          if (prefix === key) {
            return true
          } else {
            some = true
            break
          }
        }
      }
      if (!some) {
        return false
      }

      index -= 1
    }

    return false
  }

  /**
   * Replace selectors by prefixed one
   */
  replace(selector, prefix) {
    return selector.replace(this.regexp(), `$1${this.prefixed(prefix)}`)
  }

  /**
   * Clone and add prefixes for at-rule
   */
  add(rule, prefix) {
    let prefixeds = this.prefixeds(rule)

    if (this.already(rule, prefixeds, prefix)) {
      return
    }

    let cloned = this.clone(rule, { selector: prefixeds[this.name][prefix] })
    rule.parent.insertBefore(rule, cloned)
  }

  /**
   * Return function to fast find prefixed selector
   */
  old(prefix) {
    return new OldSelector(this, prefix)
  }
}

module.exports = Selector

},{"./browsers":5,"./old-selector":67,"./prefixer":69,"./utils":76,"postcss":743}],74:[function(require,module,exports){
let featureQueries = require('caniuse-lite/data/features/css-featurequeries.js')
let { feature } = require('caniuse-lite')
let { parse } = require('postcss')

let Browsers = require('./browsers')
let brackets = require('./brackets')
let Value = require('./value')
let utils = require('./utils')

let data = feature(featureQueries)

let supported = []
for (let browser in data.stats) {
  let versions = data.stats[browser]
  for (let version in versions) {
    let support = versions[version]
    if (/y/.test(support)) {
      supported.push(browser + ' ' + version)
    }
  }
}

class Supports {
  constructor(Prefixes, all) {
    this.Prefixes = Prefixes
    this.all = all
  }

  /**
   * Return prefixer only with @supports supported browsers
   */
  prefixer() {
    if (this.prefixerCache) {
      return this.prefixerCache
    }

    let filtered = this.all.browsers.selected.filter(i => {
      return supported.includes(i)
    })

    let browsers = new Browsers(
      this.all.browsers.data,
      filtered,
      this.all.options
    )
    this.prefixerCache = new this.Prefixes(
      this.all.data,
      browsers,
      this.all.options
    )
    return this.prefixerCache
  }

  /**
   * Parse string into declaration property and value
   */
  parse(str) {
    let parts = str.split(':')
    let prop = parts[0]
    let value = parts[1]
    if (!value) value = ''
    return [prop.trim(), value.trim()]
  }

  /**
   * Create virtual rule to process it by prefixer
   */
  virtual(str) {
    let [prop, value] = this.parse(str)
    let rule = parse('a{}').first
    rule.append({ prop, value, raws: { before: '' } })
    return rule
  }

  /**
   * Return array of Declaration with all necessary prefixes
   */
  prefixed(str) {
    let rule = this.virtual(str)
    if (this.disabled(rule.first)) {
      return rule.nodes
    }

    let result = { warn: () => null }

    let prefixer = this.prefixer().add[rule.first.prop]
    prefixer && prefixer.process && prefixer.process(rule.first, result)

    for (let decl of rule.nodes) {
      for (let value of this.prefixer().values('add', rule.first.prop)) {
        value.process(decl)
      }
      Value.save(this.all, decl)
    }

    return rule.nodes
  }

  /**
   * Return true if brackets node is "not" word
   */
  isNot(node) {
    return typeof node === 'string' && /not\s*/i.test(node)
  }

  /**
   * Return true if brackets node is "or" word
   */
  isOr(node) {
    return typeof node === 'string' && /\s*or\s*/i.test(node)
  }

  /**
   * Return true if brackets node is (prop: value)
   */
  isProp(node) {
    return (
      typeof node === 'object' &&
      node.length === 1 &&
      typeof node[0] === 'string'
    )
  }

  /**
   * Return true if prefixed property has no unprefixed
   */
  isHack(all, unprefixed) {
    let check = new RegExp(`(\\(|\\s)${utils.escapeRegexp(unprefixed)}:`)
    return !check.test(all)
  }

  /**
   * Return true if we need to remove node
   */
  toRemove(str, all) {
    let [prop, value] = this.parse(str)
    let unprefixed = this.all.unprefixed(prop)

    let cleaner = this.all.cleaner()

    if (
      cleaner.remove[prop] &&
      cleaner.remove[prop].remove &&
      !this.isHack(all, unprefixed)
    ) {
      return true
    }

    for (let checker of cleaner.values('remove', unprefixed)) {
      if (checker.check(value)) {
        return true
      }
    }

    return false
  }

  /**
   * Remove all unnecessary prefixes
   */
  remove(nodes, all) {
    let i = 0
    while (i < nodes.length) {
      if (
        !this.isNot(nodes[i - 1]) &&
        this.isProp(nodes[i]) &&
        this.isOr(nodes[i + 1])
      ) {
        if (this.toRemove(nodes[i][0], all)) {
          nodes.splice(i, 2)
          continue
        }

        i += 2
        continue
      }

      if (typeof nodes[i] === 'object') {
        nodes[i] = this.remove(nodes[i], all)
      }

      i += 1
    }
    return nodes
  }

  /**
   * Clean brackets with one child
   */
  cleanBrackets(nodes) {
    return nodes.map(i => {
      if (typeof i !== 'object') {
        return i
      }

      if (i.length === 1 && typeof i[0] === 'object') {
        return this.cleanBrackets(i[0])
      }

      return this.cleanBrackets(i)
    })
  }

  /**
   * Add " or " between properties and convert it to brackets format
   */
  convert(progress) {
    let result = ['']
    for (let i of progress) {
      result.push([`${i.prop}: ${i.value}`])
      result.push(' or ')
    }
    result[result.length - 1] = ''
    return result
  }

  /**
   * Compress value functions into a string nodes
   */
  normalize(nodes) {
    if (typeof nodes !== 'object') {
      return nodes
    }

    nodes = nodes.filter(i => i !== '')

    if (typeof nodes[0] === 'string') {
      let firstNode = nodes[0].trim()

      if (
        firstNode.includes(':') ||
        firstNode === 'selector' ||
        firstNode === 'not selector'
      ) {
        return [brackets.stringify(nodes)]
      }
    }
    return nodes.map(i => this.normalize(i))
  }

  /**
   * Add prefixes
   */
  add(nodes, all) {
    return nodes.map(i => {
      if (this.isProp(i)) {
        let prefixed = this.prefixed(i[0])
        if (prefixed.length > 1) {
          return this.convert(prefixed)
        }

        return i
      }

      if (typeof i === 'object') {
        return this.add(i, all)
      }

      return i
    })
  }

  /**
   * Add prefixed declaration
   */
  process(rule) {
    let ast = brackets.parse(rule.params)
    ast = this.normalize(ast)
    ast = this.remove(ast, rule.params)
    ast = this.add(ast, rule.params)
    ast = this.cleanBrackets(ast)
    rule.params = brackets.stringify(ast)
  }

  /**
   * Check global options
   */
  disabled(node) {
    if (!this.all.options.grid) {
      if (node.prop === 'display' && node.value.includes('grid')) {
        return true
      }
      if (node.prop.includes('grid') || node.prop === 'justify-items') {
        return true
      }
    }

    if (this.all.options.flexbox === false) {
      if (node.prop === 'display' && node.value.includes('flex')) {
        return true
      }
      let other = ['order', 'justify-content', 'align-items', 'align-content']
      if (node.prop.includes('flex') || other.includes(node.prop)) {
        return true
      }
    }

    return false
  }
}

module.exports = Supports

},{"./brackets":4,"./browsers":5,"./utils":76,"./value":77,"caniuse-lite":648,"caniuse-lite/data/features/css-featurequeries.js":190,"postcss":743}],75:[function(require,module,exports){
let { list } = require('postcss')
let parser = require('postcss-value-parser')

let Browsers = require('./browsers')
let vendor = require('./vendor')

class Transition {
  constructor(prefixes) {
    this.props = ['transition', 'transition-property']
    this.prefixes = prefixes
  }

  /**
   * Process transition and add prefixes for all necessary properties
   */
  add(decl, result) {
    let prefix, prop
    let add = this.prefixes.add[decl.prop]
    let vendorPrefixes = this.ruleVendorPrefixes(decl)
    let declPrefixes = vendorPrefixes || (add && add.prefixes) || []

    let params = this.parse(decl.value)
    let names = params.map(i => this.findProp(i))
    let added = []

    if (names.some(i => i[0] === '-')) {
      return
    }

    for (let param of params) {
      prop = this.findProp(param)
      if (prop[0] === '-') continue

      let prefixer = this.prefixes.add[prop]
      if (!prefixer || !prefixer.prefixes) continue

      for (prefix of prefixer.prefixes) {
        if (vendorPrefixes && !vendorPrefixes.some(p => prefix.includes(p))) {
          continue
        }

        let prefixed = this.prefixes.prefixed(prop, prefix)
        if (prefixed !== '-ms-transform' && !names.includes(prefixed)) {
          if (!this.disabled(prop, prefix)) {
            added.push(this.clone(prop, prefixed, param))
          }
        }
      }
    }

    params = params.concat(added)
    let value = this.stringify(params)

    let webkitClean = this.stringify(
      this.cleanFromUnprefixed(params, '-webkit-')
    )
    if (declPrefixes.includes('-webkit-')) {
      this.cloneBefore(decl, `-webkit-${decl.prop}`, webkitClean)
    }
    this.cloneBefore(decl, decl.prop, webkitClean)
    if (declPrefixes.includes('-o-')) {
      let operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'))
      this.cloneBefore(decl, `-o-${decl.prop}`, operaClean)
    }

    for (prefix of declPrefixes) {
      if (prefix !== '-webkit-' && prefix !== '-o-') {
        let prefixValue = this.stringify(
          this.cleanOtherPrefixes(params, prefix)
        )
        this.cloneBefore(decl, prefix + decl.prop, prefixValue)
      }
    }

    if (value !== decl.value && !this.already(decl, decl.prop, value)) {
      this.checkForWarning(result, decl)
      decl.cloneBefore()
      decl.value = value
    }
  }

  /**
   * Find property name
   */
  findProp(param) {
    let prop = param[0].value
    if (/^\d/.test(prop)) {
      for (let [i, token] of param.entries()) {
        if (i !== 0 && token.type === 'word') {
          return token.value
        }
      }
    }
    return prop
  }

  /**
   * Does we already have this declaration
   */
  already(decl, prop, value) {
    return decl.parent.some(i => i.prop === prop && i.value === value)
  }

  /**
   * Add declaration if it is not exist
   */
  cloneBefore(decl, prop, value) {
    if (!this.already(decl, prop, value)) {
      decl.cloneBefore({ prop, value })
    }
  }

  /**
   * Show transition-property warning
   */
  checkForWarning(result, decl) {
    if (decl.prop !== 'transition-property') {
      return
    }

    let isPrefixed = false
    let hasAssociatedProp = false

    decl.parent.each(i => {
      if (i.type !== 'decl') {
        return undefined
      }
      if (i.prop.indexOf('transition-') !== 0) {
        return undefined
      }
      let values = list.comma(i.value)
      // check if current Rule's transition-property comma separated value list needs prefixes
      if (i.prop === 'transition-property') {
        values.forEach(value => {
          let lookup = this.prefixes.add[value]
          if (lookup && lookup.prefixes && lookup.prefixes.length > 0) {
            isPrefixed = true
          }
        })
        return undefined
      }
      // check if another transition-* prop in current Rule has comma separated value list
      hasAssociatedProp = hasAssociatedProp || values.length > 1
      return false
    })

    if (isPrefixed && hasAssociatedProp) {
      decl.warn(
        result,
        'Replace transition-property to transition, ' +
          'because Autoprefixer could not support ' +
          'any cases of transition-property ' +
          'and other transition-*'
      )
    }
  }

  /**
   * Process transition and remove all unnecessary properties
   */
  remove(decl) {
    let params = this.parse(decl.value)
    params = params.filter(i => {
      let prop = this.prefixes.remove[this.findProp(i)]
      return !prop || !prop.remove
    })
    let value = this.stringify(params)

    if (decl.value === value) {
      return
    }

    if (params.length === 0) {
      decl.remove()
      return
    }

    let double = decl.parent.some(i => {
      return i.prop === decl.prop && i.value === value
    })
    let smaller = decl.parent.some(i => {
      return i !== decl && i.prop === decl.prop && i.value.length > value.length
    })

    if (double || smaller) {
      decl.remove()
      return
    }

    decl.value = value
  }

  /**
   * Parse properties list to array
   */
  parse(value) {
    let ast = parser(value)
    let result = []
    let param = []
    for (let node of ast.nodes) {
      param.push(node)
      if (node.type === 'div' && node.value === ',') {
        result.push(param)
        param = []
      }
    }
    result.push(param)
    return result.filter(i => i.length > 0)
  }

  /**
   * Return properties string from array
   */
  stringify(params) {
    if (params.length === 0) {
      return ''
    }
    let nodes = []
    for (let param of params) {
      if (param[param.length - 1].type !== 'div') {
        param.push(this.div(params))
      }
      nodes = nodes.concat(param)
    }
    if (nodes[0].type === 'div') {
      nodes = nodes.slice(1)
    }
    if (nodes[nodes.length - 1].type === 'div') {
      nodes = nodes.slice(0, +-2 + 1 || undefined)
    }
    return parser.stringify({ nodes })
  }

  /**
   * Return new param array with different name
   */
  clone(origin, name, param) {
    let result = []
    let changed = false
    for (let i of param) {
      if (!changed && i.type === 'word' && i.value === origin) {
        result.push({ type: 'word', value: name })
        changed = true
      } else {
        result.push(i)
      }
    }
    return result
  }

  /**
   * Find or create separator
   */
  div(params) {
    for (let param of params) {
      for (let node of param) {
        if (node.type === 'div' && node.value === ',') {
          return node
        }
      }
    }
    return { type: 'div', value: ',', after: ' ' }
  }

  cleanOtherPrefixes(params, prefix) {
    return params.filter(param => {
      let current = vendor.prefix(this.findProp(param))
      return current === '' || current === prefix
    })
  }

  /**
   * Remove all non-webkit prefixes and unprefixed params if we have prefixed
   */
  cleanFromUnprefixed(params, prefix) {
    let remove = params
      .map(i => this.findProp(i))
      .filter(i => i.slice(0, prefix.length) === prefix)
      .map(i => this.prefixes.unprefixed(i))

    let result = []
    for (let param of params) {
      let prop = this.findProp(param)
      let p = vendor.prefix(prop)
      if (!remove.includes(prop) && (p === prefix || p === '')) {
        result.push(param)
      }
    }
    return result
  }

  /**
   * Check property for disabled by option
   */
  disabled(prop, prefix) {
    let other = ['order', 'justify-content', 'align-self', 'align-content']
    if (prop.includes('flex') || other.includes(prop)) {
      if (this.prefixes.options.flexbox === false) {
        return true
      }

      if (this.prefixes.options.flexbox === 'no-2009') {
        return prefix.includes('2009')
      }
    }
    return undefined
  }

  /**
   * Check if transition prop is inside vendor specific rule
   */
  ruleVendorPrefixes(decl) {
    let { parent } = decl

    if (parent.type !== 'rule') {
      return false
    } else if (!parent.selector.includes(':-')) {
      return false
    }

    let selectors = Browsers.prefixes().filter(s =>
      parent.selector.includes(':' + s)
    )

    return selectors.length > 0 ? selectors : false
  }
}

module.exports = Transition

},{"./browsers":5,"./vendor":78,"postcss":743,"postcss-value-parser":723}],76:[function(require,module,exports){
let { list } = require('postcss')

/**
 * Throw special error, to tell beniary,
 * that this error is from Autoprefixer.
 */
module.exports.error = function (text) {
  let err = new Error(text)
  err.autoprefixer = true
  throw err
}

/**
 * Return array, that doesn’t contain duplicates.
 */
module.exports.uniq = function (array) {
  return [...new Set(array)]
}

/**
 * Return "-webkit-" on "-webkit- old"
 */
module.exports.removeNote = function (string) {
  if (!string.includes(' ')) {
    return string
  }

  return string.split(' ')[0]
}

/**
 * Escape RegExp symbols
 */
module.exports.escapeRegexp = function (string) {
  return string.replace(/[$()*+-.?[\\\]^{|}]/g, '\\$&')
}

/**
 * Return regexp to check, that CSS string contain word
 */
module.exports.regexp = function (word, escape = true) {
  if (escape) {
    word = this.escapeRegexp(word)
  }
  return new RegExp(`(^|[\\s,(])(${word}($|[\\s(,]))`, 'gi')
}

/**
 * Change comma list
 */
module.exports.editList = function (value, callback) {
  let origin = list.comma(value)
  let changed = callback(origin, [])

  if (origin === changed) {
    return value
  }

  let join = value.match(/,\s*/)
  join = join ? join[0] : ', '
  return changed.join(join)
}

/**
 * Split the selector into parts.
 * It returns 3 level deep array because selectors can be comma
 * separated (1), space separated (2), and combined (3)
 * @param {String} selector selector string
 * @return {Array<Array<Array>>} 3 level deep array of split selector
 * @see utils.test.js for examples
 */
module.exports.splitSelector = function (selector) {
  return list.comma(selector).map(i => {
    return list.space(i).map(k => {
      return k.split(/(?=\.|#)/g)
    })
  })
}

},{"postcss":743}],77:[function(require,module,exports){
let Prefixer = require('./prefixer')
let OldValue = require('./old-value')
let vendor = require('./vendor')
let utils = require('./utils')

class Value extends Prefixer {
  /**
   * Clone decl for each prefixed values
   */
  static save(prefixes, decl) {
    let prop = decl.prop
    let result = []

    for (let prefix in decl._autoprefixerValues) {
      let value = decl._autoprefixerValues[prefix]

      if (value === decl.value) {
        continue
      }

      let item
      let propPrefix = vendor.prefix(prop)

      if (propPrefix === '-pie-') {
        continue
      }

      if (propPrefix === prefix) {
        item = decl.value = value
        result.push(item)
        continue
      }

      let prefixed = prefixes.prefixed(prop, prefix)
      let rule = decl.parent

      if (!rule.every(i => i.prop !== prefixed)) {
        result.push(item)
        continue
      }

      let trimmed = value.replace(/\s+/, ' ')
      let already = rule.some(
        i => i.prop === decl.prop && i.value.replace(/\s+/, ' ') === trimmed
      )

      if (already) {
        result.push(item)
        continue
      }

      let cloned = this.clone(decl, { value })
      item = decl.parent.insertBefore(decl, cloned)

      result.push(item)
    }

    return result
  }

  /**
   * Is declaration need to be prefixed
   */
  check(decl) {
    let value = decl.value
    if (!value.includes(this.name)) {
      return false
    }

    return !!value.match(this.regexp())
  }

  /**
   * Lazy regexp loading
   */
  regexp() {
    return this.regexpCache || (this.regexpCache = utils.regexp(this.name))
  }

  /**
   * Add prefix to values in string
   */
  replace(string, prefix) {
    return string.replace(this.regexp(), `$1${prefix}$2`)
  }

  /**
   * Get value with comments if it was not changed
   */
  value(decl) {
    if (decl.raws.value && decl.raws.value.value === decl.value) {
      return decl.raws.value.raw
    } else {
      return decl.value
    }
  }

  /**
   * Save values with next prefixed token
   */
  add(decl, prefix) {
    if (!decl._autoprefixerValues) {
      decl._autoprefixerValues = {}
    }
    let value = decl._autoprefixerValues[prefix] || this.value(decl)

    let before
    do {
      before = value
      value = this.replace(value, prefix)
      if (value === false) return
    } while (value !== before)

    decl._autoprefixerValues[prefix] = value
  }

  /**
   * Return function to fast find prefixed value
   */
  old(prefix) {
    return new OldValue(this.name, prefix + this.name)
  }
}

module.exports = Value

},{"./old-value":68,"./prefixer":69,"./utils":76,"./vendor":78}],78:[function(require,module,exports){
module.exports = {
  prefix(prop) {
    let match = prop.match(/^(-\w+-)/)
    if (match) {
      return match[0]
    }

    return ''
  },

  unprefixed(prop) {
    return prop.replace(/^-\w+-/, '')
  }
}

},{}],79:[function(require,module,exports){
'use strict';
module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    if(a===b) {
      return [ai, bi];
    }
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}

},{}],80:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],81:[function(require,module,exports){

},{}],82:[function(require,module,exports){
arguments[4][81][0].apply(exports,arguments)
},{"dup":81}],83:[function(require,module,exports){
var BrowserslistError = require('./error')

function noop() {}

module.exports = {
  loadQueries: function loadQueries() {
    throw new BrowserslistError(
      'Sharable configs are not supported in client-side build of Browserslist'
    )
  },

  getStat: function getStat(opts) {
    return opts.stats
  },

  loadConfig: function loadConfig(opts) {
    if (opts.config) {
      throw new BrowserslistError(
        'Browserslist config are not supported in client-side build'
      )
    }
  },

  loadCountry: function loadCountry() {
    throw new BrowserslistError(
      'Country statistics are not supported ' +
        'in client-side build of Browserslist'
    )
  },

  loadFeature: function loadFeature() {
    throw new BrowserslistError(
      'Supports queries are not available in client-side build of Browserslist'
    )
  },

  currentNode: function currentNode(resolve, context) {
    return resolve(['maintained node versions'], context)[0]
  },

  parseConfig: noop,

  readConfig: noop,

  findConfig: noop,

  clearCaches: noop,

  oldDataWarning: noop
}

},{"./error":84}],84:[function(require,module,exports){
function BrowserslistError(message) {
  this.name = 'BrowserslistError'
  this.message = message
  this.browserslist = true
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, BrowserslistError)
  }
}

BrowserslistError.prototype = Error.prototype

module.exports = BrowserslistError

},{}],85:[function(require,module,exports){
(function (process){(function (){
var jsReleases = require('node-releases/data/processed/envs.json')
var agents = require('caniuse-lite/dist/unpacker/agents').agents
var jsEOL = require('node-releases/data/release-schedule/release-schedule.json')
var path = require('path')
var e2c = require('electron-to-chromium/versions')

var BrowserslistError = require('./error')
var env = require('./node') // Will load browser.js in webpack

var YEAR = 365.259641 * 24 * 60 * 60 * 1000
var ANDROID_EVERGREEN_FIRST = 37

var QUERY_OR = 1
var QUERY_AND = 2

function isVersionsMatch(versionA, versionB) {
  return (versionA + '.').indexOf(versionB + '.') === 0
}

function isEolReleased(name) {
  var version = name.slice(1)
  return jsReleases.some(function (i) {
    return isVersionsMatch(i.version, version)
  })
}

function normalize(versions) {
  return versions.filter(function (version) {
    return typeof version === 'string'
  })
}

function normalizeElectron(version) {
  var versionToUse = version
  if (version.split('.').length === 3) {
    versionToUse = version.split('.').slice(0, -1).join('.')
  }
  return versionToUse
}

function nameMapper(name) {
  return function mapName(version) {
    return name + ' ' + version
  }
}

function getMajor(version) {
  return parseInt(version.split('.')[0])
}

function getMajorVersions(released, number) {
  if (released.length === 0) return []
  var majorVersions = uniq(released.map(getMajor))
  var minimum = majorVersions[majorVersions.length - number]
  if (!minimum) {
    return released
  }
  var selected = []
  for (var i = released.length - 1; i >= 0; i--) {
    if (minimum > getMajor(released[i])) break
    selected.unshift(released[i])
  }
  return selected
}

function uniq(array) {
  var filtered = []
  for (var i = 0; i < array.length; i++) {
    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])
  }
  return filtered
}

// Helpers

function fillUsage(result, name, data) {
  for (var i in data) {
    result[name + ' ' + i] = data[i]
  }
}

function generateFilter(sign, version) {
  version = parseFloat(version)
  if (sign === '>') {
    return function (v) {
      return parseFloat(v) > version
    }
  } else if (sign === '>=') {
    return function (v) {
      return parseFloat(v) >= version
    }
  } else if (sign === '<') {
    return function (v) {
      return parseFloat(v) < version
    }
  } else {
    return function (v) {
      return parseFloat(v) <= version
    }
  }
}

function generateSemverFilter(sign, version) {
  version = version.split('.').map(parseSimpleInt)
  version[1] = version[1] || 0
  version[2] = version[2] || 0
  if (sign === '>') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) > 0
    }
  } else if (sign === '>=') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) >= 0
    }
  } else if (sign === '<') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) > 0
    }
  } else {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) >= 0
    }
  }
}

function parseSimpleInt(x) {
  return parseInt(x)
}

function compare(a, b) {
  if (a < b) return -1
  if (a > b) return +1
  return 0
}

function compareSemver(a, b) {
  return (
    compare(parseInt(a[0]), parseInt(b[0])) ||
    compare(parseInt(a[1] || '0'), parseInt(b[1] || '0')) ||
    compare(parseInt(a[2] || '0'), parseInt(b[2] || '0'))
  )
}

// this follows the npm-like semver behavior
function semverFilterLoose(operator, range) {
  range = range.split('.').map(parseSimpleInt)
  if (typeof range[1] === 'undefined') {
    range[1] = 'x'
  }
  // ignore any patch version because we only return minor versions
  // range[2] = 'x'
  switch (operator) {
    case '<=':
      return function (version) {
        version = version.split('.').map(parseSimpleInt)
        return compareSemverLoose(version, range) <= 0
      }
    case '>=':
    default:
      return function (version) {
        version = version.split('.').map(parseSimpleInt)
        return compareSemverLoose(version, range) >= 0
      }
  }
}

// this follows the npm-like semver behavior
function compareSemverLoose(version, range) {
  if (version[0] !== range[0]) {
    return version[0] < range[0] ? -1 : +1
  }
  if (range[1] === 'x') {
    return 0
  }
  if (version[1] !== range[1]) {
    return version[1] < range[1] ? -1 : +1
  }
  return 0
}

function resolveVersion(data, version) {
  if (data.versions.indexOf(version) !== -1) {
    return version
  } else if (browserslist.versionAliases[data.name][version]) {
    return browserslist.versionAliases[data.name][version]
  } else {
    return false
  }
}

function normalizeVersion(data, version) {
  var resolved = resolveVersion(data, version)
  if (resolved) {
    return resolved
  } else if (data.versions.length === 1) {
    return data.versions[0]
  } else {
    return false
  }
}

function filterByYear(since, context) {
  since = since / 1000
  return Object.keys(agents).reduce(function (selected, name) {
    var data = byName(name, context)
    if (!data) return selected
    var versions = Object.keys(data.releaseDate).filter(function (v) {
      var date = data.releaseDate[v]
      return date !== null && date >= since
    })
    return selected.concat(versions.map(nameMapper(data.name)))
  }, [])
}

function cloneData(data) {
  return {
    name: data.name,
    versions: data.versions,
    released: data.released,
    releaseDate: data.releaseDate
  }
}

function mapVersions(data, map) {
  data.versions = data.versions.map(function (i) {
    return map[i] || i
  })
  data.released = data.versions.map(function (i) {
    return map[i] || i
  })
  var fixedDate = {}
  for (var i in data.releaseDate) {
    fixedDate[map[i] || i] = data.releaseDate[i]
  }
  data.releaseDate = fixedDate
  return data
}

function byName(name, context) {
  name = name.toLowerCase()
  name = browserslist.aliases[name] || name
  if (context.mobileToDesktop && browserslist.desktopNames[name]) {
    var desktop = browserslist.data[browserslist.desktopNames[name]]
    if (name === 'android') {
      return normalizeAndroidData(cloneData(browserslist.data[name]), desktop)
    } else {
      var cloned = cloneData(desktop)
      cloned.name = name
      if (name === 'op_mob') {
        cloned = mapVersions(cloned, { '10.0-10.1': '10' })
      }
      return cloned
    }
  }
  return browserslist.data[name]
}

function normalizeAndroidVersions(androidVersions, chromeVersions) {
  var firstEvergreen = ANDROID_EVERGREEN_FIRST
  var last = chromeVersions[chromeVersions.length - 1]
  return androidVersions
    .filter(function (version) {
      return /^(?:[2-4]\.|[34]$)/.test(version)
    })
    .concat(chromeVersions.slice(firstEvergreen - last - 1))
}

function normalizeAndroidData(android, chrome) {
  android.released = normalizeAndroidVersions(android.released, chrome.released)
  android.versions = normalizeAndroidVersions(android.versions, chrome.versions)
  return android
}

function checkName(name, context) {
  var data = byName(name, context)
  if (!data) throw new BrowserslistError('Unknown browser ' + name)
  return data
}

function unknownQuery(query) {
  return new BrowserslistError(
    'Unknown browser query `' +
      query +
      '`. ' +
      'Maybe you are using old Browserslist or made typo in query.'
  )
}

function filterAndroid(list, versions, context) {
  if (context.mobileToDesktop) return list
  var released = browserslist.data.android.released
  var last = released[released.length - 1]
  var diff = last - ANDROID_EVERGREEN_FIRST - versions
  if (diff > 0) {
    return list.slice(-1)
  } else {
    return list.slice(diff - 1)
  }
}

/**
 * Resolves queries into a browser list.
 * @param {string|string[]} queries Queries to combine.
 * Either an array of queries or a long string of queries.
 * @param {object} [context] Optional arguments to
 * the select function in `queries`.
 * @returns {string[]} A list of browsers
 */
function resolve(queries, context) {
  if (Array.isArray(queries)) {
    queries = flatten(queries.map(parse))
  } else {
    queries = parse(queries)
  }

  return queries.reduce(function (result, query, index) {
    var selection = query.queryString

    var isExclude = selection.indexOf('not ') === 0
    if (isExclude) {
      if (index === 0) {
        throw new BrowserslistError(
          'Write any browsers query (for instance, `defaults`) ' +
            'before `' +
            selection +
            '`'
        )
      }
      selection = selection.slice(4)
    }

    for (var i = 0; i < QUERIES.length; i++) {
      var type = QUERIES[i]
      var match = selection.match(type.regexp)
      if (match) {
        var args = [context].concat(match.slice(1))
        var array = type.select.apply(browserslist, args).map(function (j) {
          var parts = j.split(' ')
          if (parts[1] === '0') {
            return parts[0] + ' ' + byName(parts[0], context).versions[0]
          } else {
            return j
          }
        })

        switch (query.type) {
          case QUERY_AND:
            if (isExclude) {
              return result.filter(function (j) {
                return array.indexOf(j) === -1
              })
            } else {
              return result.filter(function (j) {
                return array.indexOf(j) !== -1
              })
            }
          case QUERY_OR:
          default:
            if (isExclude) {
              var filter = {}
              array.forEach(function (j) {
                filter[j] = true
              })
              return result.filter(function (j) {
                return !filter[j]
              })
            }
            return result.concat(array)
        }
      }
    }

    throw unknownQuery(selection)
  }, [])
}

var cache = {}

/**
 * Return array of browsers by selection queries.
 *
 * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.
 * @param {object} [opts] Options.
 * @param {string} [opts.path="."] Path to processed file.
 *                                 It will be used to find config files.
 * @param {string} [opts.env="production"] Processing environment.
 *                                         It will be used to take right
 *                                         queries from config file.
 * @param {string} [opts.config] Path to config file with queries.
 * @param {object} [opts.stats] Custom browser usage statistics
 *                              for "> 1% in my stats" query.
 * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown
 *                                                     version in direct query.
 * @param {boolean} [opts.dangerousExtend] Disable security checks
 *                                         for extend query.
 * @param {boolean} [opts.throwOnMissing] Throw error on missing env.
 * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop
 *                                         version when Can I Use doesn't have
 *                                         data about the specified version.
 * @returns {string[]} Array with browser names in Can I Use.
 *
 * @example
 * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']
 */
function browserslist(queries, opts) {
  if (typeof opts === 'undefined') opts = {}

  if (typeof opts.path === 'undefined') {
    opts.path = path.resolve ? path.resolve('.') : '.'
  }

  if (typeof queries === 'undefined' || queries === null) {
    var config = browserslist.loadConfig(opts)
    if (config) {
      queries = config
    } else {
      queries = browserslist.defaults
    }
  }

  if (!(typeof queries === 'string' || Array.isArray(queries))) {
    throw new BrowserslistError(
      'Browser queries must be an array or string. Got ' + typeof queries + '.'
    )
  }

  var context = {
    ignoreUnknownVersions: opts.ignoreUnknownVersions,
    dangerousExtend: opts.dangerousExtend,
    mobileToDesktop: opts.mobileToDesktop,
    path: opts.path,
    env: opts.env
  }

  env.oldDataWarning(browserslist.data)
  var stats = env.getStat(opts, browserslist.data)
  if (stats) {
    context.customUsage = {}
    for (var browser in stats) {
      fillUsage(context.customUsage, browser, stats[browser])
    }
  }

  var cacheKey = JSON.stringify([queries, context])
  if (cache[cacheKey]) return cache[cacheKey]

  var result = uniq(resolve(queries, context)).sort(function (name1, name2) {
    name1 = name1.split(' ')
    name2 = name2.split(' ')
    if (name1[0] === name2[0]) {
      // assumptions on caniuse data
      // 1) version ranges never overlaps
      // 2) if version is not a range, it never contains `-`
      var version1 = name1[1].split('-')[0]
      var version2 = name2[1].split('-')[0]
      return compareSemver(version2.split('.'), version1.split('.'))
    } else {
      return compare(name1[0], name2[0])
    }
  })
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    cache[cacheKey] = result
  }
  return result
}

function parse(queries) {
  var qs = []
  do {
    queries = doMatch(queries, qs)
  } while (queries)
  return qs
}

function doMatch(string, qs) {
  var or = /^(?:,\s*|\s+or\s+)(.*)/i
  var and = /^\s+and\s+(.*)/i

  return find(string, function (parsed, n, max) {
    if (and.test(parsed)) {
      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] })
      return true
    } else if (or.test(parsed)) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] })
      return true
    } else if (n === max) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() })
      return true
    }
    return false
  })
}

function find(string, predicate) {
  for (var n = 1, max = string.length; n <= max; n++) {
    var parsed = string.substr(-n, n)
    if (predicate(parsed, n, max)) {
      return string.slice(0, -n)
    }
  }
  return ''
}

function flatten(array) {
  if (!Array.isArray(array)) return [array]
  return array.reduce(function (a, b) {
    return a.concat(flatten(b))
  }, [])
}

// Will be filled by Can I Use data below
browserslist.cache = {}
browserslist.data = {}
browserslist.usage = {
  global: {},
  custom: null
}

// Default browsers query
browserslist.defaults = ['> 0.5%', 'last 2 versions', 'Firefox ESR', 'not dead']

// Browser names aliases
browserslist.aliases = {
  fx: 'firefox',
  ff: 'firefox',
  ios: 'ios_saf',
  explorer: 'ie',
  blackberry: 'bb',
  explorermobile: 'ie_mob',
  operamini: 'op_mini',
  operamobile: 'op_mob',
  chromeandroid: 'and_chr',
  firefoxandroid: 'and_ff',
  ucandroid: 'and_uc',
  qqandroid: 'and_qq'
}

// Can I Use only provides a few versions for some browsers (e.g. and_chr).
// Fallback to a similar browser for unknown versions
browserslist.desktopNames = {
  and_chr: 'chrome',
  and_ff: 'firefox',
  ie_mob: 'ie',
  op_mob: 'opera',
  android: 'chrome' // has extra processing logic
}

// Aliases to work with joined versions like `ios_saf 7.0-7.1`
browserslist.versionAliases = {}

browserslist.clearCaches = env.clearCaches
browserslist.parseConfig = env.parseConfig
browserslist.readConfig = env.readConfig
browserslist.findConfig = env.findConfig
browserslist.loadConfig = env.loadConfig

/**
 * Return browsers market coverage.
 *
 * @param {string[]} browsers Browsers names in Can I Use.
 * @param {string|object} [stats="global"] Which statistics should be used.
 *                                         Country code or custom statistics.
 *                                         Pass `"my stats"` to load statistics
 *                                         from Browserslist files.
 *
 * @return {number} Total market coverage for all selected browsers.
 *
 * @example
 * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1
 */
browserslist.coverage = function (browsers, stats) {
  var data
  if (typeof stats === 'undefined') {
    data = browserslist.usage.global
  } else if (stats === 'my stats') {
    var opts = {}
    opts.path = path.resolve ? path.resolve('.') : '.'
    var customStats = env.getStat(opts)
    if (!customStats) {
      throw new BrowserslistError('Custom usage statistics was not provided')
    }
    data = {}
    for (var browser in customStats) {
      fillUsage(data, browser, customStats[browser])
    }
  } else if (typeof stats === 'string') {
    if (stats.length > 2) {
      stats = stats.toLowerCase()
    } else {
      stats = stats.toUpperCase()
    }
    env.loadCountry(browserslist.usage, stats, browserslist.data)
    data = browserslist.usage[stats]
  } else {
    if ('dataByBrowser' in stats) {
      stats = stats.dataByBrowser
    }
    data = {}
    for (var name in stats) {
      for (var version in stats[name]) {
        data[name + ' ' + version] = stats[name][version]
      }
    }
  }

  return browsers.reduce(function (all, i) {
    var usage = data[i]
    if (usage === undefined) {
      usage = data[i.replace(/ \S+$/, ' 0')]
    }
    return all + (usage || 0)
  }, 0)
}

function nodeQuery(context, version) {
  var nodeReleases = jsReleases.filter(function (i) {
    return i.name === 'nodejs'
  })
  var matched = nodeReleases.filter(function (i) {
    return isVersionsMatch(i.version, version)
  })
  if (matched.length === 0) {
    if (context.ignoreUnknownVersions) {
      return []
    } else {
      throw new BrowserslistError('Unknown version ' + version + ' of Node.js')
    }
  }
  return ['node ' + matched[matched.length - 1].version]
}

function sinceQuery(context, year, month, date) {
  year = parseInt(year)
  month = parseInt(month || '01') - 1
  date = parseInt(date || '01')
  return filterByYear(Date.UTC(year, month, date, 0, 0, 0), context)
}

function coverQuery(context, coverage, statMode) {
  coverage = parseFloat(coverage)
  var usage = browserslist.usage.global
  if (statMode) {
    if (statMode.match(/^my\s+stats$/i)) {
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      usage = context.customUsage
    } else {
      var place
      if (statMode.length === 2) {
        place = statMode.toUpperCase()
      } else {
        place = statMode.toLowerCase()
      }
      env.loadCountry(browserslist.usage, place, browserslist.data)
      usage = browserslist.usage[place]
    }
  }
  var versions = Object.keys(usage).sort(function (a, b) {
    return usage[b] - usage[a]
  })
  var coveraged = 0
  var result = []
  var version
  for (var i = 0; i < versions.length; i++) {
    version = versions[i]
    if (usage[version] === 0) break
    coveraged += usage[version]
    result.push(version)
    if (coveraged >= coverage) break
  }
  return result
}

var QUERIES = [
  {
    regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = getMajorVersions(data.released, versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context)
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = data.released.slice(-versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') {
          list = filterAndroid(list, versions, context)
        }
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
    select: function (context, versions) {
      var validVersions = getMajorVersions(Object.keys(e2c), versions)
      return validVersions.map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context)
      var validVersions = getMajorVersions(data.released, versions)
      var list = validVersions.map(nameMapper(data.name))
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context)
      }
      return list
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(e2c)
        .slice(-versions)
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name, context)
      var list = data.released.slice(-versions).map(nameMapper(data.name))
      if (data.name === 'android') {
        list = filterAndroid(list, versions, context)
      }
      return list
    }
  },
  {
    regexp: /^unreleased\s+versions$/i,
    select: function (context) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name, context)
        if (!data) return selected
        var list = data.versions.filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        list = list.map(nameMapper(data.name))
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^unreleased\s+electron\s+versions?$/i,
    select: function () {
      return []
    }
  },
  {
    regexp: /^unreleased\s+(\w+)\s+versions?$/i,
    select: function (context, name) {
      var data = checkName(name, context)
      return data.versions
        .filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        .map(nameMapper(data.name))
    }
  },
  {
    regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
    select: function (context, years) {
      return filterByYear(Date.now() - YEAR * years, context)
    }
  },
  {
    regexp: /^since (\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^since (\d+)-(\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^since (\d+)-(\d+)-(\d+)$/i,
    select: sinceQuery
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      var usage = browserslist.usage.global
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+my\s+stats$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version]
        if (percentage == null) {
          return result
        }

        if (sign === '>') {
          if (percentage > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (percentage < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (percentage <= popularity) {
            result.push(version)
          }
        } else if (percentage >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+(\S+)\s+stats$/,
    select: function (context, sign, popularity, name) {
      popularity = parseFloat(popularity)
      var stats = env.loadStat(context, name, browserslist.data)
      if (stats) {
        context.customUsage = {}
        for (var browser in stats) {
          fillUsage(context.customUsage, browser, stats[browser])
        }
      }
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version]
        if (percentage == null) {
          return result
        }

        if (sign === '>') {
          if (percentage > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (percentage < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (percentage <= popularity) {
            result.push(version)
          }
        } else if (percentage >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d+|\d+\.\d+|\.\d+)%\s+in\s+((alt-)?\w\w)$/,
    select: function (context, sign, popularity, place) {
      popularity = parseFloat(popularity)
      if (place.length === 2) {
        place = place.toUpperCase()
      } else {
        place = place.toLowerCase()
      }
      env.loadCountry(browserslist.usage, place, browserslist.data)
      var usage = browserslist.usage[place]
      return Object.keys(usage).reduce(function (result, version) {
        var percentage = usage[version]
        if (percentage == null) {
          return result
        }

        if (sign === '>') {
          if (percentage > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (percentage < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (percentage <= popularity) {
            result.push(version)
          }
        } else if (percentage >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%$/i,
    select: coverQuery
  },
  {
    regexp: /^cover\s+(\d+|\d+\.\d+|\.\d+)%\s+in\s+(my\s+stats|(alt-)?\w\w)$/i,
    select: coverQuery
  },
  {
    regexp: /^supports\s+([\w-]+)$/,
    select: function (context, feature) {
      env.loadFeature(browserslist.cache, feature)
      var features = browserslist.cache[feature]
      return Object.keys(features).reduce(function (result, version) {
        var flags = features[version]
        if (flags.indexOf('y') >= 0 || flags.indexOf('a') >= 0) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var fromToUse = normalizeElectron(from)
      var toToUse = normalizeElectron(to)
      if (!e2c[fromToUse]) {
        throw new BrowserslistError('Unknown version ' + from + ' of electron')
      }
      if (!e2c[toToUse]) {
        throw new BrowserslistError('Unknown version ' + to + ' of electron')
      }
      from = parseFloat(from)
      to = parseFloat(to)
      return Object.keys(e2c)
        .filter(function (i) {
          var parsed = parseFloat(i)
          return parsed >= from && parsed <= to
        })
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^node\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var nodeVersions = jsReleases
        .filter(function (i) {
          return i.name === 'nodejs'
        })
        .map(function (i) {
          return i.version
        })
      return nodeVersions
        .filter(semverFilterLoose('>=', from))
        .filter(semverFilterLoose('<=', to))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, name, from, to) {
      var data = checkName(name, context)
      from = parseFloat(normalizeVersion(data, from) || from)
      to = parseFloat(normalizeVersion(data, to) || to)
      function filter(v) {
        var parsed = parseFloat(v)
        return parsed >= from && parsed <= to
      }
      return data.released.filter(filter).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var versionToUse = normalizeElectron(version)
      return Object.keys(e2c)
        .filter(generateFilter(sign, versionToUse))
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var nodeVersions = jsReleases
        .filter(function (i) {
          return i.name === 'nodejs'
        })
        .map(function (i) {
          return i.version
        })
      return nodeVersions
        .filter(generateSemverFilter(sign, version))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
    select: function (context, name, sign, version) {
      var data = checkName(name, context)
      var alias = browserslist.versionAliases[data.name][version]
      if (alias) {
        version = alias
      }
      return data.released
        .filter(generateFilter(sign, version))
        .map(function (v) {
          return data.name + ' ' + v
        })
    }
  },
  {
    regexp: /^(firefox|ff|fx)\s+esr$/i,
    select: function () {
      return ['firefox 78', 'firefox 91']
    }
  },
  {
    regexp: /(operamini|op_mini)\s+all/i,
    select: function () {
      return ['op_mini all']
    }
  },
  {
    regexp: /^electron\s+([\d.]+)$/i,
    select: function (context, version) {
      var versionToUse = normalizeElectron(version)
      var chrome = e2c[versionToUse]
      if (!chrome) {
        throw new BrowserslistError(
          'Unknown version ' + version + ' of electron'
        )
      }
      return ['chrome ' + chrome]
    }
  },
  {
    regexp: /^node\s+(\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^node\s+(\d+\.\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^node\s+(\d+\.\d+\.\d+)$/i,
    select: nodeQuery
  },
  {
    regexp: /^current\s+node$/i,
    select: function (context) {
      return [env.currentNode(resolve, context)]
    }
  },
  {
    regexp: /^maintained\s+node\s+versions$/i,
    select: function (context) {
      var now = Date.now()
      var queries = Object.keys(jsEOL)
        .filter(function (key) {
          return (
            now < Date.parse(jsEOL[key].end) &&
            now > Date.parse(jsEOL[key].start) &&
            isEolReleased(key)
          )
        })
        .map(function (key) {
          return 'node ' + key.slice(1)
        })
      return resolve(queries, context)
    }
  },
  {
    regexp: /^phantomjs\s+1.9$/i,
    select: function () {
      return ['safari 5']
    }
  },
  {
    regexp: /^phantomjs\s+2.1$/i,
    select: function () {
      return ['safari 6']
    }
  },
  {
    regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
    select: function (context, name, version) {
      if (/^tp$/i.test(version)) version = 'TP'
      var data = checkName(name, context)
      var alias = normalizeVersion(data, version)
      if (alias) {
        version = alias
      } else {
        if (version.indexOf('.') === -1) {
          alias = version + '.0'
        } else {
          alias = version.replace(/\.0$/, '')
        }
        alias = normalizeVersion(data, alias)
        if (alias) {
          version = alias
        } else if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new BrowserslistError(
            'Unknown version ' + version + ' of ' + name
          )
        }
      }
      return [data.name + ' ' + version]
    }
  },
  {
    regexp: /^browserslist config$/i,
    select: function (context) {
      return browserslist(undefined, context)
    }
  },
  {
    regexp: /^extends (.+)$/i,
    select: function (context, name) {
      return resolve(env.loadQueries(context, name), context)
    }
  },
  {
    regexp: /^defaults$/i,
    select: function (context) {
      return resolve(browserslist.defaults, context)
    }
  },
  {
    regexp: /^dead$/i,
    select: function (context) {
      var dead = [
        'ie <= 10',
        'ie_mob <= 11',
        'bb <= 10',
        'op_mob <= 12.1',
        'samsung 4'
      ]
      return resolve(dead, context)
    }
  },
  {
    regexp: /^(\w+)$/i,
    select: function (context, name) {
      if (byName(name, context)) {
        throw new BrowserslistError(
          'Specify versions in Browserslist query for browser ' + name
        )
      } else {
        throw unknownQuery(name)
      }
    }
  }
]

// Get and convert Can I Use data

;(function () {
  for (var name in agents) {
    var browser = agents[name]
    browserslist.data[name] = {
      name: name,
      versions: normalize(agents[name].versions),
      released: normalize(agents[name].versions.slice(0, -3)),
      releaseDate: agents[name].release_date
    }
    fillUsage(browserslist.usage.global, name, browser.usage_global)

    browserslist.versionAliases[name] = {}
    for (var i = 0; i < browser.versions.length; i++) {
      var full = browser.versions[i]
      if (!full) continue

      if (full.indexOf('-') !== -1) {
        var interval = full.split('-')
        for (var j = 0; j < interval.length; j++) {
          browserslist.versionAliases[name][interval[j]] = full
        }
      }
    }
  }

  browserslist.versionAliases.op_mob['59'] = '58'
})()

module.exports = browserslist

}).call(this)}).call(this,require('_process'))
},{"./error":84,"./node":83,"_process":755,"caniuse-lite/dist/unpacker/agents":643,"electron-to-chromium/versions":655,"node-releases/data/processed/envs.json":659,"node-releases/data/release-schedule/release-schedule.json":660,"path":81}],86:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":80,"buffer":86,"ieee754":657}],87:[function(require,module,exports){
module.exports={A:{A:{J:0.0131217,D:0.00621152,E:0.0363648,F:0.0800026,A:0.0145459,B:0.683659,oB:0.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oB","J","D","E","F","A","B","","",""],E:"IE",F:{oB:962323200,J:998870400,D:1161129600,E:1237420800,F:1300060800,A:1346716800,B:1381968000}},B:{A:{C:0.008712,K:0.004267,L:0.004356,G:0.004356,M:0.008712,N:0.013068,O:0.034848,P:0,Q:0.004298,R:0.00944,U:0.004043,V:0.008712,W:0.008712,X:0.008712,Y:0.02178,Z:0.004318,a:0.013068,b:0.008712,c:0.013068,d:0.02178,e:0.02178,S:0.156816,f:2.80526,H:1.04544},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","K","L","G","M","N","O","P","Q","R","U","V","W","X","Y","Z","a","b","c","d","e","S","f","H","","",""],E:"Edge",F:{C:1438128000,K:1447286400,L:1470096000,G:1491868800,M:1508198400,N:1525046400,O:1542067200,P:1579046400,Q:1581033600,R:1586736000,U:1590019200,V:1594857600,W:1598486400,X:1602201600,Y:1605830400,Z:1611360000,a:1614816000,b:1618358400,c:1622073600,d:1626912000,e:1630627200,S:1632441600,f:1634774400,H:1637539200},D:{C:"ms",K:"ms",L:"ms",G:"ms",M:"ms",N:"ms",O:"ms"}},C:{A:{"0":0.004271,"1":0.004783,"2":0.00487,"3":0.005029,"4":0.0047,"5":0.034848,"6":0.008712,"7":0.004356,"8":0.004525,"9":0.004293,pB:0.004318,eB:0.004271,I:0.026136,g:0.004879,J:0.020136,D:0.005725,E:0.004525,F:0.00533,A:0.004283,B:0.004318,C:0.004471,K:0.004486,L:0.00453,G:0.004293,M:0.004417,N:0.004425,O:0.004293,h:0.004443,i:0.004283,j:0.004293,k:0.013698,l:0.004293,m:0.008786,n:0.004356,o:0.004317,p:0.004393,q:0.004418,r:0.008834,s:0.004293,t:0.008928,u:0.004471,v:0.009284,w:0.004707,x:0.009076,y:0.004356,z:0.004783,AB:0.004356,BB:0.004538,CB:0.008282,DB:0.004356,EB:0.069696,FB:0.004335,GB:0.008586,HB:0.008712,IB:0.013068,JB:0.004425,KB:0.004356,fB:0.004356,LB:0.008712,gB:0.004356,MB:0.004425,NB:0.008712,T:0.00415,OB:0.004267,PB:0.008712,QB:0.004267,RB:0.013068,SB:0.00415,TB:0.004293,UB:0.004425,VB:0.008712,WB:0.00415,XB:0.00415,YB:0.004318,ZB:0.004356,aB:0.004356,bB:0.095832,P:0.008712,Q:0.008712,R:0.013068,hB:0.013068,U:0.008712,V:0.013068,W:0.004356,X:0.008712,Y:0.008712,Z:0.02178,a:0.02178,b:0.017424,c:0.082764,d:0.039204,e:0.439956,S:2.44372,f:0.026136,H:0,iB:0,qB:0.008786,rB:0.00487},B:"moz",C:["pB","eB","qB","rB","I","g","J","D","E","F","A","B","C","K","L","G","M","N","O","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","fB","LB","gB","MB","NB","T","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","aB","bB","P","Q","R","hB","U","V","W","X","Y","Z","a","b","c","d","e","S","f","H","iB",""],E:"Firefox",F:{"0":1431475200,"1":1435881600,"2":1439251200,"3":1442880000,"4":1446508800,"5":1450137600,"6":1453852800,"7":1457395200,"8":1461628800,"9":1465257600,pB:1161648000,eB:1213660800,qB:1246320000,rB:1264032000,I:1300752000,g:1308614400,J:1313452800,D:1317081600,E:1317081600,F:1320710400,A:1324339200,B:1327968000,C:1331596800,K:1335225600,L:1338854400,G:1342483200,M:1346112000,N:1349740800,O:1353628800,h:1357603200,i:1361232000,j:1364860800,k:1368489600,l:1372118400,m:1375747200,n:1379376000,o:1386633600,p:1391472000,q:1395100800,r:1398729600,s:1402358400,t:1405987200,u:1409616000,v:1413244800,w:1417392000,x:1421107200,y:1424736000,z:1428278400,AB:1470096000,BB:1474329600,CB:1479168000,DB:1485216000,EB:1488844800,FB:1492560000,GB:1497312000,HB:1502150400,IB:1506556800,JB:1510617600,KB:1516665600,fB:1520985600,LB:1525824000,gB:1529971200,MB:1536105600,NB:1540252800,T:1544486400,OB:1548720000,PB:1552953600,QB:1558396800,RB:1562630400,SB:1567468800,TB:1571788800,UB:1575331200,VB:1578355200,WB:1581379200,XB:1583798400,YB:1586304000,ZB:1588636800,aB:1591056000,bB:1593475200,P:1595894400,Q:1598313600,R:1600732800,hB:1603152000,U:1605571200,V:1607990400,W:1611619200,X:1614038400,Y:1616457600,Z:1618790400,a:1622505600,b:1626134400,c:1628553600,d:1630972800,e:1633392000,S:1635811200,f:1638835200,H:null,iB:null}},D:{A:{"0":0.02178,"1":0.004464,"2":0.013068,"3":0.0236,"4":0.004293,"5":0.008712,"6":0.004465,"7":0.004642,"8":0.004891,"9":0.013068,I:0.004706,g:0.004879,J:0.004879,D:0.005591,E:0.005591,F:0.005591,A:0.004534,B:0.004464,C:0.010424,K:0.0083,L:0.004706,G:0.015087,M:0.004393,N:0.004393,O:0.008652,h:0.004293,i:0.004393,j:0.004317,k:0.008712,l:0.008786,m:0.008712,n:0.004461,o:0.004141,p:0.004326,q:0.0047,r:0.004538,s:0.004293,t:0.008596,u:0.004566,v:0.004356,w:0.008712,x:0.008712,y:0.004335,z:0.004464,AB:0.026136,BB:0.126324,CB:0.004293,DB:0.008712,EB:0.004356,FB:0.013068,GB:0.008712,HB:0.008712,IB:0.052272,JB:0.008712,KB:0.008712,fB:0.004356,LB:0.008712,gB:0.030492,MB:0.008712,NB:0.013068,T:0.02178,OB:0.017424,PB:0.02178,QB:0.013068,RB:0.008712,SB:0.060984,TB:0.04356,UB:0.017424,VB:0.04356,WB:0.013068,XB:0.030492,YB:0.06534,ZB:0.060984,aB:0.02178,bB:0.04356,P:0.169884,Q:0.069696,R:0.047916,U:0.08712,V:0.091476,W:0.104544,X:0.100188,Y:0.30492,Z:0.074052,a:0.095832,b:0.082764,c:0.257004,d:0.34848,e:0.439956,S:1.7424,f:13.9566,H:8.06296,iB:0.017424,sB:0.013068,tB:0},B:"webkit",C:["","","","","I","g","J","D","E","F","A","B","C","K","L","G","M","N","O","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","fB","LB","gB","MB","NB","T","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","aB","bB","P","Q","R","U","V","W","X","Y","Z","a","b","c","d","e","S","f","H","iB","sB","tB"],E:"Chrome",F:{"0":1412640000,"1":1416268800,"2":1421798400,"3":1425513600,"4":1429401600,"5":1432080000,"6":1437523200,"7":1441152000,"8":1444780800,"9":1449014400,I:1264377600,g:1274745600,J:1283385600,D:1287619200,E:1291248000,F:1296777600,A:1299542400,B:1303862400,C:1307404800,K:1312243200,L:1316131200,G:1316131200,M:1319500800,N:1323734400,O:1328659200,h:1332892800,i:1337040000,j:1340668800,k:1343692800,l:1348531200,m:1352246400,n:1357862400,o:1361404800,p:1364428800,q:1369094400,r:1374105600,s:1376956800,t:1384214400,u:1389657600,v:1392940800,w:1397001600,x:1400544000,y:1405468800,z:1409011200,AB:1453248000,BB:1456963200,CB:1460592000,DB:1464134400,EB:1469059200,FB:1472601600,GB:1476230400,HB:1480550400,IB:1485302400,JB:1489017600,KB:1492560000,fB:1496707200,LB:1500940800,gB:1504569600,MB:1508198400,NB:1512518400,T:1516752000,OB:1520294400,PB:1523923200,QB:1527552000,RB:1532390400,SB:1536019200,TB:1539648000,UB:1543968000,VB:1548720000,WB:1552348800,XB:1555977600,YB:1559606400,ZB:1564444800,aB:1568073600,bB:1571702400,P:1575936000,Q:1580860800,R:1586304000,U:1589846400,V:1594684800,W:1598313600,X:1601942400,Y:1605571200,Z:1611014400,a:1614556800,b:1618272000,c:1621987200,d:1626739200,e:1630368000,S:1632268800,f:1634601600,H:1637020800,iB:null,sB:null,tB:null}},E:{A:{I:0,g:0.004293,J:0.004656,D:0.004465,E:0.004356,F:0.004891,A:0.004425,B:0.004318,C:0.008712,K:0.060984,L:0.339768,G:0.601128,uB:0,jB:0.008692,vB:0.013068,wB:0.00456,xB:0.004283,yB:0.030492,kB:0.013068,cB:0.039204,dB:0.074052,zB:0.548856,"0B":1.71626,"1B":0.749232,lB:0,"2B":0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uB","jB","I","g","vB","J","wB","D","xB","E","F","yB","A","kB","B","cB","C","dB","K","zB","L","0B","G","1B","lB","2B","",""],E:"Safari",F:{uB:1205798400,jB:1226534400,I:1244419200,g:1275868800,vB:1311120000,J:1343174400,wB:1382400000,D:1382400000,xB:1410998400,E:1413417600,F:1443657600,yB:1458518400,A:1474329600,kB:1490572800,B:1505779200,cB:1522281600,C:1537142400,dB:1553472000,K:1568851200,zB:1585008000,L:1600214400,"0B":1619395200,G:1632096000,"1B":1635292800,lB:1639353600,"2B":null}},F:{A:{"0":0.004367,"1":0.004534,"2":0.004356,"3":0.004227,"4":0.004418,"5":0.004293,"6":0.004227,"7":0.004725,"8":0.008712,"9":0.008942,F:0.0082,B:0.016581,C:0.004317,G:0.00685,M:0.00685,N:0.00685,O:0.005014,h:0.006015,i:0.004879,j:0.006597,k:0.006597,l:0.013434,m:0.006702,n:0.006015,o:0.005595,p:0.004393,q:0.008652,r:0.004879,s:0.004879,t:0.004356,u:0.005152,v:0.005014,w:0.009758,x:0.004879,y:0.004356,z:0.004283,AB:0.004707,BB:0.004827,CB:0.004707,DB:0.004707,EB:0.004326,FB:0.008922,GB:0.014349,HB:0.004425,IB:0.00472,JB:0.004425,KB:0.004425,LB:0.00472,MB:0.004532,NB:0.004566,T:0.02283,OB:0.00867,PB:0.004656,QB:0.004642,RB:0.004318,SB:0.00944,TB:0.004293,UB:0.004293,VB:0.004298,WB:0.096692,XB:0.004201,YB:0.004141,ZB:0.004043,aB:0.004318,bB:0.004356,P:0.02178,Q:0.753588,R:0.3267,hB:0,"3B":0.00685,"4B":0,"5B":0.008392,"6B":0.004706,cB:0.006229,mB:0.004879,"7B":0.008786,dB:0.00472},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","F","3B","4B","5B","6B","B","cB","mB","7B","C","dB","G","M","N","O","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","AB","BB","CB","DB","EB","FB","GB","HB","IB","JB","KB","LB","MB","NB","T","OB","PB","QB","RB","SB","TB","UB","VB","WB","XB","YB","ZB","aB","bB","P","Q","R","hB","","",""],E:"Opera",F:{"0":1465344000,"1":1470096000,"2":1474329600,"3":1477267200,"4":1481587200,"5":1486425600,"6":1490054400,"7":1494374400,"8":1498003200,"9":1502236800,F:1150761600,"3B":1223424000,"4B":1251763200,"5B":1267488000,"6B":1277942400,B:1292457600,cB:1302566400,mB:1309219200,"7B":1323129600,C:1323129600,dB:1352073600,G:1372723200,M:1377561600,N:1381104000,O:1386288000,h:1390867200,i:1393891200,j:1399334400,k:1401753600,l:1405987200,m:1409616000,n:1413331200,o:1417132800,p:1422316800,q:1425945600,r:1430179200,s:1433808000,t:1438646400,u:1442448000,v:1445904000,w:1449100800,x:1454371200,y:1457308800,z:1462320000,AB:1506470400,BB:1510099200,CB:1515024000,DB:1517961600,EB:1521676800,FB:1525910400,GB:1530144000,HB:1534982400,IB:1537833600,JB:1543363200,KB:1548201600,LB:1554768000,MB:1561593600,NB:1566259200,T:1570406400,OB:1573689600,PB:1578441600,QB:1583971200,RB:1587513600,SB:1592956800,TB:1595894400,UB:1600128000,VB:1603238400,WB:1613520000,XB:1612224000,YB:1616544000,ZB:1619568000,aB:1623715200,bB:1627948800,P:1631577600,Q:1633392000,R:1635984000,hB:1638403200},D:{F:"o",B:"o",C:"o","3B":"o","4B":"o","5B":"o","6B":"o",cB:"o",mB:"o","7B":"o",dB:"o"}},G:{A:{E:0,jB:0,"8B":0,nB:0.00291998,"9B":0.00583996,AC:0.0613196,BC:0.0204399,CC:0.0116799,DC:0.0189799,EC:0.103659,FC:0.0262798,GC:0.125559,HC:0.0715395,IC:0.0467197,JC:0.0467197,KC:0.636556,LC:0.0379597,MC:0.0189799,NC:0.0992793,OC:0.321198,PC:1.05411,QC:6.90575,RC:4.98295,lB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","jB","8B","nB","9B","AC","BC","E","CC","DC","EC","FC","GC","HC","IC","JC","KC","LC","MC","NC","OC","PC","QC","RC","lB","","",""],E:"Safari on iOS",F:{jB:1270252800,"8B":1283904000,nB:1299628800,"9B":1331078400,AC:1359331200,BC:1394409600,E:1410912000,CC:1413763200,DC:1442361600,EC:1458518400,FC:1473724800,GC:1490572800,HC:1505779200,IC:1522281600,JC:1537142400,KC:1553472000,LC:1568851200,MC:1572220800,NC:1580169600,OC:1585008000,PC:1600214400,QC:1619395200,RC:1632096000,lB:1639353600}},H:{A:{SC:1.08451},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","SC","","",""],E:"Opera Mini",F:{SC:1426464000}},I:{A:{eB:0,I:0.0104652,H:0,TC:0,UC:0,VC:0,WC:0.0139536,nB:0.0627912,XC:0,YC:0.296514},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","TC","UC","VC","eB","I","WC","nB","XC","YC","H","","",""],E:"Android Browser",F:{TC:1256515200,UC:1274313600,VC:1291593600,eB:1298332800,I:1318896000,WC:1341792000,nB:1374624000,XC:1386547200,YC:1401667200,H:1636934400}},J:{A:{D:0,A:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376000,A:1359504000}},K:{A:{A:0,B:0,C:0,T:0.0111391,cB:0,mB:0,dB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","cB","mB","C","dB","T","","",""],E:"Opera Mobile",F:{A:1287100800,B:1300752000,cB:1314835200,mB:1318291200,C:1330300800,dB:1349740800,T:1613433600},D:{T:"webkit"}},L:{A:{H:37.4535},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","H","","",""],E:"Chrome for Android",F:{H:1637020800}},M:{A:{S:0.28215},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","S","","",""],E:"Firefox for Android",F:{S:1635811200}},N:{A:{A:0.0115934,B:0.022664},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456000}},O:{A:{ZC:0.95931},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ZC","","",""],E:"UC Browser for Android",F:{ZC:1471392000},D:{ZC:"webkit"}},P:{A:{I:0.231383,aC:0.0103543,bC:0.010304,cC:0.0736219,dC:0.0103584,eC:0.0315523,kB:0.0105043,fC:0.0841394,gC:0.0315523,hC:0.136726,iC:0.157761,jC:2.01934},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","I","aC","bC","cC","dC","eC","kB","fC","gC","hC","iC","jC","","",""],E:"Samsung Internet",F:{I:1461024000,aC:1481846400,bC:1509408000,cC:1528329600,dC:1546128000,eC:1554163200,kB:1567900800,fC:1582588800,gC:1593475200,hC:1605657600,iC:1618531200,jC:1629072000}},Q:{A:{kC:0.163647},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kC","","",""],E:"QQ Browser",F:{kC:1589846400}},R:{A:{lC:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lC","","",""],E:"Baidu Browser",F:{lC:1491004800}},S:{A:{mC:0.079002},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mC","","",""],E:"KaiOS Browser",F:{mC:1527811200}}};

},{}],88:[function(require,module,exports){
module.exports={"0":"38","1":"39","2":"40","3":"41","4":"42","5":"43","6":"44","7":"45","8":"46","9":"47",A:"10",B:"11",C:"12",D:"7",E:"8",F:"9",G:"15",H:"96",I:"4",J:"6",K:"13",L:"14",M:"16",N:"17",O:"18",P:"79",Q:"80",R:"81",S:"94",T:"64",U:"83",V:"84",W:"85",X:"86",Y:"87",Z:"88",a:"89",b:"90",c:"91",d:"92",e:"93",f:"95",g:"5",h:"19",i:"20",j:"21",k:"22",l:"23",m:"24",n:"25",o:"26",p:"27",q:"28",r:"29",s:"30",t:"31",u:"32",v:"33",w:"34",x:"35",y:"36",z:"37",AB:"48",BB:"49",CB:"50",DB:"51",EB:"52",FB:"53",GB:"54",HB:"55",IB:"56",JB:"57",KB:"58",LB:"60",MB:"62",NB:"63",OB:"65",PB:"66",QB:"67",RB:"68",SB:"69",TB:"70",UB:"71",VB:"72",WB:"73",XB:"74",YB:"75",ZB:"76",aB:"77",bB:"78",cB:"11.1",dB:"12.1",eB:"3",fB:"59",gB:"61",hB:"82",iB:"97",jB:"3.2",kB:"10.1",lB:"15.2",mB:"11.5",nB:"4.2-4.3",oB:"5.5",pB:"2",qB:"3.5",rB:"3.6",sB:"98",tB:"99",uB:"3.1",vB:"5.1",wB:"6.1",xB:"7.1",yB:"9.1",zB:"13.1","0B":"14.1","1B":"15.1","2B":"TP","3B":"9.5-9.6","4B":"10.0-10.1","5B":"10.5","6B":"10.6","7B":"11.6","8B":"4.0-4.1","9B":"5.0-5.1",AC:"6.0-6.1",BC:"7.0-7.1",CC:"8.1-8.4",DC:"9.0-9.2",EC:"9.3",FC:"10.0-10.2",GC:"10.3",HC:"11.0-11.2",IC:"11.3-11.4",JC:"12.0-12.1",KC:"12.2-12.5",LC:"13.0-13.1",MC:"13.2",NC:"13.3",OC:"13.4-13.7",PC:"14.0-14.4",QC:"14.5-14.8",RC:"15.0-15.1",SC:"all",TC:"2.1",UC:"2.2",VC:"2.3",WC:"4.1",XC:"4.4",YC:"4.4.3-4.4.4",ZC:"12.12",aC:"5.0-5.4",bC:"6.2-6.4",cC:"7.2-7.4",dC:"8.2",eC:"9.2",fC:"11.1-11.2",gC:"12.0",hC:"13.0",iC:"14.0",jC:"15.0",kC:"10.4",lC:"7.12",mC:"2.5"};

},{}],89:[function(require,module,exports){
module.exports={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"};

},{}],90:[function(require,module,exports){
module.exports={"aac":require("./features/aac"),"abortcontroller":require("./features/abortcontroller"),"ac3-ec3":require("./features/ac3-ec3"),"accelerometer":require("./features/accelerometer"),"addeventlistener":require("./features/addeventlistener"),"alternate-stylesheet":require("./features/alternate-stylesheet"),"ambient-light":require("./features/ambient-light"),"apng":require("./features/apng"),"array-find-index":require("./features/array-find-index"),"array-find":require("./features/array-find"),"array-flat":require("./features/array-flat"),"array-includes":require("./features/array-includes"),"arrow-functions":require("./features/arrow-functions"),"asmjs":require("./features/asmjs"),"async-clipboard":require("./features/async-clipboard"),"async-functions":require("./features/async-functions"),"atob-btoa":require("./features/atob-btoa"),"audio-api":require("./features/audio-api"),"audio":require("./features/audio"),"audiotracks":require("./features/audiotracks"),"autofocus":require("./features/autofocus"),"auxclick":require("./features/auxclick"),"av1":require("./features/av1"),"avif":require("./features/avif"),"background-attachment":require("./features/background-attachment"),"background-clip-text":require("./features/background-clip-text"),"background-img-opts":require("./features/background-img-opts"),"background-position-x-y":require("./features/background-position-x-y"),"background-repeat-round-space":require("./features/background-repeat-round-space"),"background-sync":require("./features/background-sync"),"battery-status":require("./features/battery-status"),"beacon":require("./features/beacon"),"beforeafterprint":require("./features/beforeafterprint"),"bigint":require("./features/bigint"),"blobbuilder":require("./features/blobbuilder"),"bloburls":require("./features/bloburls"),"border-image":require("./features/border-image"),"border-radius":require("./features/border-radius"),"broadcastchannel":require("./features/broadcastchannel"),"brotli":require("./features/brotli"),"calc":require("./features/calc"),"canvas-blending":require("./features/canvas-blending"),"canvas-text":require("./features/canvas-text"),"canvas":require("./features/canvas"),"ch-unit":require("./features/ch-unit"),"chacha20-poly1305":require("./features/chacha20-poly1305"),"channel-messaging":require("./features/channel-messaging"),"childnode-remove":require("./features/childnode-remove"),"classlist":require("./features/classlist"),"client-hints-dpr-width-viewport":require("./features/client-hints-dpr-width-viewport"),"clipboard":require("./features/clipboard"),"colr":require("./features/colr"),"comparedocumentposition":require("./features/comparedocumentposition"),"console-basic":require("./features/console-basic"),"console-time":require("./features/console-time"),"const":require("./features/const"),"constraint-validation":require("./features/constraint-validation"),"contenteditable":require("./features/contenteditable"),"contentsecuritypolicy":require("./features/contentsecuritypolicy"),"contentsecuritypolicy2":require("./features/contentsecuritypolicy2"),"cookie-store-api":require("./features/cookie-store-api"),"cors":require("./features/cors"),"createimagebitmap":require("./features/createimagebitmap"),"credential-management":require("./features/credential-management"),"cryptography":require("./features/cryptography"),"css-all":require("./features/css-all"),"css-animation":require("./features/css-animation"),"css-any-link":require("./features/css-any-link"),"css-appearance":require("./features/css-appearance"),"css-apply-rule":require("./features/css-apply-rule"),"css-at-counter-style":require("./features/css-at-counter-style"),"css-autofill":require("./features/css-autofill"),"css-backdrop-filter":require("./features/css-backdrop-filter"),"css-background-offsets":require("./features/css-background-offsets"),"css-backgroundblendmode":require("./features/css-backgroundblendmode"),"css-boxdecorationbreak":require("./features/css-boxdecorationbreak"),"css-boxshadow":require("./features/css-boxshadow"),"css-canvas":require("./features/css-canvas"),"css-caret-color":require("./features/css-caret-color"),"css-cascade-layers":require("./features/css-cascade-layers"),"css-case-insensitive":require("./features/css-case-insensitive"),"css-clip-path":require("./features/css-clip-path"),"css-color-adjust":require("./features/css-color-adjust"),"css-color-function":require("./features/css-color-function"),"css-conic-gradients":require("./features/css-conic-gradients"),"css-container-queries":require("./features/css-container-queries"),"css-containment":require("./features/css-containment"),"css-content-visibility":require("./features/css-content-visibility"),"css-counters":require("./features/css-counters"),"css-crisp-edges":require("./features/css-crisp-edges"),"css-cross-fade":require("./features/css-cross-fade"),"css-default-pseudo":require("./features/css-default-pseudo"),"css-descendant-gtgt":require("./features/css-descendant-gtgt"),"css-deviceadaptation":require("./features/css-deviceadaptation"),"css-dir-pseudo":require("./features/css-dir-pseudo"),"css-display-contents":require("./features/css-display-contents"),"css-element-function":require("./features/css-element-function"),"css-env-function":require("./features/css-env-function"),"css-exclusions":require("./features/css-exclusions"),"css-featurequeries":require("./features/css-featurequeries"),"css-filter-function":require("./features/css-filter-function"),"css-filters":require("./features/css-filters"),"css-first-letter":require("./features/css-first-letter"),"css-first-line":require("./features/css-first-line"),"css-fixed":require("./features/css-fixed"),"css-focus-visible":require("./features/css-focus-visible"),"css-focus-within":require("./features/css-focus-within"),"css-font-rendering-controls":require("./features/css-font-rendering-controls"),"css-font-stretch":require("./features/css-font-stretch"),"css-gencontent":require("./features/css-gencontent"),"css-gradients":require("./features/css-gradients"),"css-grid":require("./features/css-grid"),"css-hanging-punctuation":require("./features/css-hanging-punctuation"),"css-has":require("./features/css-has"),"css-hyphenate":require("./features/css-hyphenate"),"css-hyphens":require("./features/css-hyphens"),"css-image-orientation":require("./features/css-image-orientation"),"css-image-set":require("./features/css-image-set"),"css-in-out-of-range":require("./features/css-in-out-of-range"),"css-indeterminate-pseudo":require("./features/css-indeterminate-pseudo"),"css-initial-letter":require("./features/css-initial-letter"),"css-initial-value":require("./features/css-initial-value"),"css-lch-lab":require("./features/css-lch-lab"),"css-letter-spacing":require("./features/css-letter-spacing"),"css-line-clamp":require("./features/css-line-clamp"),"css-logical-props":require("./features/css-logical-props"),"css-marker-pseudo":require("./features/css-marker-pseudo"),"css-masks":require("./features/css-masks"),"css-matches-pseudo":require("./features/css-matches-pseudo"),"css-math-functions":require("./features/css-math-functions"),"css-media-interaction":require("./features/css-media-interaction"),"css-media-resolution":require("./features/css-media-resolution"),"css-media-scripting":require("./features/css-media-scripting"),"css-mediaqueries":require("./features/css-mediaqueries"),"css-mixblendmode":require("./features/css-mixblendmode"),"css-motion-paths":require("./features/css-motion-paths"),"css-namespaces":require("./features/css-namespaces"),"css-nesting":require("./features/css-nesting"),"css-not-sel-list":require("./features/css-not-sel-list"),"css-nth-child-of":require("./features/css-nth-child-of"),"css-opacity":require("./features/css-opacity"),"css-optional-pseudo":require("./features/css-optional-pseudo"),"css-overflow-anchor":require("./features/css-overflow-anchor"),"css-overflow-overlay":require("./features/css-overflow-overlay"),"css-overflow":require("./features/css-overflow"),"css-overscroll-behavior":require("./features/css-overscroll-behavior"),"css-page-break":require("./features/css-page-break"),"css-paged-media":require("./features/css-paged-media"),"css-paint-api":require("./features/css-paint-api"),"css-placeholder-shown":require("./features/css-placeholder-shown"),"css-placeholder":require("./features/css-placeholder"),"css-read-only-write":require("./features/css-read-only-write"),"css-rebeccapurple":require("./features/css-rebeccapurple"),"css-reflections":require("./features/css-reflections"),"css-regions":require("./features/css-regions"),"css-repeating-gradients":require("./features/css-repeating-gradients"),"css-resize":require("./features/css-resize"),"css-revert-value":require("./features/css-revert-value"),"css-rrggbbaa":require("./features/css-rrggbbaa"),"css-scroll-behavior":require("./features/css-scroll-behavior"),"css-scroll-timeline":require("./features/css-scroll-timeline"),"css-scrollbar":require("./features/css-scrollbar"),"css-sel2":require("./features/css-sel2"),"css-sel3":require("./features/css-sel3"),"css-selection":require("./features/css-selection"),"css-shapes":require("./features/css-shapes"),"css-snappoints":require("./features/css-snappoints"),"css-sticky":require("./features/css-sticky"),"css-subgrid":require("./features/css-subgrid"),"css-supports-api":require("./features/css-supports-api"),"css-table":require("./features/css-table"),"css-text-align-last":require("./features/css-text-align-last"),"css-text-indent":require("./features/css-text-indent"),"css-text-justify":require("./features/css-text-justify"),"css-text-orientation":require("./features/css-text-orientation"),"css-text-spacing":require("./features/css-text-spacing"),"css-textshadow":require("./features/css-textshadow"),"css-touch-action-2":require("./features/css-touch-action-2"),"css-touch-action":require("./features/css-touch-action"),"css-transitions":require("./features/css-transitions"),"css-unicode-bidi":require("./features/css-unicode-bidi"),"css-unset-value":require("./features/css-unset-value"),"css-variables":require("./features/css-variables"),"css-widows-orphans":require("./features/css-widows-orphans"),"css-writing-mode":require("./features/css-writing-mode"),"css-zoom":require("./features/css-zoom"),"css3-attr":require("./features/css3-attr"),"css3-boxsizing":require("./features/css3-boxsizing"),"css3-colors":require("./features/css3-colors"),"css3-cursors-grab":require("./features/css3-cursors-grab"),"css3-cursors-newer":require("./features/css3-cursors-newer"),"css3-cursors":require("./features/css3-cursors"),"css3-tabsize":require("./features/css3-tabsize"),"currentcolor":require("./features/currentcolor"),"custom-elements":require("./features/custom-elements"),"custom-elementsv1":require("./features/custom-elementsv1"),"customevent":require("./features/customevent"),"datalist":require("./features/datalist"),"dataset":require("./features/dataset"),"datauri":require("./features/datauri"),"date-tolocaledatestring":require("./features/date-tolocaledatestring"),"decorators":require("./features/decorators"),"details":require("./features/details"),"deviceorientation":require("./features/deviceorientation"),"devicepixelratio":require("./features/devicepixelratio"),"dialog":require("./features/dialog"),"dispatchevent":require("./features/dispatchevent"),"dnssec":require("./features/dnssec"),"do-not-track":require("./features/do-not-track"),"document-currentscript":require("./features/document-currentscript"),"document-evaluate-xpath":require("./features/document-evaluate-xpath"),"document-execcommand":require("./features/document-execcommand"),"document-policy":require("./features/document-policy"),"document-scrollingelement":require("./features/document-scrollingelement"),"documenthead":require("./features/documenthead"),"dom-manip-convenience":require("./features/dom-manip-convenience"),"dom-range":require("./features/dom-range"),"domcontentloaded":require("./features/domcontentloaded"),"domfocusin-domfocusout-events":require("./features/domfocusin-domfocusout-events"),"dommatrix":require("./features/dommatrix"),"download":require("./features/download"),"dragndrop":require("./features/dragndrop"),"element-closest":require("./features/element-closest"),"element-from-point":require("./features/element-from-point"),"element-scroll-methods":require("./features/element-scroll-methods"),"eme":require("./features/eme"),"eot":require("./features/eot"),"es5":require("./features/es5"),"es6-class":require("./features/es6-class"),"es6-generators":require("./features/es6-generators"),"es6-module-dynamic-import":require("./features/es6-module-dynamic-import"),"es6-module":require("./features/es6-module"),"es6-number":require("./features/es6-number"),"es6-string-includes":require("./features/es6-string-includes"),"es6":require("./features/es6"),"eventsource":require("./features/eventsource"),"extended-system-fonts":require("./features/extended-system-fonts"),"feature-policy":require("./features/feature-policy"),"fetch":require("./features/fetch"),"fieldset-disabled":require("./features/fieldset-disabled"),"fileapi":require("./features/fileapi"),"filereader":require("./features/filereader"),"filereadersync":require("./features/filereadersync"),"filesystem":require("./features/filesystem"),"flac":require("./features/flac"),"flexbox-gap":require("./features/flexbox-gap"),"flexbox":require("./features/flexbox"),"flow-root":require("./features/flow-root"),"focusin-focusout-events":require("./features/focusin-focusout-events"),"focusoptions-preventscroll":require("./features/focusoptions-preventscroll"),"font-family-system-ui":require("./features/font-family-system-ui"),"font-feature":require("./features/font-feature"),"font-kerning":require("./features/font-kerning"),"font-loading":require("./features/font-loading"),"font-metrics-overrides":require("./features/font-metrics-overrides"),"font-size-adjust":require("./features/font-size-adjust"),"font-smooth":require("./features/font-smooth"),"font-unicode-range":require("./features/font-unicode-range"),"font-variant-alternates":require("./features/font-variant-alternates"),"font-variant-east-asian":require("./features/font-variant-east-asian"),"font-variant-numeric":require("./features/font-variant-numeric"),"fontface":require("./features/fontface"),"form-attribute":require("./features/form-attribute"),"form-submit-attributes":require("./features/form-submit-attributes"),"form-validation":require("./features/form-validation"),"forms":require("./features/forms"),"fullscreen":require("./features/fullscreen"),"gamepad":require("./features/gamepad"),"geolocation":require("./features/geolocation"),"getboundingclientrect":require("./features/getboundingclientrect"),"getcomputedstyle":require("./features/getcomputedstyle"),"getelementsbyclassname":require("./features/getelementsbyclassname"),"getrandomvalues":require("./features/getrandomvalues"),"gyroscope":require("./features/gyroscope"),"hardwareconcurrency":require("./features/hardwareconcurrency"),"hashchange":require("./features/hashchange"),"heif":require("./features/heif"),"hevc":require("./features/hevc"),"hidden":require("./features/hidden"),"high-resolution-time":require("./features/high-resolution-time"),"history":require("./features/history"),"html-media-capture":require("./features/html-media-capture"),"html5semantic":require("./features/html5semantic"),"http-live-streaming":require("./features/http-live-streaming"),"http2":require("./features/http2"),"http3":require("./features/http3"),"iframe-sandbox":require("./features/iframe-sandbox"),"iframe-seamless":require("./features/iframe-seamless"),"iframe-srcdoc":require("./features/iframe-srcdoc"),"imagecapture":require("./features/imagecapture"),"ime":require("./features/ime"),"img-naturalwidth-naturalheight":require("./features/img-naturalwidth-naturalheight"),"import-maps":require("./features/import-maps"),"imports":require("./features/imports"),"indeterminate-checkbox":require("./features/indeterminate-checkbox"),"indexeddb":require("./features/indexeddb"),"indexeddb2":require("./features/indexeddb2"),"inline-block":require("./features/inline-block"),"innertext":require("./features/innertext"),"input-autocomplete-onoff":require("./features/input-autocomplete-onoff"),"input-color":require("./features/input-color"),"input-datetime":require("./features/input-datetime"),"input-email-tel-url":require("./features/input-email-tel-url"),"input-event":require("./features/input-event"),"input-file-accept":require("./features/input-file-accept"),"input-file-directory":require("./features/input-file-directory"),"input-file-multiple":require("./features/input-file-multiple"),"input-inputmode":require("./features/input-inputmode"),"input-minlength":require("./features/input-minlength"),"input-number":require("./features/input-number"),"input-pattern":require("./features/input-pattern"),"input-placeholder":require("./features/input-placeholder"),"input-range":require("./features/input-range"),"input-search":require("./features/input-search"),"input-selection":require("./features/input-selection"),"insert-adjacent":require("./features/insert-adjacent"),"insertadjacenthtml":require("./features/insertadjacenthtml"),"internationalization":require("./features/internationalization"),"intersectionobserver-v2":require("./features/intersectionobserver-v2"),"intersectionobserver":require("./features/intersectionobserver"),"intl-pluralrules":require("./features/intl-pluralrules"),"intrinsic-width":require("./features/intrinsic-width"),"jpeg2000":require("./features/jpeg2000"),"jpegxl":require("./features/jpegxl"),"jpegxr":require("./features/jpegxr"),"js-regexp-lookbehind":require("./features/js-regexp-lookbehind"),"json":require("./features/json"),"justify-content-space-evenly":require("./features/justify-content-space-evenly"),"kerning-pairs-ligatures":require("./features/kerning-pairs-ligatures"),"keyboardevent-charcode":require("./features/keyboardevent-charcode"),"keyboardevent-code":require("./features/keyboardevent-code"),"keyboardevent-getmodifierstate":require("./features/keyboardevent-getmodifierstate"),"keyboardevent-key":require("./features/keyboardevent-key"),"keyboardevent-location":require("./features/keyboardevent-location"),"keyboardevent-which":require("./features/keyboardevent-which"),"lazyload":require("./features/lazyload"),"let":require("./features/let"),"link-icon-png":require("./features/link-icon-png"),"link-icon-svg":require("./features/link-icon-svg"),"link-rel-dns-prefetch":require("./features/link-rel-dns-prefetch"),"link-rel-modulepreload":require("./features/link-rel-modulepreload"),"link-rel-preconnect":require("./features/link-rel-preconnect"),"link-rel-prefetch":require("./features/link-rel-prefetch"),"link-rel-preload":require("./features/link-rel-preload"),"link-rel-prerender":require("./features/link-rel-prerender"),"loading-lazy-attr":require("./features/loading-lazy-attr"),"localecompare":require("./features/localecompare"),"magnetometer":require("./features/magnetometer"),"matchesselector":require("./features/matchesselector"),"matchmedia":require("./features/matchmedia"),"mathml":require("./features/mathml"),"maxlength":require("./features/maxlength"),"media-attribute":require("./features/media-attribute"),"media-fragments":require("./features/media-fragments"),"media-session-api":require("./features/media-session-api"),"mediacapture-fromelement":require("./features/mediacapture-fromelement"),"mediarecorder":require("./features/mediarecorder"),"mediasource":require("./features/mediasource"),"menu":require("./features/menu"),"meta-theme-color":require("./features/meta-theme-color"),"meter":require("./features/meter"),"midi":require("./features/midi"),"minmaxwh":require("./features/minmaxwh"),"mp3":require("./features/mp3"),"mpeg-dash":require("./features/mpeg-dash"),"mpeg4":require("./features/mpeg4"),"multibackgrounds":require("./features/multibackgrounds"),"multicolumn":require("./features/multicolumn"),"mutation-events":require("./features/mutation-events"),"mutationobserver":require("./features/mutationobserver"),"namevalue-storage":require("./features/namevalue-storage"),"native-filesystem-api":require("./features/native-filesystem-api"),"nav-timing":require("./features/nav-timing"),"navigator-language":require("./features/navigator-language"),"netinfo":require("./features/netinfo"),"notifications":require("./features/notifications"),"object-entries":require("./features/object-entries"),"object-fit":require("./features/object-fit"),"object-observe":require("./features/object-observe"),"object-values":require("./features/object-values"),"objectrtc":require("./features/objectrtc"),"offline-apps":require("./features/offline-apps"),"offscreencanvas":require("./features/offscreencanvas"),"ogg-vorbis":require("./features/ogg-vorbis"),"ogv":require("./features/ogv"),"ol-reversed":require("./features/ol-reversed"),"once-event-listener":require("./features/once-event-listener"),"online-status":require("./features/online-status"),"opus":require("./features/opus"),"orientation-sensor":require("./features/orientation-sensor"),"outline":require("./features/outline"),"pad-start-end":require("./features/pad-start-end"),"page-transition-events":require("./features/page-transition-events"),"pagevisibility":require("./features/pagevisibility"),"passive-event-listener":require("./features/passive-event-listener"),"passwordrules":require("./features/passwordrules"),"path2d":require("./features/path2d"),"payment-request":require("./features/payment-request"),"pdf-viewer":require("./features/pdf-viewer"),"permissions-api":require("./features/permissions-api"),"permissions-policy":require("./features/permissions-policy"),"picture-in-picture":require("./features/picture-in-picture"),"picture":require("./features/picture"),"ping":require("./features/ping"),"png-alpha":require("./features/png-alpha"),"pointer-events":require("./features/pointer-events"),"pointer":require("./features/pointer"),"pointerlock":require("./features/pointerlock"),"portals":require("./features/portals"),"prefers-color-scheme":require("./features/prefers-color-scheme"),"prefers-reduced-motion":require("./features/prefers-reduced-motion"),"private-class-fields":require("./features/private-class-fields"),"private-methods-and-accessors":require("./features/private-methods-and-accessors"),"progress":require("./features/progress"),"promise-finally":require("./features/promise-finally"),"promises":require("./features/promises"),"proximity":require("./features/proximity"),"proxy":require("./features/proxy"),"public-class-fields":require("./features/public-class-fields"),"publickeypinning":require("./features/publickeypinning"),"push-api":require("./features/push-api"),"queryselector":require("./features/queryselector"),"readonly-attr":require("./features/readonly-attr"),"referrer-policy":require("./features/referrer-policy"),"registerprotocolhandler":require("./features/registerprotocolhandler"),"rel-noopener":require("./features/rel-noopener"),"rel-noreferrer":require("./features/rel-noreferrer"),"rellist":require("./features/rellist"),"rem":require("./features/rem"),"requestanimationframe":require("./features/requestanimationframe"),"requestidlecallback":require("./features/requestidlecallback"),"resizeobserver":require("./features/resizeobserver"),"resource-timing":require("./features/resource-timing"),"rest-parameters":require("./features/rest-parameters"),"rtcpeerconnection":require("./features/rtcpeerconnection"),"ruby":require("./features/ruby"),"run-in":require("./features/run-in"),"same-site-cookie-attribute":require("./features/same-site-cookie-attribute"),"screen-orientation":require("./features/screen-orientation"),"script-async":require("./features/script-async"),"script-defer":require("./features/script-defer"),"scrollintoview":require("./features/scrollintoview"),"scrollintoviewifneeded":require("./features/scrollintoviewifneeded"),"sdch":require("./features/sdch"),"selection-api":require("./features/selection-api"),"server-timing":require("./features/server-timing"),"serviceworkers":require("./features/serviceworkers"),"setimmediate":require("./features/setimmediate"),"sha-2":require("./features/sha-2"),"shadowdom":require("./features/shadowdom"),"shadowdomv1":require("./features/shadowdomv1"),"sharedarraybuffer":require("./features/sharedarraybuffer"),"sharedworkers":require("./features/sharedworkers"),"sni":require("./features/sni"),"spdy":require("./features/spdy"),"speech-recognition":require("./features/speech-recognition"),"speech-synthesis":require("./features/speech-synthesis"),"spellcheck-attribute":require("./features/spellcheck-attribute"),"sql-storage":require("./features/sql-storage"),"srcset":require("./features/srcset"),"stream":require("./features/stream"),"streams":require("./features/streams"),"stricttransportsecurity":require("./features/stricttransportsecurity"),"style-scoped":require("./features/style-scoped"),"subresource-integrity":require("./features/subresource-integrity"),"svg-css":require("./features/svg-css"),"svg-filters":require("./features/svg-filters"),"svg-fonts":require("./features/svg-fonts"),"svg-fragment":require("./features/svg-fragment"),"svg-html":require("./features/svg-html"),"svg-html5":require("./features/svg-html5"),"svg-img":require("./features/svg-img"),"svg-smil":require("./features/svg-smil"),"svg":require("./features/svg"),"sxg":require("./features/sxg"),"tabindex-attr":require("./features/tabindex-attr"),"template-literals":require("./features/template-literals"),"template":require("./features/template"),"temporal":require("./features/temporal"),"testfeat":require("./features/testfeat"),"text-decoration":require("./features/text-decoration"),"text-emphasis":require("./features/text-emphasis"),"text-overflow":require("./features/text-overflow"),"text-size-adjust":require("./features/text-size-adjust"),"text-stroke":require("./features/text-stroke"),"text-underline-offset":require("./features/text-underline-offset"),"textcontent":require("./features/textcontent"),"textencoder":require("./features/textencoder"),"tls1-1":require("./features/tls1-1"),"tls1-2":require("./features/tls1-2"),"tls1-3":require("./features/tls1-3"),"token-binding":require("./features/token-binding"),"touch":require("./features/touch"),"transforms2d":require("./features/transforms2d"),"transforms3d":require("./features/transforms3d"),"trusted-types":require("./features/trusted-types"),"ttf":require("./features/ttf"),"typedarrays":require("./features/typedarrays"),"u2f":require("./features/u2f"),"unhandledrejection":require("./features/unhandledrejection"),"upgradeinsecurerequests":require("./features/upgradeinsecurerequests"),"url-scroll-to-text-fragment":require("./features/url-scroll-to-text-fragment"),"url":require("./features/url"),"urlsearchparams":require("./features/urlsearchparams"),"use-strict":require("./features/use-strict"),"user-select-none":require("./features/user-select-none"),"user-timing":require("./features/user-timing"),"variable-fonts":require("./features/variable-fonts"),"vector-effect":require("./features/vector-effect"),"vibration":require("./features/vibration"),"video":require("./features/video"),"videotracks":require("./features/videotracks"),"viewport-unit-variants":require("./features/viewport-unit-variants"),"viewport-units":require("./features/viewport-units"),"wai-aria":require("./features/wai-aria"),"wake-lock":require("./features/wake-lock"),"wasm":require("./features/wasm"),"wav":require("./features/wav"),"wbr-element":require("./features/wbr-element"),"web-animation":require("./features/web-animation"),"web-app-manifest":require("./features/web-app-manifest"),"web-bluetooth":require("./features/web-bluetooth"),"web-serial":require("./features/web-serial"),"web-share":require("./features/web-share"),"webauthn":require("./features/webauthn"),"webgl":require("./features/webgl"),"webgl2":require("./features/webgl2"),"webgpu":require("./features/webgpu"),"webhid":require("./features/webhid"),"webkit-user-drag":require("./features/webkit-user-drag"),"webm":require("./features/webm"),"webnfc":require("./features/webnfc"),"webp":require("./features/webp"),"websockets":require("./features/websockets"),"webusb":require("./features/webusb"),"webvr":require("./features/webvr"),"webvtt":require("./features/webvtt"),"webworkers":require("./features/webworkers"),"webxr":require("./features/webxr"),"will-change":require("./features/will-change"),"woff":require("./features/woff"),"woff2":require("./features/woff2"),"word-break":require("./features/word-break"),"wordwrap":require("./features/wordwrap"),"x-doc-messaging":require("./features/x-doc-messaging"),"x-frame-options":require("./features/x-frame-options"),"xhr2":require("./features/xhr2"),"xhtml":require("./features/xhtml"),"xhtmlsmil":require("./features/xhtmlsmil"),"xml-serializer":require("./features/xml-serializer")};

},{"./features/aac":91,"./features/abortcontroller":92,"./features/ac3-ec3":93,"./features/accelerometer":94,"./features/addeventlistener":95,"./features/alternate-stylesheet":96,"./features/ambient-light":97,"./features/apng":98,"./features/array-find":100,"./features/array-find-index":99,"./features/array-flat":101,"./features/array-includes":102,"./features/arrow-functions":103,"./features/asmjs":104,"./features/async-clipboard":105,"./features/async-functions":106,"./features/atob-btoa":107,"./features/audio":109,"./features/audio-api":108,"./features/audiotracks":110,"./features/autofocus":111,"./features/auxclick":112,"./features/av1":113,"./features/avif":114,"./features/background-attachment":115,"./features/background-clip-text":116,"./features/background-img-opts":117,"./features/background-position-x-y":118,"./features/background-repeat-round-space":119,"./features/background-sync":120,"./features/battery-status":121,"./features/beacon":122,"./features/beforeafterprint":123,"./features/bigint":124,"./features/blobbuilder":125,"./features/bloburls":126,"./features/border-image":127,"./features/border-radius":128,"./features/broadcastchannel":129,"./features/brotli":130,"./features/calc":131,"./features/canvas":134,"./features/canvas-blending":132,"./features/canvas-text":133,"./features/ch-unit":135,"./features/chacha20-poly1305":136,"./features/channel-messaging":137,"./features/childnode-remove":138,"./features/classlist":139,"./features/client-hints-dpr-width-viewport":140,"./features/clipboard":141,"./features/colr":142,"./features/comparedocumentposition":143,"./features/console-basic":144,"./features/console-time":145,"./features/const":146,"./features/constraint-validation":147,"./features/contenteditable":148,"./features/contentsecuritypolicy":149,"./features/contentsecuritypolicy2":150,"./features/cookie-store-api":151,"./features/cors":152,"./features/createimagebitmap":153,"./features/credential-management":154,"./features/cryptography":155,"./features/css-all":156,"./features/css-animation":157,"./features/css-any-link":158,"./features/css-appearance":159,"./features/css-apply-rule":160,"./features/css-at-counter-style":161,"./features/css-autofill":162,"./features/css-backdrop-filter":163,"./features/css-background-offsets":164,"./features/css-backgroundblendmode":165,"./features/css-boxdecorationbreak":166,"./features/css-boxshadow":167,"./features/css-canvas":168,"./features/css-caret-color":169,"./features/css-cascade-layers":170,"./features/css-case-insensitive":171,"./features/css-clip-path":172,"./features/css-color-adjust":173,"./features/css-color-function":174,"./features/css-conic-gradients":175,"./features/css-container-queries":176,"./features/css-containment":177,"./features/css-content-visibility":178,"./features/css-counters":179,"./features/css-crisp-edges":180,"./features/css-cross-fade":181,"./features/css-default-pseudo":182,"./features/css-descendant-gtgt":183,"./features/css-deviceadaptation":184,"./features/css-dir-pseudo":185,"./features/css-display-contents":186,"./features/css-element-function":187,"./features/css-env-function":188,"./features/css-exclusions":189,"./features/css-featurequeries":190,"./features/css-filter-function":191,"./features/css-filters":192,"./features/css-first-letter":193,"./features/css-first-line":194,"./features/css-fixed":195,"./features/css-focus-visible":196,"./features/css-focus-within":197,"./features/css-font-rendering-controls":198,"./features/css-font-stretch":199,"./features/css-gencontent":200,"./features/css-gradients":201,"./features/css-grid":202,"./features/css-hanging-punctuation":203,"./features/css-has":204,"./features/css-hyphenate":205,"./features/css-hyphens":206,"./features/css-image-orientation":207,"./features/css-image-set":208,"./features/css-in-out-of-range":209,"./features/css-indeterminate-pseudo":210,"./features/css-initial-letter":211,"./features/css-initial-value":212,"./features/css-lch-lab":213,"./features/css-letter-spacing":214,"./features/css-line-clamp":215,"./features/css-logical-props":216,"./features/css-marker-pseudo":217,"./features/css-masks":218,"./features/css-matches-pseudo":219,"./features/css-math-functions":220,"./features/css-media-interaction":221,"./features/css-media-resolution":222,"./features/css-media-scripting":223,"./features/css-mediaqueries":224,"./features/css-mixblendmode":225,"./features/css-motion-paths":226,"./features/css-namespaces":227,"./features/css-nesting":228,"./features/css-not-sel-list":229,"./features/css-nth-child-of":230,"./features/css-opacity":231,"./features/css-optional-pseudo":232,"./features/css-overflow":235,"./features/css-overflow-anchor":233,"./features/css-overflow-overlay":234,"./features/css-overscroll-behavior":236,"./features/css-page-break":237,"./features/css-paged-media":238,"./features/css-paint-api":239,"./features/css-placeholder":241,"./features/css-placeholder-shown":240,"./features/css-read-only-write":242,"./features/css-rebeccapurple":243,"./features/css-reflections":244,"./features/css-regions":245,"./features/css-repeating-gradients":246,"./features/css-resize":247,"./features/css-revert-value":248,"./features/css-rrggbbaa":249,"./features/css-scroll-behavior":250,"./features/css-scroll-timeline":251,"./features/css-scrollbar":252,"./features/css-sel2":253,"./features/css-sel3":254,"./features/css-selection":255,"./features/css-shapes":256,"./features/css-snappoints":257,"./features/css-sticky":258,"./features/css-subgrid":259,"./features/css-supports-api":260,"./features/css-table":261,"./features/css-text-align-last":262,"./features/css-text-indent":263,"./features/css-text-justify":264,"./features/css-text-orientation":265,"./features/css-text-spacing":266,"./features/css-textshadow":267,"./features/css-touch-action":269,"./features/css-touch-action-2":268,"./features/css-transitions":270,"./features/css-unicode-bidi":271,"./features/css-unset-value":272,"./features/css-variables":273,"./features/css-widows-orphans":274,"./features/css-writing-mode":275,"./features/css-zoom":276,"./features/css3-attr":277,"./features/css3-boxsizing":278,"./features/css3-colors":279,"./features/css3-cursors":282,"./features/css3-cursors-grab":280,"./features/css3-cursors-newer":281,"./features/css3-tabsize":283,"./features/currentcolor":284,"./features/custom-elements":285,"./features/custom-elementsv1":286,"./features/customevent":287,"./features/datalist":288,"./features/dataset":289,"./features/datauri":290,"./features/date-tolocaledatestring":291,"./features/decorators":292,"./features/details":293,"./features/deviceorientation":294,"./features/devicepixelratio":295,"./features/dialog":296,"./features/dispatchevent":297,"./features/dnssec":298,"./features/do-not-track":299,"./features/document-currentscript":300,"./features/document-evaluate-xpath":301,"./features/document-execcommand":302,"./features/document-policy":303,"./features/document-scrollingelement":304,"./features/documenthead":305,"./features/dom-manip-convenience":306,"./features/dom-range":307,"./features/domcontentloaded":308,"./features/domfocusin-domfocusout-events":309,"./features/dommatrix":310,"./features/download":311,"./features/dragndrop":312,"./features/element-closest":313,"./features/element-from-point":314,"./features/element-scroll-methods":315,"./features/eme":316,"./features/eot":317,"./features/es5":318,"./features/es6":325,"./features/es6-class":319,"./features/es6-generators":320,"./features/es6-module":322,"./features/es6-module-dynamic-import":321,"./features/es6-number":323,"./features/es6-string-includes":324,"./features/eventsource":326,"./features/extended-system-fonts":327,"./features/feature-policy":328,"./features/fetch":329,"./features/fieldset-disabled":330,"./features/fileapi":331,"./features/filereader":332,"./features/filereadersync":333,"./features/filesystem":334,"./features/flac":335,"./features/flexbox":337,"./features/flexbox-gap":336,"./features/flow-root":338,"./features/focusin-focusout-events":339,"./features/focusoptions-preventscroll":340,"./features/font-family-system-ui":341,"./features/font-feature":342,"./features/font-kerning":343,"./features/font-loading":344,"./features/font-metrics-overrides":345,"./features/font-size-adjust":346,"./features/font-smooth":347,"./features/font-unicode-range":348,"./features/font-variant-alternates":349,"./features/font-variant-east-asian":350,"./features/font-variant-numeric":351,"./features/fontface":352,"./features/form-attribute":353,"./features/form-submit-attributes":354,"./features/form-validation":355,"./features/forms":356,"./features/fullscreen":357,"./features/gamepad":358,"./features/geolocation":359,"./features/getboundingclientrect":360,"./features/getcomputedstyle":361,"./features/getelementsbyclassname":362,"./features/getrandomvalues":363,"./features/gyroscope":364,"./features/hardwareconcurrency":365,"./features/hashchange":366,"./features/heif":367,"./features/hevc":368,"./features/hidden":369,"./features/high-resolution-time":370,"./features/history":371,"./features/html-media-capture":372,"./features/html5semantic":373,"./features/http-live-streaming":374,"./features/http2":375,"./features/http3":376,"./features/iframe-sandbox":377,"./features/iframe-seamless":378,"./features/iframe-srcdoc":379,"./features/imagecapture":380,"./features/ime":381,"./features/img-naturalwidth-naturalheight":382,"./features/import-maps":383,"./features/imports":384,"./features/indeterminate-checkbox":385,"./features/indexeddb":386,"./features/indexeddb2":387,"./features/inline-block":388,"./features/innertext":389,"./features/input-autocomplete-onoff":390,"./features/input-color":391,"./features/input-datetime":392,"./features/input-email-tel-url":393,"./features/input-event":394,"./features/input-file-accept":395,"./features/input-file-directory":396,"./features/input-file-multiple":397,"./features/input-inputmode":398,"./features/input-minlength":399,"./features/input-number":400,"./features/input-pattern":401,"./features/input-placeholder":402,"./features/input-range":403,"./features/input-search":404,"./features/input-selection":405,"./features/insert-adjacent":406,"./features/insertadjacenthtml":407,"./features/internationalization":408,"./features/intersectionobserver":410,"./features/intersectionobserver-v2":409,"./features/intl-pluralrules":411,"./features/intrinsic-width":412,"./features/jpeg2000":413,"./features/jpegxl":414,"./features/jpegxr":415,"./features/js-regexp-lookbehind":416,"./features/json":417,"./features/justify-content-space-evenly":418,"./features/kerning-pairs-ligatures":419,"./features/keyboardevent-charcode":420,"./features/keyboardevent-code":421,"./features/keyboardevent-getmodifierstate":422,"./features/keyboardevent-key":423,"./features/keyboardevent-location":424,"./features/keyboardevent-which":425,"./features/lazyload":426,"./features/let":427,"./features/link-icon-png":428,"./features/link-icon-svg":429,"./features/link-rel-dns-prefetch":430,"./features/link-rel-modulepreload":431,"./features/link-rel-preconnect":432,"./features/link-rel-prefetch":433,"./features/link-rel-preload":434,"./features/link-rel-prerender":435,"./features/loading-lazy-attr":436,"./features/localecompare":437,"./features/magnetometer":438,"./features/matchesselector":439,"./features/matchmedia":440,"./features/mathml":441,"./features/maxlength":442,"./features/media-attribute":443,"./features/media-fragments":444,"./features/media-session-api":445,"./features/mediacapture-fromelement":446,"./features/mediarecorder":447,"./features/mediasource":448,"./features/menu":449,"./features/meta-theme-color":450,"./features/meter":451,"./features/midi":452,"./features/minmaxwh":453,"./features/mp3":454,"./features/mpeg-dash":455,"./features/mpeg4":456,"./features/multibackgrounds":457,"./features/multicolumn":458,"./features/mutation-events":459,"./features/mutationobserver":460,"./features/namevalue-storage":461,"./features/native-filesystem-api":462,"./features/nav-timing":463,"./features/navigator-language":464,"./features/netinfo":465,"./features/notifications":466,"./features/object-entries":467,"./features/object-fit":468,"./features/object-observe":469,"./features/object-values":470,"./features/objectrtc":471,"./features/offline-apps":472,"./features/offscreencanvas":473,"./features/ogg-vorbis":474,"./features/ogv":475,"./features/ol-reversed":476,"./features/once-event-listener":477,"./features/online-status":478,"./features/opus":479,"./features/orientation-sensor":480,"./features/outline":481,"./features/pad-start-end":482,"./features/page-transition-events":483,"./features/pagevisibility":484,"./features/passive-event-listener":485,"./features/passwordrules":486,"./features/path2d":487,"./features/payment-request":488,"./features/pdf-viewer":489,"./features/permissions-api":490,"./features/permissions-policy":491,"./features/picture":493,"./features/picture-in-picture":492,"./features/ping":494,"./features/png-alpha":495,"./features/pointer":497,"./features/pointer-events":496,"./features/pointerlock":498,"./features/portals":499,"./features/prefers-color-scheme":500,"./features/prefers-reduced-motion":501,"./features/private-class-fields":502,"./features/private-methods-and-accessors":503,"./features/progress":504,"./features/promise-finally":505,"./features/promises":506,"./features/proximity":507,"./features/proxy":508,"./features/public-class-fields":509,"./features/publickeypinning":510,"./features/push-api":511,"./features/queryselector":512,"./features/readonly-attr":513,"./features/referrer-policy":514,"./features/registerprotocolhandler":515,"./features/rel-noopener":516,"./features/rel-noreferrer":517,"./features/rellist":518,"./features/rem":519,"./features/requestanimationframe":520,"./features/requestidlecallback":521,"./features/resizeobserver":522,"./features/resource-timing":523,"./features/rest-parameters":524,"./features/rtcpeerconnection":525,"./features/ruby":526,"./features/run-in":527,"./features/same-site-cookie-attribute":528,"./features/screen-orientation":529,"./features/script-async":530,"./features/script-defer":531,"./features/scrollintoview":532,"./features/scrollintoviewifneeded":533,"./features/sdch":534,"./features/selection-api":535,"./features/server-timing":536,"./features/serviceworkers":537,"./features/setimmediate":538,"./features/sha-2":539,"./features/shadowdom":540,"./features/shadowdomv1":541,"./features/sharedarraybuffer":542,"./features/sharedworkers":543,"./features/sni":544,"./features/spdy":545,"./features/speech-recognition":546,"./features/speech-synthesis":547,"./features/spellcheck-attribute":548,"./features/sql-storage":549,"./features/srcset":550,"./features/stream":551,"./features/streams":552,"./features/stricttransportsecurity":553,"./features/style-scoped":554,"./features/subresource-integrity":555,"./features/svg":564,"./features/svg-css":556,"./features/svg-filters":557,"./features/svg-fonts":558,"./features/svg-fragment":559,"./features/svg-html":560,"./features/svg-html5":561,"./features/svg-img":562,"./features/svg-smil":563,"./features/sxg":565,"./features/tabindex-attr":566,"./features/template":568,"./features/template-literals":567,"./features/temporal":569,"./features/testfeat":570,"./features/text-decoration":571,"./features/text-emphasis":572,"./features/text-overflow":573,"./features/text-size-adjust":574,"./features/text-stroke":575,"./features/text-underline-offset":576,"./features/textcontent":577,"./features/textencoder":578,"./features/tls1-1":579,"./features/tls1-2":580,"./features/tls1-3":581,"./features/token-binding":582,"./features/touch":583,"./features/transforms2d":584,"./features/transforms3d":585,"./features/trusted-types":586,"./features/ttf":587,"./features/typedarrays":588,"./features/u2f":589,"./features/unhandledrejection":590,"./features/upgradeinsecurerequests":591,"./features/url":593,"./features/url-scroll-to-text-fragment":592,"./features/urlsearchparams":594,"./features/use-strict":595,"./features/user-select-none":596,"./features/user-timing":597,"./features/variable-fonts":598,"./features/vector-effect":599,"./features/vibration":600,"./features/video":601,"./features/videotracks":602,"./features/viewport-unit-variants":603,"./features/viewport-units":604,"./features/wai-aria":605,"./features/wake-lock":606,"./features/wasm":607,"./features/wav":608,"./features/wbr-element":609,"./features/web-animation":610,"./features/web-app-manifest":611,"./features/web-bluetooth":612,"./features/web-serial":613,"./features/web-share":614,"./features/webauthn":615,"./features/webgl":616,"./features/webgl2":617,"./features/webgpu":618,"./features/webhid":619,"./features/webkit-user-drag":620,"./features/webm":621,"./features/webnfc":622,"./features/webp":623,"./features/websockets":624,"./features/webusb":625,"./features/webvr":626,"./features/webvtt":627,"./features/webworkers":628,"./features/webxr":629,"./features/will-change":630,"./features/woff":631,"./features/woff2":632,"./features/word-break":633,"./features/wordwrap":634,"./features/x-doc-messaging":635,"./features/x-frame-options":636,"./features/xhr2":637,"./features/xhtml":638,"./features/xhtmlsmil":639,"./features/xml-serializer":640}],91:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j qB rB","132":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F","16":"A B"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"132":"S"},N:{"1":"A","2":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"132":"mC"}},B:6,C:"AAC audio file format"};

},{}],92:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB qB rB"},D:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB","130":"C cB"},F:{"1":"FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"AbortController & AbortSignal"};

},{}],93:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC","132":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","132":"A"},K:{"2":"A B C T cB mB","132":"dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs"};

},{}],94:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T OB PB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Accelerometer"};

},{}],95:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","130":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","257":"pB eB I g J qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"EventTarget.addEventListener()"};

},{}],96:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"J D oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"F B C 3B 4B 5B 6B cB mB 7B dB","16":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"2":"T","16":"A B C cB mB dB"},L:{"16":"H"},M:{"16":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"16":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"16":"lC"},S:{"1":"mC"}},B:1,C:"Alternate stylesheet"};

},{}],97:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K","132":"L G M N O","322":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j qB rB","132":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","194":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","322":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB","322":"WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"132":"mC"}},B:4,C:"Ambient Light Sensor"};

},{}],98:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"1":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB xB"},F:{"1":"8 9 B C AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"0 1 2 3 4 5 6 7 F G M N O h i j k l m n o p q r s t u v w x y z"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:7,C:"Animated PNG (APNG)"};

},{}],99:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","16":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Array.prototype.findIndex"};

},{}],100:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","16":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","16":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Array.prototype.find"};

},{}],101:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB qB rB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB"},E:{"1":"C K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB cB"},F:{"1":"IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"flat & flatMap array methods"};

},{}],102:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Array.prototype.includes"};

},{}],103:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Arrow functions"};

},{}],104:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O","132":"P Q R U V W X Y Z a b c d e S f H","322":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m n o p","132":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","132":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","132":"T"},L:{"132":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I","132":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:6,C:"asm.js"};

},{}],105:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB qB rB","132":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","66":"KB fB LB gB"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC","260":"PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","260":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","260":"T"},L:{"1":"H"},M:{"132":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC","260":"eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Asynchronous Clipboard API"};

},{}],106:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K","194":"L"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB"},D:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB","514":"kB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC","514":"GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Async functions"};

},{}],107:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B 4B","16":"5B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","16":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Base64 encoding and decoding"};

},{}],108:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K","33":"L G M N O h i j k l m n o p q r s t u v"},E:{"1":"G 0B 1B lB 2B","2":"I g uB jB vB","33":"J D E F A B C K L wB xB yB kB cB dB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j"},G:{"1":"QC RC lB","2":"jB 8B nB 9B","33":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Web Audio API"};

},{}],109:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","132":"I g J D E F A B C K L G M N O h qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F","4":"3B 4B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","2":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Audio element"};

},{}],110:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O","322":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","194":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","322":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB"},F:{"2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB","322":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"322":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:1,C:"Audio Tracks"};

},{}],111:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"Autofocus attribute"};

},{}],112:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB","129":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Auxclick"};

},{}],113:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N","194":"O"},C:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB qB rB","66":"HB IB JB KB fB LB gB MB NB T","260":"OB","516":"PB"},D:{"1":"TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB","66":"QB RB SB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1090":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I aC bC cC dC eC kB fC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"AV1 video format"};

},{}],114:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB qB rB","194":"aB bB P Q R hB U V W X Y Z a b c d","257":"e S f H iB"},D:{"1":"W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"AVIF image format"};

},{}],115:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","132":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C vB wB xB yB kB cB dB","132":"I K uB jB zB","2050":"L G 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","132":"F 3B 4B"},G:{"2":"jB 8B nB","772":"E 9B AC BC CC DC EC FC GC HC IC JC KC","2050":"LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC XC YC","132":"WC nB"},J:{"260":"D A"},K:{"1":"B C cB mB dB","2":"T","132":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"2":"I","1028":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1028":"lC"},S:{"1":"mC"}},B:4,C:"CSS background-attachment"};

},{}],116:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O","33":"C K L P Q R U V W X Y Z a b c d e S f H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"L G 0B 1B lB 2B","16":"uB jB","33":"I g J D E F A B C K vB wB xB yB kB cB dB zB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"PC QC RC lB","16":"jB 8B nB 9B","33":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"16":"eB TC UC VC","33":"I H WC nB XC YC"},J:{"33":"D A"},K:{"16":"A B C cB mB dB","33":"T"},L:{"33":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"33":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"1":"mC"}},B:7,C:"Background-clip: text"};

},{}],117:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","36":"rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","516":"I g J D E F A B C K L"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","772":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B","36":"4B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","4":"jB 8B nB AC","516":"9B"},H:{"132":"SC"},I:{"1":"H XC YC","36":"TC","516":"eB I WC nB","548":"UC VC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 Background-image options"};

},{}],118:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"background-position-x & background-position-y"};

},{}],119:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E oB","132":"F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F G M N O 3B 4B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:4,C:"CSS background-repeat round and space"};

},{}],120:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f qB rB","16":"H iB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Background Sync API"};

},{}],121:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"5 6 7 8 9 AB BB CB DB","2":"pB eB I g J D E F EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","132":"0 1 2 3 4 M N O h i j k l m n o p q r s t u v w x y z","164":"A B C K L G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y","66":"z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Battery Status API"};

},{}],122:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Beacon API"};

},{}],123:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB"},D:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"2":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"Printing Events"};

},{}],124:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T qB rB","194":"OB PB QB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB zB"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"BigInt"};

},{}],125:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB","36":"J D E F A B C"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D","36":"E F A B C K L G M N O h"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"H","2":"TC UC VC","36":"eB I WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Blob constructing"};

},{}],126:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","129":"A B"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","129":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D","33":"E F A B C K L G M N O h i j k"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB TC UC VC","33":"I WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Blob URLs"};

},{}],127:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","129":"C K"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","260":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB","804":"I g J D E F A B C K L qB rB"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","260":"DB EB FB GB HB","388":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB","1412":"G M N O h i j k l m n o p q r","1956":"I g J D E F A B C K L"},E:{"129":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","1412":"J D E F wB xB","1956":"I g uB jB vB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B","260":"0 1 2 3 4","388":"G M N O h i j k l m n o p q r s t u v w x y z","1796":"5B 6B","1828":"B C cB mB 7B dB"},G:{"129":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","1412":"E AC BC CC DC","1956":"jB 8B nB 9B"},H:{"1828":"SC"},I:{"1":"H","388":"XC YC","1956":"eB I TC UC VC WC nB"},J:{"1412":"A","1924":"D"},K:{"1":"T","2":"A","1828":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"388":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","260":"aC bC","388":"I"},Q:{"260":"kC"},R:{"260":"lC"},S:{"260":"mC"}},B:4,C:"CSS3 Border images"};

},{}],128:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","257":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB","289":"eB qB rB","292":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I"},E:{"1":"g D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","33":"I uB jB","129":"J vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"jB"},H:{"2":"SC"},I:{"1":"eB I H UC VC WC nB XC YC","33":"TC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"257":"mC"}},B:4,C:"CSS3 Border-radius (rounded corners)"};

},{}],129:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"2B","2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"BroadcastChannel"};

},{}],130:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB","194":"BB","257":"CB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","513":"B C cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB","194":"y z"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:6,C:"Brotli Accept-Encoding/Content-Encoding"};

},{}],131:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","260":"F","516":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"I g J D E F A B C K L G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O","33":"h i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"AC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","132":"XC YC"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"calc() as CSS unit value"};

},{}],132:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Canvas blend modes"};

},{}],133:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","8":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","8":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","8":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Text API for Canvas"};

},{}],134:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","132":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","132":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"260":"SC"},I:{"1":"eB I H WC nB XC YC","132":"TC UC VC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Canvas (basic support)"};

},{}],135:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"ch (character) unit"};

},{}],136:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u","129":"0 1 2 3 4 5 6 7 8 9 v w x y z AB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC","16":"YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ChaCha20-Poly1305 cipher suites for TLS"};

},{}],137:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n qB rB","194":"0 1 2 o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B 4B","16":"5B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Channel messaging"};

},{}],138:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","16":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"ChildNode.remove()"};

},{}],139:[function(require,module,exports){
module.exports={A:{A:{"8":"J D E F oB","1924":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB qB","516":"m n","772":"I g J D E F A B C K L G M N O h i j k l rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I g J D","516":"m n o p","772":"l","900":"E F A B C K L G M N O h i j k"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","8":"I g uB jB","900":"J vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","8":"F B 3B 4B 5B 6B cB","900":"C mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB","900":"9B AC"},H:{"900":"SC"},I:{"1":"H XC YC","8":"TC UC VC","900":"eB I WC nB"},J:{"1":"A","900":"D"},K:{"1":"T","8":"A B","900":"C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"900":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"classList (DOMTokenList)"};

},{}],140:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:6,C:"Client Hints: DPR, Width, Viewport-Width"};

},{}],141:[function(require,module,exports){
module.exports={A:{A:{"2436":"J D E F A B oB"},B:{"260":"N O","2436":"C K L G M","8196":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j qB rB","772":"0 1 2 k l m n o p q r s t u v w x y z","4100":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I g J D E F A B C","2564":"0 1 2 3 4 K L G M N O h i j k l m n o p q r s t u v w x y z","8196":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","10244":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB"},E:{"1":"C K L G dB zB 0B 1B lB 2B","16":"uB jB","2308":"A B kB cB","2820":"I g J D E F vB wB xB yB"},F:{"2":"F B 3B 4B 5B 6B cB mB 7B","16":"C","516":"dB","2564":"G M N O h i j k l m n o p q r","8196":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","10244":"0 1 2 3 4 5 6 s t u v w x y z"},G:{"1":"JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","2820":"E 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","260":"H","2308":"XC YC"},J:{"2":"D","2308":"A"},K:{"2":"A B C cB mB","16":"dB","260":"T"},L:{"8196":"H"},M:{"1028":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2052":"aC bC","2308":"I","8196":"cC dC eC kB fC gC hC iC jC"},Q:{"10244":"kC"},R:{"2052":"lC"},S:{"4100":"mC"}},B:5,C:"Synchronous Clipboard API"};

},{}],142:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","257":"F A B"},B:{"1":"C K L G M N O","513":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB","513":"UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","129":"B C K cB dB zB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 3B 4B 5B 6B cB mB 7B dB","513":"KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"16":"A B"},O:{"1":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"COLR/CPAL(v0) Font Formats"};

},{}],143:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","132":"G M N O h i j k l m n o p q r"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","16":"I g J uB jB","132":"D E F wB xB yB","260":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","16":"F B 3B 4B 5B 6B cB mB","132":"G M"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB","132":"E 8B nB 9B AC BC CC DC EC"},H:{"1":"SC"},I:{"1":"H XC YC","16":"TC UC","132":"eB I VC WC nB"},J:{"132":"D A"},K:{"1":"C T dB","16":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Node.compareDocumentPosition()"};

},{}],144:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D oB","132":"E F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F 3B 4B 5B 6B"},G:{"1":"jB 8B nB 9B","513":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"4097":"SC"},I:{"1025":"eB I H TC UC VC WC nB XC YC"},J:{"258":"D A"},K:{"2":"A","258":"B C cB mB dB","1025":"T"},L:{"1025":"H"},M:{"2049":"S"},N:{"258":"A B"},O:{"258":"ZC"},P:{"1025":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1025":"lC"},S:{"1":"mC"}},B:1,C:"Basic console logging functions"};

},{}],145:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F 3B 4B 5B 6B","16":"B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"T","16":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"console.time and console.timeEnd"};

},{}],146:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","2052":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"pB eB I g J D E F A B C qB rB","260":"K L G M N O h i j k l m n o p q r s t u v w x"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","260":"I g J D E F A B C K L G M N O h i","772":"0 1 2 j k l m n o p q r s t u v w x y z","1028":"3 4 5 6 7 8 9 AB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","260":"I g A uB jB kB","772":"J D E F vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B","132":"B 4B 5B 6B cB mB","644":"C 7B dB","772":"G M N O h i j k l m n o p","1028":"q r s t u v w x"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","260":"jB 8B nB FC GC","772":"E 9B AC BC CC DC EC"},H:{"644":"SC"},I:{"1":"H","16":"TC UC","260":"VC","772":"eB I WC nB XC YC"},J:{"772":"D A"},K:{"1":"T","132":"A B cB mB","644":"C dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","1028":"I"},Q:{"1":"kC"},R:{"1028":"lC"},S:{"1":"mC"}},B:6,C:"const"};

},{}],147:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","900":"A B"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","388":"L G M","900":"C K"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","260":"BB CB","388":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB","900":"I g J D E F A B C K L G M N O h i j k l m n o p q"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","388":"0 1 n o p q r s t u v w x y z","900":"G M N O h i j k l m"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","16":"I g uB jB","388":"E F xB yB","900":"J D vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B 3B 4B 5B 6B cB mB","388":"G M N O h i j k l m n o","900":"C 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB","388":"E BC CC DC EC","900":"9B AC"},H:{"2":"SC"},I:{"1":"H","16":"eB TC UC VC","388":"XC YC","900":"I WC nB"},J:{"16":"D","388":"A"},K:{"1":"T","16":"A B cB mB","900":"C dB"},L:{"1":"H"},M:{"1":"S"},N:{"900":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"388":"mC"}},B:1,C:"Constraint Validation API"};

},{}],148:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB","4":"eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"contenteditable attribute (basic support)"};

},{}],149:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","129":"I g J D E F A B C K L G M N O h i j k"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K","257":"L G M N O h i j k l m"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","257":"J wB","260":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","257":"AC","260":"9B"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D","257":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"257":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Content Security Policy 1.0"};

},{}],150:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L","32772":"G M N O"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB","132":"t u v w","260":"x","516":"0 1 2 3 4 5 6 y z","8196":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x","1028":"0 y z","2052":"1"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k 3B 4B 5B 6B cB mB 7B dB","1028":"l m n","2052":"o"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"4100":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"8196":"mC"}},B:2,C:"Content Security Policy Level 2"};

},{}],151:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"Y Z a b c d e S f H","2":"C K L G M N O","194":"P Q R U V W X"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB","194":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB 3B 4B 5B 6B cB mB 7B dB","194":"DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Cookie Store API"};

},{}],152:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D oB","132":"A","260":"E F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB","1025":"gB MB NB T OB PB QB RB SB TB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C"},E:{"2":"uB jB","513":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","644":"I g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B"},G:{"513":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","644":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"H XC YC","132":"eB I TC UC VC WC nB"},J:{"1":"A","132":"D"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","132":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Cross-Origin Resource Sharing"};

},{}],153:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","3076":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB","132":"CB DB","260":"EB FB","516":"GB HB IB JB KB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y 3B 4B 5B 6B cB mB 7B dB","132":"0 z","260":"1 2","516":"3 4 5 6 7"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"3076":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","16":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"3076":"mC"}},B:1,C:"createImageBitmap"};

},{}],154:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","66":"AB BB CB","129":"DB EB FB GB HB IB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Credential Management API"};

},{}],155:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E F A","164":"B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","513":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB","66":"u v"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","8":"I g J D uB jB vB wB","289":"E F A xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","8":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB 9B AC BC","289":"E CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","8":"eB I TC UC VC WC nB XC YC"},J:{"8":"D A"},K:{"1":"T","8":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A","164":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Web Cryptography"};

},{}],156:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB XC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS all property"};

},{}],157:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I qB rB","33":"g J D E F A B C K L G"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"uB jB","33":"J D E vB wB xB","292":"I g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B","33":"C G M N O h i j k l m n o p q r"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"E AC BC CC","164":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"H","33":"I WC nB XC YC","164":"eB TC UC VC"},J:{"33":"D A"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS Animation"};

},{}],158:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB","33":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB qB rB"},D:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","16":"I g J uB jB vB","33":"D E wB xB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B","33":"E AC BC CC"},H:{"2":"SC"},I:{"1":"H","16":"eB I TC UC VC WC nB","33":"XC YC"},J:{"16":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"33":"ZC"},P:{"1":"eC kB fC gC hC iC jC","16":"I","33":"aC bC cC dC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"33":"mC"}},B:5,C:"CSS :any-link selector"};

},{}],159:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"V W X Y Z a b c d e S f H","33":"U","164":"P Q R","388":"C K L G M N O"},C:{"1":"Q R hB U V W X Y Z a b c d e S f H iB","164":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","676":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w qB rB"},D:{"1":"V W X Y Z a b c d e S f H iB sB tB","33":"U","164":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R"},E:{"1":"2B","164":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"1":"WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"TB UB VB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB"},G:{"164":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","164":"eB I TC UC VC WC nB XC YC"},J:{"164":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A","388":"B"},O:{"164":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"164":"mC"}},B:5,C:"CSS Appearance"};

},{}],160:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","194":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","194":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"194":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I","194":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"194":"lC"},S:{"2":"mC"}},B:7,C:"CSS @apply rule"};

},{}],161:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b","132":"c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","132":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b","132":"c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB 3B 4B 5B 6B cB mB 7B dB","132":"aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","132":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","132":"T"},L:{"132":"H"},M:{"132":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"132":"mC"}},B:4,C:"CSS Counter Styles"};

},{}],162:[function(require,module,exports){
module.exports={A:{D:{"1":"H iB sB","33":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f"},L:{"1":"H iB sB","33":"0 1 2 3 4 5 6 7 8 9 O n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f"},B:{"1":"H iB sB","2":"C K L G M N O","33":"P Q R U V W X Y Z a b c d e S f"},C:{"1":"X Y Z a b c d e S f H iB sB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W qB rB"},M:{"1":"X Y Z a b c d e S f H iB sB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB P Q R hB U V W"},A:{"2":"pB eB I g J D E F A B oB"},F:{"1":"hB U V","2":"pB eB I g J D E F A B C qB rB vB xB yB eC kB 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R"},K:{"33":"3 4 5 6 7 8 9 L G M O h i j k m n o p q r s u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB","34":"B C kB cB mB dB"},E:{"33":"eB I g J D E F A B C K L G uB vB yB kB cB dB zB 0B 1B lB","34":"pB"},G:{"33":"pB eB I g J D E F A B C K L G jB EC GC 1B lB"},P:{"33":"TC jB dC eC gC dB hC MC iC jC"},I:{"1":"H iB sB","33":"0 1 2 3 4 5 6 7 8 9 pB eB I z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f UC XC"}},B:6,C:":autofill CSS pseudo-class"};

},{}],163:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M","257":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB qB rB","578":"TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB"},E:{"2":"I g J D E uB jB vB wB xB","33":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v 3B 4B 5B 6B cB mB 7B dB","194":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC","33":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"578":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I","194":"aC bC cC dC eC kB fC"},Q:{"194":"kC"},R:{"194":"lC"},S:{"2":"mC"}},B:7,C:"CSS Backdrop Filter"};

},{}],164:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS background-position edge offsets"};

},{}],165:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r qB rB"},D:{"1":"0 1 2 3 4 5 6 7 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w","260":"8"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","132":"E F A xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j 3B 4B 5B 6B cB mB 7B dB","260":"v"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","132":"E CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS background-blend-mode"};

},{}],166:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","164":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB"},D:{"2":"I g J D E F A B C K L G M N O h i j","164":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J uB jB vB","164":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F 3B 4B 5B 6B","129":"B C cB mB 7B dB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB 9B AC","164":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"132":"SC"},I:{"2":"eB I TC UC VC WC nB","164":"H XC YC"},J:{"2":"D","164":"A"},K:{"2":"A","129":"B C cB mB dB","164":"T"},L:{"164":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"1":"mC"}},B:5,C:"CSS box-decoration-break"};

},{}],167:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","33":"qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I g J D E F"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","33":"g","164":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"8B nB","164":"jB"},H:{"2":"SC"},I:{"1":"I H WC nB XC YC","164":"eB TC UC VC"},J:{"1":"A","33":"D"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 Box-shadow"};

},{}],168:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"uB jB","33":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j k l m n o p q r s t u v w"},G:{"33":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"H","33":"eB I TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"aC bC cC dC eC kB fC gC hC iC jC","33":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS Canvas Drawings"};

},{}],169:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"CSS caret-color"};

},{}],170:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f","322":"H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e qB rB","194":"S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f","322":"H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB","578":"2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Cascade Layers"};

},{}],171:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:5,C:"Case-insensitive CSS attribute selectors"};

},{}],172:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N","260":"P Q R U V W X Y Z a b c d e S f H","3138":"O"},C:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","132":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","644":"9 AB BB CB DB EB FB"},D:{"2":"I g J D E F A B C K L G M N O h i j k l","260":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","292":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"2":"I g J uB jB vB wB","292":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","260":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","292":"0 1 2 3 G M N O h i j k l m n o p q r s t u v w x y z"},G:{"2":"jB 8B nB 9B AC","292":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","260":"H","292":"XC YC"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","260":"T"},L:{"260":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"292":"ZC"},P:{"292":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"292":"kC"},R:{"260":"lC"},S:{"644":"mC"}},B:4,C:"CSS clip-path property (for HTML)"};

},{}],173:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","33":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"16":"I g J D E F A B C K L G M N O","33":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g uB jB vB","33":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"16":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"16":"eB I TC UC VC WC nB XC YC","33":"H"},J:{"16":"D A"},K:{"2":"A B C cB mB dB","33":"T"},L:{"16":"H"},M:{"1":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"16":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"16":"lC"},S:{"1":"mC"}},B:5,C:"CSS color-adjust"};

},{}],174:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"G 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB","132":"B C K L kB cB dB zB 0B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC","132":"GC HC IC JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS color() function"};

},{}],175:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB qB rB","578":"YB ZB aB bB P Q R hB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","194":"fB LB gB MB NB T OB PB QB RB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Conical Gradients"};

},{}],176:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d","194":"e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c","194":"e S f H iB sB tB","450":"d"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB 3B 4B 5B 6B cB mB 7B dB","194":"P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS Container Queries"};

},{}],177:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB"},D:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","66":"DB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB","578":"2B"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","66":"0 1"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:2,C:"CSS Containment"};

},{}],178:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"W X Y Z a b c d e S f H","2":"C K L G M N O P Q R U V"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS content-visibility"};

},{}],179:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"J D oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS Counters"};

},{}],180:[function(require,module,exports){
module.exports={A:{A:{"2":"J oB","2340":"D E F A B"},B:{"2":"C K L G M N O","1025":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"e S f H iB","2":"pB eB qB","513":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d","545":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T rB"},D:{"2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","1025":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","164":"J","4644":"D E F wB xB yB"},F:{"2":"F B G M N O h i j k l m n o p 3B 4B 5B 6B cB mB","545":"C 7B dB","1025":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","4260":"9B AC","4644":"E BC CC DC EC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","1025":"H"},J:{"2":"D","4260":"A"},K:{"2":"A B cB mB","545":"C dB","1025":"T"},L:{"1025":"H"},M:{"545":"S"},N:{"2340":"A B"},O:{"1":"ZC"},P:{"1025":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1025":"kC"},R:{"1025":"lC"},S:{"4097":"mC"}},B:7,C:"Crisp edges/pixelated images"};

},{}],181:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","33":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"I g J D E F A B C K L G M","33":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","33":"J D E F vB wB xB yB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","33":"E 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","33":"H XC YC"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","33":"T"},L:{"33":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"33":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"2":"mC"}},B:4,C:"CSS Cross-Fade Function"};

},{}],182:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB"},D:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","16":"I g uB jB","132":"J D E F A vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B 3B 4B 5B 6B cB mB","132":"G M N O h i j k l m n o p q r s t u v w x y z","260":"C 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B AC","132":"E BC CC DC EC FC"},H:{"260":"SC"},I:{"1":"H","16":"eB TC UC VC","132":"I WC nB XC YC"},J:{"16":"D","132":"A"},K:{"1":"T","16":"A B C cB mB","260":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","132":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:7,C:":default CSS pseudo-class"};

},{}],183:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O Q R U V W X Y Z a b c d e S f H","16":"P"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"B","2":"I g J D E F A C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Explicit descendant combinator >>"};

},{}],184:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","164":"A B"},B:{"66":"P Q R U V W X Y Z a b c d e S f H","164":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m n o p q","66":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","66":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"292":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A T","292":"B C cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"164":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"66":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Device Adaptation"};

},{}],185:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M qB rB","33":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b","194":"c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"33":"mC"}},B:5,C:":dir() CSS pseudo-class"};

},{}],186:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O","260":"P Q R U V W X Y Z"},C:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y qB rB","260":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T","260":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z"},E:{"2":"I g J D E F A B uB jB vB wB xB yB kB","260":"L G zB 0B 1B lB 2B","772":"C K cB dB"},F:{"1":"ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB 3B 4B 5B 6B cB mB 7B dB","260":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC","260":"OC PC QC RC lB","772":"IC JC KC LC MC NC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"jC","2":"I aC bC cC dC","260":"eC kB fC gC hC iC"},Q:{"260":"kC"},R:{"2":"lC"},S:{"260":"mC"}},B:5,C:"CSS display: contents"};

},{}],187:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","164":"pB eB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"33":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"33":"mC"}},B:5,C:"CSS element() function"};

},{}],188:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T qB rB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","132":"B"},F:{"1":"IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC","132":"HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS Environment Variables env()"};

},{}],189:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","33":"A B"},B:{"2":"P Q R U V W X Y Z a b c d e S f H","33":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"33":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Exclusions Level 1"};

},{}],190:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS Feature Queries"};

},{}],191:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB","33":"F"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC","33":"DC EC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS filter() function"};

},{}],192:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","1028":"K L G M N O","1346":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","196":"w","516":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v rB"},D:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N","33":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","33":"J D E F wB xB"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 G M N O h i j k l m n o p q r s t u v w x y z"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"E AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","33":"XC YC"},J:{"2":"D","33":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","33":"I aC bC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS Filter Effects"};

},{}],193:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","16":"oB","516":"E","1540":"J D"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","132":"eB","260":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"g J D E","132":"I"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"g uB","132":"I jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","16":"F 3B","260":"B 4B 5B 6B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"1":"SC"},I:{"1":"eB I H WC nB XC YC","16":"TC UC","132":"VC"},J:{"1":"D A"},K:{"1":"C T dB","260":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"::first-letter CSS pseudo-element selector"};

},{}],194:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","132":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS first-line pseudo-element"};

},{}],195:[function(require,module,exports){
module.exports={A:{A:{"1":"D E F A B","2":"oB","8":"J"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB kB cB dB zB 0B 1B lB 2B","1025":"yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","132":"9B AC BC"},H:{"2":"SC"},I:{"1":"eB H XC YC","260":"TC UC VC","513":"I WC nB"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS position:fixed"};

},{}],196:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"X Y Z a b c d e S f H","2":"C K L G M N O","328":"P Q R U V W"},C:{"1":"W X Y Z a b c d e S f H iB","2":"pB eB qB rB","161":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V"},D:{"1":"X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB","328":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W"},E:{"2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB 0B","578":"G 1B lB 2B"},F:{"1":"VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB 3B 4B 5B 6B cB mB 7B dB","328":"PB QB RB SB TB UB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC","578":"RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"161":"mC"}},B:7,C:":focus-visible CSS pseudo-class"};

},{}],197:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB"},D:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","194":"fB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"8"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:7,C:":focus-within CSS pseudo-class"};

},{}],198:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"8 9 AB BB CB DB EB FB GB HB IB JB"},D:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB","66":"BB CB DB EB FB GB HB IB JB KB fB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB","66":"0 1 2 3 4 5 6 7 8 y z"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I","66":"aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:5,C:"CSS font-display"};

},{}],199:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E qB rB"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS font-stretch"};

},{}],200:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D oB","132":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS Generated content for pseudo-elements"};

},{}],201:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","260":"M N O h i j k l m n o p q r s t u v w x","292":"I g J D E F A B C K L G rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"A B C K L G M N O h i j k l m n","548":"I g J D E F"},E:{"2":"uB jB","260":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","292":"J vB","804":"I g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B","33":"C 7B","164":"cB mB"},G:{"260":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","292":"9B AC","804":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H XC YC","33":"I WC nB","548":"eB TC UC VC"},J:{"1":"A","548":"D"},K:{"1":"T dB","2":"A B","33":"C","164":"cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS Gradients"};

},{}],202:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","8":"F","292":"A B"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","292":"C K L G"},C:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O qB rB","8":"0 1 h i j k l m n o p q r s t u v w x y z","584":"2 3 4 5 6 7 8 9 AB BB CB DB","1025":"EB FB"},D:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m","8":"n o p q","200":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB","1025":"JB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","8":"J D E F A wB xB yB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB","200":"0 1 2 3 4 5 q r s t u v w x y z"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","8":"E AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC","8":"nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"292":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"aC","8":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"CSS Grid Layout (level 1)"};

},{}],203:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS hanging-punctuation"};

},{}],204:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:":has() CSS relational pseudo-class"};

},{}],205:[function(require,module,exports){
module.exports={A:{A:{"16":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","16":"C K L G M N O"},C:{"16":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"16":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"16":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"16":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"16":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"16":"A B C T cB mB dB"},L:{"16":"H"},M:{"16":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"16":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"16":"kC"},R:{"16":"lC"},S:{"16":"mC"}},B:5,C:"CSS4 Hyphenation"};

},{}],206:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","33":"A B"},B:{"33":"C K L G M N O","132":"P Q R U V W X Y","260":"Z a b c d e S f H"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB","33":"0 1 2 3 4 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},D:{"1":"Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB","132":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y"},E:{"2":"I g uB jB","33":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","132":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B","33":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"4":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I","132":"aC"},Q:{"2":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:5,C:"CSS Hyphenation"};

},{}],207:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O P Q","257":"R U V W X Y Z"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n qB rB"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q","257":"R U V W X Y Z"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB"},F:{"1":"RB SB TB UB VB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB 3B 4B 5B 6B cB mB 7B dB","257":"WB XB YB ZB aB bB P Q R hB"},G:{"1":"PC QC RC lB","132":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"hC iC jC","2":"I aC bC cC dC eC kB fC gC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 image-orientation"};

},{}],208:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","164":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W qB rB","66":"X Y","257":"a b c d e S f H iB","772":"Z"},D:{"2":"I g J D E F A B C K L G M N O h i","164":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g uB jB vB","132":"A B C K kB cB dB zB","164":"J D E F wB xB yB","516":"L G 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB 9B","132":"FC GC HC IC JC KC LC MC NC OC","164":"E AC BC CC DC EC","516":"PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","164":"H XC YC"},J:{"2":"D","164":"A"},K:{"2":"A B C cB mB dB","164":"T"},L:{"164":"H"},M:{"257":"S"},N:{"2":"A B"},O:{"164":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"2":"mC"}},B:5,C:"CSS image-set"};

},{}],209:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C","260":"K L G M N O"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","516":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB"},D:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I","16":"g J D E F A B C K L","260":"EB","772":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g","772":"J D E F A vB wB xB yB"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F 3B","260":"1 B C 4B 5B 6B cB mB 7B dB","772":"0 G M N O h i j k l m n o p q r s t u v w x y z"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","772":"E 9B AC BC CC DC EC FC"},H:{"132":"SC"},I:{"1":"H","2":"eB TC UC VC","260":"I WC nB XC YC"},J:{"2":"D","260":"A"},K:{"1":"T","260":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","260":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"516":"mC"}},B:5,C:":in-range and :out-of-range CSS pseudo-classes"};

},{}],210:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"A B","388":"F"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB","132":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","388":"I g"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","132":"0 G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","16":"I g J uB jB","132":"D E F A wB xB yB","388":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B 3B 4B 5B 6B cB mB","132":"G M N O h i j k l m n","516":"C 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B AC","132":"E BC CC DC EC FC"},H:{"516":"SC"},I:{"1":"H","16":"eB TC UC VC YC","132":"XC","388":"I WC nB"},J:{"16":"D","132":"A"},K:{"1":"T","16":"A B C cB mB","516":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"132":"mC"}},B:7,C:":indeterminate CSS pseudo-class"};

},{}],211:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E uB jB vB wB xB","4":"F","164":"A B C K L G yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC","164":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Initial Letter"};

},{}],212:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"I g J D E F A B C K L G M N O qB rB","164":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS initial value"};

},{}],213:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"G 1B lB 2B","2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB 0B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"LCH and Lab color values"};

},{}],214:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","16":"oB","132":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB","132":"I g J jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F 3B","132":"B C G M 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"2":"SC"},I:{"1":"H XC YC","16":"TC UC","132":"eB I VC WC nB"},J:{"132":"D A"},K:{"1":"T","132":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"letter-spacing CSS property"};

},{}],215:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M","33":"P Q R U V W X Y Z a b c d e S f H","129":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB qB rB","33":"RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"16":"I g J D E F A B C K","33":"0 1 2 3 4 5 6 7 8 9 L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I uB jB","33":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB","33":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"16":"TC UC","33":"eB I H VC WC nB XC YC"},J:{"33":"D A"},K:{"2":"A B C cB mB dB","33":"T"},L:{"33":"H"},M:{"33":"S"},N:{"2":"A B"},O:{"33":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"2":"mC"}},B:5,C:"CSS line-clamp"};

},{}],216:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O","1028":"Y Z","1540":"P Q R U V W X"},C:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","164":"0 1 2 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","1540":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB"},D:{"1":"a b c d e S f H iB sB tB","292":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB","1028":"Y Z","1540":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X"},E:{"1":"G 1B lB 2B","292":"I g J D E F A B C uB jB vB wB xB yB kB cB","1028":"0B","1540":"K L dB zB"},F:{"1":"ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","292":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB","1028":"XB YB","1540":"IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB"},G:{"1":"RC lB","292":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC","1028":"QC","1540":"KC LC MC NC OC PC"},H:{"2":"SC"},I:{"1":"H","292":"eB I TC UC VC WC nB XC YC"},J:{"292":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"292":"ZC"},P:{"1":"jC","292":"I aC bC cC dC eC","1540":"kB fC gC hC iC"},Q:{"1540":"kC"},R:{"1540":"lC"},S:{"1540":"mC"}},B:5,C:"CSS Logical Properties"};

},{}],217:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"X Y Z a b c d e S f H","2":"C K L G M N O P Q R U V W"},C:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB qB rB"},D:{"1":"X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W"},E:{"1":"2B","2":"I g J D E F A B uB jB vB wB xB yB kB","129":"C K L G cB dB zB 0B 1B lB"},F:{"1":"VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS ::marker pseudo-element"};

},{}],218:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M","164":"P Q R U V W X Y Z a b c d e S f H","3138":"N","12292":"O"},C:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","260":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB"},D:{"164":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"uB jB","164":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"164":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"164":"H XC YC","676":"eB I TC UC VC WC nB"},J:{"164":"D A"},K:{"2":"A B C cB mB dB","164":"T"},L:{"164":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"164":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"260":"mC"}},B:4,C:"CSS Masks"};

},{}],219:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"Z a b c d e S f H","2":"C K L G M N O","1220":"P Q R U V W X Y"},C:{"1":"bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB","548":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB"},D:{"1":"Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T","196":"OB PB QB","1220":"RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y"},E:{"1":"L G 0B 1B lB 2B","2":"I uB jB","16":"g","164":"J D E vB wB xB","260":"F A B C K yB kB cB dB zB"},F:{"1":"YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB","196":"EB FB GB","1220":"HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB"},G:{"1":"PC QC RC lB","16":"jB 8B nB 9B AC","164":"E BC CC","260":"DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"1":"H","16":"eB TC UC VC","164":"I WC nB XC YC"},J:{"16":"D","164":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"164":"ZC"},P:{"1":"jC","164":"I aC bC cC dC eC kB fC gC hC iC"},Q:{"1220":"kC"},R:{"164":"lC"},S:{"548":"mC"}},B:5,C:":is() CSS pseudo-class"};

},{}],220:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB qB rB"},D:{"1":"P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB","132":"C K cB dB"},F:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC","132":"IC JC KC LC MC NC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I aC bC cC dC eC kB fC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS math functions min(), max() and clamp()"};

},{}],221:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Media Queries: interaction media features"};

},{}],222:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","260":"I g J D E F A B C K L G qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","548":"I g J D E F A B C K L G M N O h i j k l m n o p q"},E:{"2":"uB jB","548":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F","548":"B C 3B 4B 5B 6B cB mB 7B"},G:{"16":"jB","548":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"132":"SC"},I:{"1":"H XC YC","16":"TC UC","548":"eB I VC WC nB"},J:{"548":"D A"},K:{"1":"T dB","548":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Media Queries: resolution feature"};

},{}],223:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"16":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB","16":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H","16":"iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Media Queries: scripting media feature"};

},{}],224:[function(require,module,exports){
module.exports={A:{A:{"8":"J D E oB","129":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","129":"I g J D E F A B C K L G M N O h i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","129":"I g J vB","388":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","129":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"H XC YC","129":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"129":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS3 Media Queries"};

},{}],225:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q","194":"0 1 2 r s t u v w x y z"},E:{"2":"I g J D uB jB vB wB","260":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB 9B AC BC","260":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Blending of HTML/SVG elements"};

},{}],226:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB qB rB"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"5 6 7"},E:{"1":"2B","2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB","194":"s t u"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"CSS Motion Path"};

},{}],227:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS namespaces"};

},{}],228:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Nesting"};

},{}],229:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"Z a b c d e S f H","2":"C K L G M N O Q R U V W X Y","16":"P"},C:{"1":"V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U qB rB"},D:{"1":"Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"jC","2":"I aC bC cC dC eC kB fC gC hC iC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"selector list argument of :not()"};

},{}],230:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes"};

},{}],231:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","4":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS3 Opacity"};

},{}],232:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F 3B","132":"B C 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"132":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","132":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:":optional CSS pseudo-class"};

},{}],233:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB qB rB"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"CSS overflow-anchor (Scroll Anchoring)"};

},{}],234:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"I g J D E F A B vB wB xB yB kB cB","16":"uB jB","130":"C K L G dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC","16":"jB","130":"JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"CSS overflow: overlay"};

},{}],235:[function(require,module,exports){
module.exports={A:{A:{"388":"J D E F A B oB"},B:{"1":"b c d e S f H","260":"P Q R U V W X Y Z a","388":"C K L G M N O"},C:{"1":"R hB U V W X Y Z a b c d e S f H iB","260":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q","388":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB qB rB"},D:{"1":"b c d e S f H iB sB tB","260":"RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a","388":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB"},E:{"1":"2B","260":"L G zB 0B 1B lB","388":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB"},F:{"260":"HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","388":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB 3B 4B 5B 6B cB mB 7B dB"},G:{"260":"OC PC QC RC lB","388":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC"},H:{"388":"SC"},I:{"1":"H","388":"eB I TC UC VC WC nB XC YC"},J:{"388":"D A"},K:{"1":"T","388":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"388":"A B"},O:{"388":"ZC"},P:{"1":"jC","388":"I aC bC cC dC eC kB fC gC hC iC"},Q:{"388":"kC"},R:{"388":"lC"},S:{"388":"mC"}},B:5,C:"CSS overflow property"};

},{}],236:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N","516":"O"},C:{"1":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB qB rB"},D:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB","260":"NB T"},E:{"2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB","1090":"G 0B 1B lB 2B"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB","260":"CB DB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC","1090":"QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS overscroll-behavior"};

},{}],237:[function(require,module,exports){
module.exports={A:{A:{"388":"A B","900":"J D E F oB"},B:{"388":"C K L G M N O","900":"P Q R U V W X Y Z a b c d e S f H"},C:{"772":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","900":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T qB rB"},D:{"900":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"772":"A","900":"I g J D E F B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"16":"F 3B","129":"B C 4B 5B 6B cB mB 7B dB","900":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"900":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"129":"SC"},I:{"900":"eB I H TC UC VC WC nB XC YC"},J:{"900":"D A"},K:{"129":"A B C cB mB dB","900":"T"},L:{"900":"H"},M:{"900":"S"},N:{"388":"A B"},O:{"900":"ZC"},P:{"900":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"900":"kC"},R:{"900":"lC"},S:{"900":"mC"}},B:2,C:"CSS page-break properties"};

},{}],238:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","132":"E F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"2":"pB eB I g J D E F A B C K L G M N O qB rB","132":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","132":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"16":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"16":"A B C T cB mB dB"},L:{"1":"H"},M:{"132":"S"},N:{"258":"A B"},O:{"258":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"132":"mC"}},B:5,C:"CSS Paged Media (@page)"};

},{}],239:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T"},E:{"2":"I g J D E F A B C uB jB vB wB xB yB kB cB","194":"K L G dB zB 0B 1B lB 2B"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Paint API"};

},{}],240:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","292":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","164":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"164":"mC"}},B:5,C:":placeholder-shown CSS pseudo-class"};

},{}],241:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","36":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O qB rB","33":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","36":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I uB jB","36":"g J D E F A vB wB xB yB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","36":"0 1 2 3 4 5 G M N O h i j k l m n o p q r s t u v w x y z"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B","36":"E nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","36":"eB I TC UC VC WC nB XC YC"},J:{"36":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"36":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","36":"I aC bC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"33":"mC"}},B:5,C:"::placeholder CSS pseudo-element"};

},{}],242:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB","33":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","132":"G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","16":"uB jB","132":"I g J D E vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B 3B 4B 5B 6B cB","132":"C G M N O h i j k mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B","132":"E nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","16":"TC UC","132":"eB I VC WC nB XC YC"},J:{"1":"A","132":"D"},K:{"1":"T","2":"A B cB","132":"C mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"33":"mC"}},B:1,C:"CSS :read-only and :read-write selectors"};

},{}],243:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB","16":"wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Rebeccapurple color"};

},{}],244:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","33":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"uB jB","33":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"33":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"33":"eB I H TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"2":"A B C cB mB dB","33":"T"},L:{"33":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"2":"mC"}},B:7,C:"CSS Reflections"};

},{}],245:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","420":"A B"},B:{"2":"P Q R U V W X Y Z a b c d e S f H","420":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","36":"G M N O","66":"h i j k l m n o p q r s t u v w"},E:{"2":"I g J C K L G uB jB vB cB dB zB 0B 1B lB 2B","33":"D E F A B wB xB yB kB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB 9B AC IC JC KC LC MC NC OC PC QC RC lB","33":"E BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"420":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Regions"};

},{}],246:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","33":"I g J D E F A B C K L G rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F","33":"A B C K L G M N O h i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","33":"J vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B","33":"C 7B","36":"cB mB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","33":"9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB TC UC VC","33":"I WC nB"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B","33":"C","36":"cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS Repeating Gradients"};

},{}],247:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"I"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B","132":"dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:4,C:"CSS resize property"};

},{}],248:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"V W X Y Z a b c d e S f H","2":"C K L G M N O P Q R U"},C:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB qB rB"},D:{"1":"V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS revert value"};

},{}],249:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB FB GB HB IB JB KB fB LB gB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"1 2 3 4 5 6 7 8 9 AB BB CB DB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I","194":"aC bC cC"},Q:{"2":"kC"},R:{"194":"lC"},S:{"2":"mC"}},B:7,C:"#rrggbbaa hex color notation"};

},{}],250:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","129":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB"},D:{"2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","129":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","450":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"1":"2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB zB","578":"L G 0B 1B lB"},F:{"2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB","129":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","450":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC","578":"QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"129":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"129":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSSOM Scroll-behavior"};

},{}],251:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a","194":"b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V","194":"Z a b c d e S f H iB sB tB","322":"W X Y"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB","194":"YB ZB aB bB P Q R hB","322":"WB XB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS @scroll-timeline"};

},{}],252:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"2":"C K L G M N O","292":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB qB rB","3074":"NB","4100":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"292":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"16":"I g uB jB","292":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","292":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"PC QC RC lB","16":"jB 8B nB 9B AC","292":"BC","804":"E CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"16":"TC UC","292":"eB I H VC WC nB XC YC"},J:{"292":"D A"},K:{"2":"A B C cB mB dB","292":"T"},L:{"292":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"292":"ZC"},P:{"292":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"292":"kC"},R:{"292":"lC"},S:{"2":"mC"}},B:7,C:"CSS scrollbar styling"};

},{}],253:[function(require,module,exports){
module.exports={A:{A:{"1":"D E F A B","2":"oB","8":"J"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS 2.1 selectors"};

},{}],254:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J","132":"D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS3 selectors"};

},{}],255:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"C T mB dB","16":"A B cB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"33":"mC"}},B:5,C:"::selection CSS pseudo-element"};

},{}],256:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB qB rB","322":"DB EB FB GB HB IB JB KB fB LB gB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v","194":"w x y"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","33":"E F A xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","33":"E CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:4,C:"CSS Shapes Level 1"};

},{}],257:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","6308":"A","6436":"B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","6436":"C K L G M N O"},C:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","2052":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB","8258":"PB QB RB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB","3108":"F A yB kB"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB","8258":"GB HB IB JB KB LB MB NB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC","3108":"DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2052":"mC"}},B:4,C:"CSS Scroll Snap"};

},{}],258:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"c d e S f H","2":"C K L G","1028":"P Q R U V W X Y Z a b","4100":"M N O"},C:{"1":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n qB rB","194":"o p q r s t","516":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},D:{"1":"c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k z AB BB CB DB","322":"l m n o p q r s t u v w x y EB FB GB HB","1028":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J uB jB vB","33":"E F A B C xB yB kB cB dB","2084":"D wB"},F:{"2":"0 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","322":"1 2 3","1028":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"E CC DC EC FC GC HC IC JC KC","2084":"AC BC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1028":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1028":"kC"},R:{"2":"lC"},S:{"516":"mC"}},B:5,C:"CSS position:sticky"};

},{}],259:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Subgrid"};

},{}],260:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N O"},C:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h qB rB","66":"i j","260":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p","260":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B","132":"dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"132":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB","132":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS.supports() API"};

},{}],261:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"J D oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","132":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS Table display"};

},{}],262:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","4":"C K L G M N O"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B qB rB","33":"0 1 2 3 4 5 6 7 8 9 C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w","322":"0 1 2 3 4 5 6 7 8 x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j 3B 4B 5B 6B cB mB 7B dB","578":"k l m n o p q r s t u v"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"1":"lC"},S:{"33":"mC"}},B:5,C:"CSS3 text-align-last"};

},{}],263:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"132":"C K L G M N O","388":"P Q R U V W X Y Z a b c d e S f H"},C:{"132":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"132":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","388":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"132":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"132":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB","388":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"132":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"132":"SC"},I:{"132":"eB I TC UC VC WC nB XC YC","388":"H"},J:{"132":"D A"},K:{"132":"A B C cB mB dB","388":"T"},L:{"388":"H"},M:{"132":"S"},N:{"132":"A B"},O:{"132":"ZC"},P:{"132":"I","388":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"388":"kC"},R:{"388":"lC"},S:{"132":"mC"}},B:5,C:"CSS text-indent"};

},{}],264:[function(require,module,exports){
module.exports={A:{A:{"16":"J D oB","132":"E F A B"},B:{"132":"C K L G M N O","322":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB qB rB","1025":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","1602":"GB"},D:{"2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","322":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB","322":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","322":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","322":"T"},L:{"322":"H"},M:{"1025":"S"},N:{"132":"A B"},O:{"2":"ZC"},P:{"2":"I","322":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"322":"kC"},R:{"322":"lC"},S:{"2":"mC"}},B:5,C:"CSS text-justify"};

},{}],265:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"0 1 2"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","16":"A","33":"B C K kB cB dB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS text-orientation"};

},{}],266:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","161":"E F A B"},B:{"2":"P Q R U V W X Y Z a b c d e S f H","161":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"16":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"CSS Text 4 text-spacing"};

},{}],267:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","129":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","129":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","260":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"4":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"A","4":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"129":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 Text-shadow"};

},{}],268:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"B","164":"A"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB","260":"HB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","260":"4"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"132":"B","164":"A"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"CSS touch-action level 2 values"};

},{}],269:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F oB","289":"A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","194":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB","1025":"EB FB GB HB IB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC","516":"EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","289":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"194":"mC"}},B:2,C:"CSS touch-action property"};

},{}],270:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"g J D E F A B C K L G","164":"I"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I g J D E F A B C K L G M N O h i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","33":"J vB","164":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F 3B 4B","33":"C","164":"B 5B 6B cB mB 7B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"AC","164":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"H XC YC","33":"eB I TC UC VC WC nB"},J:{"1":"A","33":"D"},K:{"1":"T dB","33":"C","164":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS3 Transitions"};

},{}],271:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB","132":"pB eB I g J D E F qB rB","292":"A B C K L G M"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M","548":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z"},E:{"132":"I g J D E uB jB vB wB xB","548":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"132":"E jB 8B nB 9B AC BC CC","548":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"1":"H","16":"eB I TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"1":"T","16":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"16":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"16":"kC"},R:{"16":"lC"},S:{"33":"mC"}},B:4,C:"CSS unicode-bidi property"};

},{}],272:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS unset value"};

},{}],273:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L","260":"G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"AB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB","260":"yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w 3B 4B 5B 6B cB mB 7B dB","194":"x"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC","260":"EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"CSS Variables (Custom Properties)"};

},{}],274:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D oB","129":"E F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","129":"F B 3B 4B 5B 6B cB mB 7B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:2,C:"CSS widows & orphans"};

},{}],275:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB","322":"0 1 2 y z"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J","16":"D","33":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g","33":"J D E F A vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j k l m n o p q r s t u v w"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB","33":"E 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"TC UC VC","33":"eB I WC nB XC YC"},J:{"33":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"36":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","33":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS writing-mode property"};

},{}],276:[function(require,module,exports){
module.exports={A:{A:{"1":"J D oB","129":"E F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"129":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"CSS zoom"};

},{}],277:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"CSS3 attr() function for all properties"};

},{}],278:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","8":"J D oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I g J D E F"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","33":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"jB 8B nB"},H:{"1":"SC"},I:{"1":"I H WC nB XC YC","33":"eB TC UC VC"},J:{"1":"A","33":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS3 Box-sizing"};

},{}],279:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","4":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","2":"F","4":"3B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS3 Colors"};

},{}],280:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"pB eB I g J D E F A B C K L G M N O h i j k l m n o qB rB"},D:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","33":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"C HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:3,C:"CSS grab & grabbing cursors"};

},{}],281:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"pB eB I g J D E F A B C K L G M N O h i j k l qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","33":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB","33":"G M N O h i j k l"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"CSS3 Cursors: zoom-in & zoom-out"};

},{}],282:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","132":"J D E oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","260":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","4":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","4":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","260":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","16":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"CSS3 Cursors (original values)"};

},{}],283:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"c d e S f H iB","2":"pB eB qB rB","33":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b","164":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i","132":"0 1 2 3 j k l m n o p q r s t u v w x y z"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J uB jB vB","132":"D E F A B C K wB xB yB kB cB dB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B 5B","132":"G M N O h i j k l m n o p q","164":"B C 6B cB mB 7B dB"},G:{"1":"OC PC QC RC lB","2":"jB 8B nB 9B AC","132":"E BC CC DC EC FC GC HC IC JC KC LC MC NC"},H:{"164":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","132":"XC YC"},J:{"132":"D A"},K:{"1":"T","2":"A","164":"B C cB mB dB"},L:{"1":"H"},M:{"33":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"164":"mC"}},B:5,C:"CSS3 tab-size"};

},{}],284:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS currentColor value"};

},{}],285:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","8":"A B"},B:{"1":"P","2":"Q R U V W X Y Z a b c d e S f H","8":"C K L G M N O"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","66":"l m n o p q r","72":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","2":"I g J D E F A B C K L G M N O h i j k l m n o Q R U V W X Y Z a b c d e S f H iB sB tB","66":"p q r s t u"},E:{"2":"I g uB jB vB","8":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB","2":"F B C QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","66":"G M N O h"},G:{"2":"jB 8B nB 9B AC","8":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"YC","2":"eB I H TC UC VC WC nB XC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC","2":"hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"72":"mC"}},B:7,C:"Custom Elements (deprecated V0 spec)"};

},{}],286:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","8":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","8":"C K L G M N O"},C:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r qB rB","8":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB","456":"CB DB EB FB GB HB IB JB KB","712":"fB LB gB MB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB","8":"EB FB","132":"GB HB IB JB KB fB LB gB MB NB T OB PB"},E:{"2":"I g J D uB jB vB wB xB","8":"E F A yB","132":"B C K L G kB cB dB zB 0B 1B lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","132":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC","132":"GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I","132":"aC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"8":"mC"}},B:1,C:"Custom Elements (V1)"};

},{}],287:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB","132":"J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I","16":"g J D E K L","388":"F A B C"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g J","388":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F 3B 4B 5B 6B","132":"B cB mB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"8B","16":"jB nB","388":"9B"},H:{"1":"SC"},I:{"1":"H XC YC","2":"TC UC VC","388":"eB I WC nB"},J:{"1":"A","388":"D"},K:{"1":"C T dB","2":"A","132":"B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"CustomEvent"};

},{}],288:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E F","260":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G","1284":"M N O"},C:{"8":"pB eB qB rB","4612":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I g J D E F A B C K L G M N O h","132":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB"},E:{"1":"K L G dB zB 0B 1B lB 2B","8":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"1":"F B C T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"8":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC","2049":"KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H YC","8":"eB I TC UC VC WC nB XC"},J:{"1":"A","8":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"516":"S"},N:{"8":"A B"},O:{"8":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"Datalist element"};

},{}],289:[function(require,module,exports){
module.exports={A:{A:{"1":"B","4":"J D E F A oB"},B:{"1":"C K L G M","129":"N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","4":"pB eB I g qB rB","129":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB","4":"I g J","129":"0 1 2 3 4 5 6 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"4":"I g uB jB","129":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 C u v w x y z cB mB 7B dB","4":"F B 3B 4B 5B 6B","129":"4 5 6 7 8 9 G M N O h i j k l m n o p q r s t AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"4":"jB 8B nB","129":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"4":"SC"},I:{"4":"TC UC VC","129":"eB I H WC nB XC YC"},J:{"129":"D A"},K:{"1":"C cB mB dB","4":"A B","129":"T"},L:{"129":"H"},M:{"129":"S"},N:{"1":"B","4":"A"},O:{"129":"ZC"},P:{"129":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"129":"lC"},S:{"1":"mC"}},B:1,C:"dataset & data-* attributes"};

},{}],290:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","132":"E","260":"F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","260":"C K G M N O","772":"L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"260":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Data URIs"};

},{}],291:[function(require,module,exports){
module.exports={A:{A:{"16":"oB","132":"J D E F A B"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N"},C:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","260":"EB FB GB HB","772":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB"},D:{"1":"TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l","260":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB","772":"m n o p q r s t u v w x y z"},E:{"1":"C K L G dB zB 0B 1B lB 2B","16":"I g uB jB","132":"J D E F A vB wB xB yB","260":"B kB cB"},F:{"1":"JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B C 3B 4B 5B 6B cB mB 7B","132":"dB","260":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB","772":"G M N O h i j k l m"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B","132":"E AC BC CC DC EC FC"},H:{"132":"SC"},I:{"1":"H","16":"eB TC UC VC","132":"I WC nB","772":"XC YC"},J:{"132":"D A"},K:{"1":"T","16":"A B C cB mB","132":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"260":"ZC"},P:{"1":"eC kB fC gC hC iC jC","260":"I aC bC cC dC"},Q:{"260":"kC"},R:{"132":"lC"},S:{"132":"mC"}},B:6,C:"Date.prototype.toLocaleDateString"};

},{}],292:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Decorators"};

},{}],293:[function(require,module,exports){
module.exports={A:{A:{"2":"F A B oB","8":"J D E"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","8":"0 1 2 3 4 5 6 7 8 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"9 AB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I g J D E F A B","257":"h i j k l m n o p q r s t u v w x","769":"C K L G M N O"},E:{"1":"C K L G dB zB 0B 1B lB 2B","8":"I g uB jB vB","257":"J D E F A wB xB yB","1025":"B kB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"C cB mB 7B dB","8":"F B 3B 4B 5B 6B"},G:{"1":"E AC BC CC DC EC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB 9B","1025":"FC GC HC"},H:{"8":"SC"},I:{"1":"I H WC nB XC YC","8":"eB TC UC VC"},J:{"1":"A","8":"D"},K:{"1":"T","8":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"769":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Details & Summary elements"};

},{}],294:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"C K L G M N O","4":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB qB","4":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"I g rB"},D:{"2":"I g J","4":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","4":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B","4":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"TC UC VC","4":"eB I H WC nB XC YC"},J:{"2":"D","4":"A"},K:{"1":"C dB","2":"A B cB mB","4":"T"},L:{"4":"H"},M:{"4":"S"},N:{"1":"B","2":"A"},O:{"4":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"4":"lC"},S:{"4":"mC"}},B:4,C:"DeviceOrientation & DeviceMotion events"};

},{}],295:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Window.devicePixelRatio"};

},{}],296:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB","194":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","1218":"Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t","322":"u v w x y"},E:{"1":"2B","2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O 3B 4B 5B 6B cB mB 7B dB","578":"h i j k l"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"Dialog element"};

},{}],297:[function(require,module,exports){
module.exports={A:{A:{"1":"B","16":"oB","129":"F A","130":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","129":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"EventTarget.dispatchEvent"};

},{}],298:[function(require,module,exports){
module.exports={A:{A:{"132":"J D E F A B oB"},B:{"132":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"132":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"132":"0 1 2 3 4 5 6 7 8 9 I g t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","388":"J D E F A B C K L G M N O h i j k l m n o p q r s"},E:{"132":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"132":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"132":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"132":"SC"},I:{"132":"eB I H TC UC VC WC nB XC YC"},J:{"132":"D A"},K:{"132":"A B C T cB mB dB"},L:{"132":"H"},M:{"132":"S"},N:{"132":"A B"},O:{"132":"ZC"},P:{"132":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"132":"mC"}},B:6,C:"DNSSEC and DANE"};

},{}],299:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","164":"F A","260":"B"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","260":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E qB rB","516":"F A B C K L G M N O h i j k l m n o p q r s t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k"},E:{"1":"J A B C vB yB kB cB","2":"I g K L G uB jB dB zB 0B 1B lB 2B","1028":"D E F wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B"},G:{"1":"DC EC FC GC HC IC JC","2":"jB 8B nB 9B AC KC LC MC NC OC PC QC RC lB","1028":"E BC CC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"16":"D","1028":"A"},K:{"1":"T dB","16":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"164":"A","260":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Do Not Track API"};

},{}],300:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"document.currentScript"};

},{}],301:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","16":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"document.evaluate & XPath"};

},{}],302:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","16":"F 3B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B","16":"nB 9B AC"},H:{"2":"SC"},I:{"1":"H WC nB XC YC","2":"eB I TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"Document.execCommand()"};

},{}],303:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V","132":"W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V","132":"W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB 3B 4B 5B 6B cB mB 7B dB","132":"UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","132":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","132":"T"},L:{"132":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Document Policy"};

},{}],304:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","16":"C K"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"document.scrollingElement"};

},{}],305:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F 3B 4B 5B 6B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"document.head"};

},{}],306:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB","194":"EB FB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"2"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"194":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"DOM manipulation convenience methods"};

},{}],307:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Document Object Model Range"};

},{}],308:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"DOMContentLoaded"};

},{}],309:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L G M N O h i j k l m n"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","16":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B AC"},H:{"16":"SC"},I:{"1":"I H WC nB XC YC","16":"eB TC UC VC"},J:{"16":"D A"},K:{"1":"T","16":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"DOMFocusIn & DOMFocusOut events"};

},{}],310:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"132":"C K L G M N O","1028":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","1028":"SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2564":"0 1 2 3 4 5 6 7 8 9 v w x y z AB","3076":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB"},D:{"16":"I g J D","132":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB","388":"E","1028":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"16":"I uB jB","132":"g J D E F A vB wB xB yB kB","1028":"B C K L G cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z","1028":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"16":"jB 8B nB","132":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"132":"I WC nB XC YC","292":"eB TC UC VC","1028":"H"},J:{"16":"D","132":"A"},K:{"2":"A B C cB mB dB","1028":"T"},L:{"1028":"H"},M:{"1028":"S"},N:{"132":"A B"},O:{"132":"ZC"},P:{"132":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"2564":"mC"}},B:4,C:"DOMMatrix"};

},{}],311:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Download attribute"};

},{}],312:[function(require,module,exports){
module.exports={A:{A:{"644":"J D E F oB","772":"A B"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","8":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","8":"F B 3B 4B 5B 6B cB mB 7B"},G:{"1":"RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","1025":"H"},J:{"2":"D A"},K:{"1":"dB","8":"A B C cB mB","1025":"T"},L:{"1025":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"Drag and Drop"};

},{}],313:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Element.closest()"};

},{}],314:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","16":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","16":"F 3B 4B 5B 6B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"C T dB","16":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"document.elementFromPoint()"};

},{}],315:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","132":"A B C K kB cB dB zB"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC","132":"FC GC HC IC JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:5,C:"Scroll methods on elements (scroll, scrollTo, scrollBy)"};

},{}],316:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","164":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w","132":"0 1 2 3 x y z"},E:{"1":"C K L G dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB","164":"D E F A B xB yB kB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j 3B 4B 5B 6B cB mB 7B dB","132":"k l m n o p q"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"16":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:2,C:"Encrypted Media Extensions"};

},{}],317:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","2":"oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"EOT - Embedded OpenType fonts"};

},{}],318:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D oB","260":"F","1026":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","4":"pB eB qB rB","132":"I g J D E F A B C K L G M N O h i"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I g J D E F A B C K L G M N O","132":"h i j k"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","4":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","4":"F B C 3B 4B 5B 6B cB mB 7B","132":"dB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","4":"jB 8B nB 9B"},H:{"132":"SC"},I:{"1":"H XC YC","4":"eB TC UC VC","132":"WC nB","900":"I"},J:{"1":"A","4":"D"},K:{"1":"T","4":"A B C cB mB","132":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ECMAScript 5"};

},{}],319:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","132":"4 5 6 7 8 9 AB"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q 3B 4B 5B 6B cB mB 7B dB","132":"r s t u v w x"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ES6 classes"};

},{}],320:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n qB rB"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ES6 Generators"};

},{}],321:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB qB rB","194":"PB"},D:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"JavaScript modules: dynamic import()"};

},{}],322:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L","4097":"M N O","4290":"G"},C:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB qB rB","322":"GB HB IB JB KB fB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","194":"LB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB","3076":"kB"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"9"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC","3076":"GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"JavaScript modules via script tag"};

},{}],323:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G qB rB","132":"M N O h i j k l m","260":"n o p q r s","516":"t"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O","1028":"h i j k l m n o p q r s t u v"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","1028":"G M N O h i"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC","1028":"WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ES6 Number"};

},{}],324:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"String.prototype.includes"};

},{}],325:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","388":"B"},B:{"257":"P Q R U V W X Y Z a b c d e S f H","260":"C K L","769":"G M N O"},C:{"2":"pB eB I g qB rB","4":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB","257":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I g J D E F A B C K L G M N O h i","4":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB","257":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","4":"E F xB yB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","4":"G M N O h i j k l m n o p q r s t u v w x y z","257":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC","4":"E BC CC DC EC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","4":"XC YC","257":"H"},J:{"2":"D","4":"A"},K:{"2":"A B C cB mB dB","257":"T"},L:{"257":"H"},M:{"257":"S"},N:{"2":"A","388":"B"},O:{"257":"ZC"},P:{"4":"I","257":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"257":"kC"},R:{"4":"lC"},S:{"4":"mC"}},B:6,C:"ECMAScript 2015 (ES6)"};

},{}],326:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","4":"F 3B 4B 5B 6B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"C T cB mB dB","4":"A B"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Server-sent events"};

},{}],327:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"ui-serif, ui-sans-serif, ui-monospace and ui-rounded values for font-family"};

},{}],328:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y","2":"C K L G M N O","1025":"Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB qB rB","260":"XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"XB YB ZB aB bB P Q R U V W X Y","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","132":"LB gB MB NB T OB PB QB RB SB TB UB VB WB","1025":"Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B uB jB vB wB xB yB kB","772":"C K L G cB dB zB 0B 1B lB 2B"},F:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB","2":"0 1 2 3 4 5 6 7 8 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","132":"9 AB BB CB DB EB FB GB HB IB JB KB LB","1025":"YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC","772":"IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1025":"H"},M:{"260":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC","132":"dC eC kB"},Q:{"132":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Feature Policy"};

},{}],329:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v qB rB","1025":"1","1218":"0 w x y z"},D:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","260":"2","772":"3"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o 3B 4B 5B 6B cB mB 7B dB","260":"p","772":"q"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Fetch"};

},{}],330:[function(require,module,exports){
module.exports={A:{A:{"16":"oB","132":"E F","388":"J D A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G","16":"M N O h"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","16":"F 3B"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"388":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A","260":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"disabled attribute of the fieldset element"};

},{}],331:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","260":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","260":"I g J D E F A B C K L G M N O h i j k l m n o p rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g","260":"K L G M N O h i j k l m n o p q r s t u v w x y z","388":"J D E F A B C"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","260":"J D E F wB xB yB","388":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B 3B 4B 5B 6B","260":"C G M N O h i j k l m cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","260":"E AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H YC","2":"TC UC VC","260":"XC","388":"eB I WC nB"},J:{"260":"A","388":"D"},K:{"1":"T","2":"A B","260":"C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A","260":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"File API"};

},{}],332:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F B 3B 4B 5B 6B"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"C T cB mB dB","2":"A B"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"FileReader API"};

},{}],333:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F 3B 4B","16":"B 5B 6B cB mB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"C T mB dB","2":"A","16":"B cB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"FileReaderSync"};

},{}],334:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","33":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"I g J D","33":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","36":"E F A B C"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","33":"A"},K:{"2":"A B C T cB mB dB"},L:{"33":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I","33":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Filesystem & FileWriter API"};

},{}],335:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB qB rB"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","16":"6 7 8","388":"9 AB BB CB DB EB FB GB HB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","516":"B C cB dB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"TC UC VC","16":"eB I WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"T dB","16":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","129":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:6,C:"FLAC audio format"};

},{}],336:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"V W X Y Z a b c d e S f H","2":"C K L G M N O P Q R U"},C:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB qB rB"},D:{"1":"V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB"},F:{"1":"WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"gap property for Flexbox"};

},{}],337:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","1028":"B","1316":"A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","164":"pB eB I g J D E F A B C K L G M N O h i j qB rB","516":"k l m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"j k l m n o p q","164":"I g J D E F A B C K L G M N O h i"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","33":"D E wB xB","164":"I g J uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B","33":"G M"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"E BC CC","164":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"H XC YC","164":"eB I TC UC VC WC nB"},J:{"1":"A","164":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","292":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS Flexible Box Layout Module"};

},{}],338:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB"},D:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB dB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"display: flow-root"};

},{}],339:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","2":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F 3B 4B 5B 6B","16":"B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"I H WC nB XC YC","2":"TC UC VC","16":"eB"},J:{"1":"D A"},K:{"1":"C T dB","2":"A","16":"B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"focusin & focusout events"};

},{}],340:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M","132":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"preventScroll support in focus"};

},{}],341:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"d e S f H iB","2":"0 1 2 3 4 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","132":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","260":"FB GB HB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB","16":"F","132":"A yB kB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC","132":"DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"132":"mC"}},B:5,C:"system-ui value for font-family"};

},{}],342:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"G M N O h i j k l m n o p q r s t u v","164":"I g J D E F A B C K L"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G","33":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z","292":"M N O h i"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"D E F uB jB wB xB","4":"I g J vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j k l m n o p q r s t u v w"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E BC CC DC","4":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","33":"XC YC"},J:{"2":"D","33":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","33":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS font-feature-settings"};

},{}],343:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l qB rB","194":"m n o p q r s t u v"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q","33":"r s t u"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB","33":"D E F xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G 3B 4B 5B 6B cB mB 7B dB","33":"M N O h"},G:{"1":"JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","33":"E CC DC EC FC GC HC IC"},H:{"2":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB","33":"XC"},J:{"2":"D","33":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 font-kerning"};

},{}],344:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w qB rB","194":"0 1 2 x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS Font Loading"};

},{}],345:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W","194":"X"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"@font-face metrics overrides"};

},{}],346:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","194":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB","194":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"258":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"194":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"CSS font-size-adjust"};

},{}],347:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","676":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB","804":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I","676":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"uB jB","676":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","676":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"804":"mC"}},B:7,C:"CSS font-smooth"};

},{}],348:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","4":"F A B"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","4":"C K L G M"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB","194":"0 1 2 3 4 5 y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","4":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","4":"G M N O h i j k"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","4":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","4":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","4":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"4":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","4":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"Font unicode-range subsetting"};

},{}],349:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","130":"A B"},B:{"130":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","130":"I g J D E F A B C K L G M N O h i j k l","322":"m n o p q r s t u v"},D:{"2":"I g J D E F A B C K L G","130":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"D E F uB jB wB xB","130":"I g J vB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","130":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB BC CC DC","130":"8B nB 9B AC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","130":"H XC YC"},J:{"2":"D","130":"A"},K:{"2":"A B C cB mB dB","130":"T"},L:{"130":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"130":"ZC"},P:{"130":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"130":"kC"},R:{"130":"lC"},S:{"1":"mC"}},B:5,C:"CSS font-variant-alternates"};

},{}],350:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l qB rB","132":"m n o p q r s t u v"},D:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"132":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"CSS font-variant-east-asian "};

},{}],351:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v qB rB"},D:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","16":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:2,C:"CSS font-variant-numeric"};

},{}],352:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","132":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","2":"F 3B"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","260":"jB 8B"},H:{"2":"SC"},I:{"1":"I H WC nB XC YC","2":"TC","4":"eB UC VC"},J:{"1":"A","4":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"@font-face Web fonts"};

},{}],353:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Form attribute"};

},{}],354:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B","16":"4B 5B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"I H WC nB XC YC","2":"TC UC VC","16":"eB"},J:{"1":"A","2":"D"},K:{"1":"B C T cB mB dB","16":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Attributes for form submission"};

},{}],355:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I uB jB","132":"g J D E F A vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","2":"F 3B"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB","132":"E 8B nB 9B AC BC CC DC EC FC"},H:{"516":"SC"},I:{"1":"H YC","2":"eB TC UC VC","132":"I WC nB XC"},J:{"1":"A","132":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"260":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"132":"mC"}},B:1,C:"Form validation"};

},{}],356:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","4":"A B","8":"J D E F"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","4":"C K L G"},C:{"4":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB qB rB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"4":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"uB jB"},F:{"1":"F B C EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","4":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB"},G:{"2":"jB","4":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","4":"XC YC"},J:{"2":"D","4":"A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"4":"S"},N:{"4":"A B"},O:{"1":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","4":"I aC bC cC"},Q:{"1":"kC"},R:{"4":"lC"},S:{"4":"mC"}},B:1,C:"HTML5 form features"};

},{}],357:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","548":"B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","516":"C K L G M N O"},C:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F qB rB","676":"0 1 2 3 4 5 6 7 8 A B C K L G M N O h i j k l m n o p q r s t u v w x y z","1700":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB"},D:{"1":"UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L","676":"G M N O h","804":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB"},E:{"2":"I g uB jB","676":"vB","804":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B","804":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC RC lB","2052":"JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","292":"A"},K:{"2":"A B C T cB mB dB"},L:{"804":"H"},M:{"1":"S"},N:{"2":"A","548":"B"},O:{"804":"ZC"},P:{"1":"kB fC gC hC iC jC","804":"I aC bC cC dC eC"},Q:{"804":"kC"},R:{"804":"lC"},S:{"1":"mC"}},B:1,C:"Full Screen API"};

},{}],358:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i","33":"j k l m"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Gamepad API"};

},{}],359:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D E"},B:{"1":"C K L G M N O","129":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB qB rB","8":"pB eB","129":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB","4":"I","129":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"I uB jB","129":"A"},F:{"1":"0 B C M N O h i j k l m n o p q r s t u v w x y z 6B cB mB 7B dB","2":"F G 3B","8":"4B 5B","129":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC","129":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I TC UC VC WC nB XC YC","129":"H"},J:{"1":"D A"},K:{"1":"B C cB mB dB","8":"A","129":"T"},L:{"129":"H"},M:{"129":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I","129":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"129":"kC"},R:{"129":"lC"},S:{"1":"mC"}},B:2,C:"Geolocation"};

},{}],360:[function(require,module,exports){
module.exports={A:{A:{"644":"J D oB","2049":"F A B","2692":"E"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2049":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","260":"I g J D E F A B","1156":"eB","1284":"qB","1796":"rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","16":"F 3B","132":"4B 5B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","132":"A"},L:{"1":"H"},M:{"1":"S"},N:{"2049":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Element.getBoundingClientRect()"};

},{}],361:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","132":"eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","260":"I g J D E F A"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","260":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","260":"F 3B 4B 5B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","260":"jB 8B nB"},H:{"260":"SC"},I:{"1":"I H WC nB XC YC","260":"eB TC UC VC"},J:{"1":"A","260":"D"},K:{"1":"B C T cB mB dB","260":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"getComputedStyle"};

},{}],362:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","8":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"getElementsByClassName"};

},{}],363:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","33":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A","33":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"crypto.getRandomValues()"};

},{}],364:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T OB PB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Gyroscope"};

},{}],365:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},E:{"2":"I g J D uB jB vB wB xB","129":"B C K L G kB cB dB zB 0B 1B lB 2B","194":"E F A yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB 9B AC BC","129":"GC HC IC JC KC LC MC NC OC PC QC RC lB","194":"E CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"navigator.hardwareConcurrency"};

},{}],366:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","8":"J D oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","8":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","8":"F 3B 4B 5B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"eB I H UC VC WC nB XC YC","2":"TC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","8":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Hashchange event"};

},{}],367:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A uB jB vB wB xB yB kB","130":"B C K L G cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC","130":"HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"HEIF/ISO Base Media File Format"};

},{}],368:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"2":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","516":"B C cB dB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","258":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","258":"T"},L:{"258":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I","258":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"HEVC/H.265 video format"};

},{}],369:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F B 3B 4B 5B 6B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"I H WC nB XC YC","2":"eB TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"C T cB mB dB","2":"A B"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"hidden attribute"};

},{}],370:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h","33":"i j k l"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"High Resolution Time API"};

},{}],371:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","4":"g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB mB 7B dB","2":"F B 3B 4B 5B 6B cB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B","4":"nB"},H:{"2":"SC"},I:{"1":"H UC VC nB XC YC","2":"eB I TC WC"},J:{"1":"D A"},K:{"1":"C T cB mB dB","2":"A B"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Session history management"};

},{}],372:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB 9B","129":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC","257":"UC VC"},J:{"1":"A","16":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"516":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"16":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:4,C:"HTML Media Capture"};

},{}],373:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E","260":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","132":"eB qB rB","260":"I g J D E F A B C K L G M N O h i"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g","260":"J D E F A B C K L G M N O h i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","132":"I uB jB","260":"g J vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","132":"F B 3B 4B 5B 6B","260":"C cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"jB","260":"8B nB 9B AC"},H:{"132":"SC"},I:{"1":"H XC YC","132":"TC","260":"eB I UC VC WC nB"},J:{"260":"D A"},K:{"1":"T","132":"A","260":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"260":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"HTML5 semantic elements"};

},{}],374:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"HTTP Live Streaming (HLS)"};

},{}],375:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"C K L G M N O","513":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB","513":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","513":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB","260":"F A yB kB"},F:{"1":"q r s t u v w x y z","2":"F B C G M N O h i j k l m n o p 3B 4B 5B 6B cB mB 7B dB","513":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","513":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","513":"T"},L:{"513":"H"},M:{"513":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I","513":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"513":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"HTTP/2 protocol"};

},{}],376:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"Y Z a b c d e S f H","2":"C K L G M N O","322":"P Q R U V","578":"W X"},C:{"1":"Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB qB rB","194":"VB WB XB YB ZB aB bB P Q R hB U V W X Y"},D:{"1":"Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB","322":"P Q R U V","578":"W X"},E:{"2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB zB","1090":"L G 0B 1B lB 2B"},F:{"1":"XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB","578":"WB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC","66":"PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"HTTP/3 protocol"};

},{}],377:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M qB rB","4":"N O h i j k l m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B"},H:{"2":"SC"},I:{"1":"eB I H UC VC WC nB XC YC","2":"TC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"sandbox attribute for iframes"};

},{}],378:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","66":"i j k l m n o"},E:{"2":"I g J E F A B C K L G uB jB vB wB yB kB cB dB zB 0B 1B lB 2B","130":"D xB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","130":"BC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"seamless attribute for iframes"};

},{}],379:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","8":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB","8":"eB I g J D E F A B C K L G M N O h i j k l m qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K","8":"L G M N O h"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB","8":"I g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B 3B 4B 5B 6B","8":"C cB mB 7B dB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB","8":"8B nB 9B"},H:{"2":"SC"},I:{"1":"H XC YC","8":"eB I TC UC VC WC nB"},J:{"1":"A","8":"D"},K:{"1":"T","2":"A B","8":"C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"srcdoc attribute for iframes"};

},{}],380:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","322":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w qB rB","194":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","322":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","322":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"322":"kC"},R:{"1":"lC"},S:{"194":"mC"}},B:5,C:"ImageCapture API"};

},{}],381:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","161":"B"},B:{"2":"P Q R U V W X Y Z a b c d e S f H","161":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A","161":"B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Input Method Editor API"};

},{}],382:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"naturalWidth & naturalHeight image properties"};

},{}],383:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O","194":"P Q R U V W X Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB","194":"XB YB ZB aB bB P Q R U V W X Y Z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB","194":"MB NB T OB PB QB RB SB TB UB VB WB XB YB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"jC","2":"I aC bC cC dC eC kB fC gC hC iC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Import maps"};

},{}],384:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","8":"A B"},B:{"1":"P","2":"Q R U V W X Y Z a b c d e S f H","8":"C K L G M N O"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r qB rB","8":"s t IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","72":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r Q R U V W X Y Z a b c d e S f H iB sB tB","66":"s t u v w","72":"x"},E:{"2":"I g uB jB vB","8":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB","2":"F B C G M QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","66":"N O h i j","72":"k"},G:{"2":"jB 8B nB 9B AC","8":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"8":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC","2":"hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"HTML Imports"};

},{}],385:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB","16":"qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"indeterminate checkbox"};

},{}],386:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"A B C K L G","36":"I g J D E F"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"A","8":"I g J D E F","33":"l","36":"B C K L G M N O h i j k"},E:{"1":"A B C K L G kB cB dB zB 1B lB 2B","8":"I g J D uB jB vB wB","260":"E F xB yB","516":"0B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B","8":"B C 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC RC lB","8":"jB 8B nB 9B AC BC","260":"E CC DC EC","516":"QC"},H:{"2":"SC"},I:{"1":"H XC YC","8":"eB I TC UC VC WC nB"},J:{"1":"A","8":"D"},K:{"1":"T","2":"A","8":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"IndexedDB"};

},{}],387:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","132":"6 7 8","260":"9 AB BB CB"},D:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","132":"AB BB CB DB","260":"EB FB GB HB IB JB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w 3B 4B 5B 6B cB mB 7B dB","132":"0 x y z","260":"1 2 3 4 5 6"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC","16":"FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I","260":"aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"260":"mC"}},B:4,C:"IndexedDB 2.0"};

},{}],388:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","4":"oB","132":"J D"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","36":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS inline-block"};

},{}],389:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"HTMLElement.innerText"};

},{}],390:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A oB","132":"B"},B:{"132":"C K L G M N O","260":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r qB rB","516":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"N O h i j k l m n o","2":"I g J D E F A B C K L G M","132":"0 1 2 p q r s t u v w x y z","260":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J vB wB","2":"I g uB jB","2052":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB","1025":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1025":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2052":"A B"},O:{"1025":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"260":"kC"},R:{"1":"lC"},S:{"516":"mC"}},B:1,C:"autocomplete attribute: on & off values"};

},{}],391:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F G M 3B 4B 5B 6B"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC","129":"KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"Color input type"};

},{}],392:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","132":"C"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB","1090":"FB GB HB IB","2052":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d","4100":"e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h","2052":"i j k l m"},E:{"2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB","4100":"G 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB","260":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB TC UC VC","514":"I WC nB"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2052":"mC"}},B:1,C:"Date and time input types"};

},{}],393:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","132":"TC UC VC"},J:{"1":"A","132":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Email, telephone & URL input types"};

},{}],394:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","2561":"A B","2692":"F"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2561":"C K L G M N O"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB","1537":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB rB","1796":"eB qB"},D:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L","1025":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB","1537":"G M N O h i j k l m n o p q r s t u v w"},E:{"1":"L G zB 0B 1B lB 2B","16":"I g J uB jB","1025":"D E F A B C wB xB yB kB cB","1537":"vB","4097":"K dB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","16":"F B C 3B 4B 5B 6B cB mB","260":"7B","1025":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB","1537":"G M N O h i j"},G:{"16":"jB 8B nB","1025":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","1537":"9B AC BC"},H:{"2":"SC"},I:{"16":"TC UC","1025":"H YC","1537":"eB I VC WC nB XC"},J:{"1025":"A","1537":"D"},K:{"1":"A B C cB mB dB","1025":"T"},L:{"1":"H"},M:{"1537":"S"},N:{"2561":"A B"},O:{"1537":"ZC"},P:{"1025":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1025":"kC"},R:{"1025":"lC"},S:{"1537":"mC"}},B:1,C:"input event"};

},{}],395:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","132":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I","16":"g J D E j k l m n","132":"F A B C K L G M N O h i"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","132":"J D E F A B wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"AC BC","132":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","514":"jB 8B nB 9B"},H:{"2":"SC"},I:{"2":"TC UC VC","260":"eB I WC nB","514":"H XC YC"},J:{"132":"A","260":"D"},K:{"2":"A B C cB mB dB","514":"T"},L:{"260":"H"},M:{"2":"S"},N:{"514":"A","1028":"B"},O:{"2":"ZC"},P:{"260":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"260":"kC"},R:{"260":"lC"},S:{"1":"mC"}},B:1,C:"accept attribute for file input"};

},{}],396:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Directory selection from file input"};

},{}],397:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B 4B 5B"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"130":"SC"},I:{"130":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"130":"A B C T cB mB dB"},L:{"132":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"130":"ZC"},P:{"130":"I","132":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"2":"mC"}},B:1,C:"Multiple file selection"};

},{}],398:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"f H iB","2":"pB eB I g J D E F A B C K L G M qB rB","4":"N O h i","194":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S"},D:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB","66":"IB JB KB fB LB gB MB NB T OB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","66":"5 6 7 8 9 AB BB CB DB EB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:1,C:"inputmode attribute"};

},{}],399:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB qB rB"},D:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"Minimum length attribute for input fields"};

},{}],400:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","129":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","129":"C K","1025":"L G M N O"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","513":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"388":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB TC UC VC","388":"I H WC nB XC YC"},J:{"2":"D","388":"A"},K:{"1":"A B C cB mB dB","388":"T"},L:{"388":"H"},M:{"641":"S"},N:{"388":"A B"},O:{"388":"ZC"},P:{"388":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"388":"kC"},R:{"388":"lC"},S:{"513":"mC"}},B:1,C:"Number input type"};

},{}],401:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g","388":"J D E F A vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB","388":"E 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB XC"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Pattern attribute for input fields"};

},{}],402:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","132":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB mB 7B dB","2":"F 3B 4B 5B 6B","132":"B cB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB H TC UC VC nB XC YC","4":"I WC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"input placeholder attribute"};

},{}],403:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H nB XC YC","4":"eB I TC UC VC WC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Range input type"};

},{}],404:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","129":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","129":"C K L G M N O"},C:{"2":"pB eB qB rB","129":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L j k l m n","129":"G M N O h i"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F 3B 4B 5B 6B","16":"B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"129":"SC"},I:{"1":"H XC YC","16":"TC UC","129":"eB I VC WC nB"},J:{"1":"D","129":"A"},K:{"1":"C T","2":"A","16":"B cB mB","129":"dB"},L:{"1":"H"},M:{"129":"S"},N:{"129":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"129":"mC"}},B:1,C:"Search input type"};

},{}],405:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","16":"F 3B 4B 5B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Selection controls for input & textarea"};

},{}],406:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Element.insertAdjacentElement() & Element.insertAdjacentText()"};

},{}],407:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","16":"oB","132":"J D E F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","16":"F 3B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Element.insertAdjacentHTML()"};

},{}],408:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:6,C:"Internationalization API"};

},{}],409:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC dC eC kB"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"IntersectionObserver V2"};

},{}],410:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O","2":"C K L","516":"G","1025":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB","194":"EB FB GB"},D:{"1":"KB fB LB gB MB NB T","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","516":"DB EB FB GB HB IB JB","1025":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","516":"0 1 2 3 4 5 6","1025":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","1025":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","1025":"T"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"516":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I","516":"aC bC"},Q:{"1025":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"IntersectionObserver"};

},{}],411:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N","130":"O"},C:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB qB rB"},D:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB dB"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Intl.PluralRules API"};

},{}],412:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","1537":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB","932":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB qB rB","2308":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I g J D E F A B C K L G M N O h i j","545":"0 1 2 3 4 5 6 7 k l m n o p q r s t u v w x y z","1537":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J uB jB vB","516":"B C K L G cB dB zB 0B 1B lB 2B","548":"F A yB kB","676":"D E wB xB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","513":"w","545":"G M N O h i j k l m n o p q r s t u","1537":"0 1 2 3 4 5 6 7 8 9 v x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB 9B AC","516":"PC QC RC lB","548":"DC EC FC GC HC IC JC KC LC MC NC OC","676":"E BC CC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","545":"XC YC","1537":"H"},J:{"2":"D","545":"A"},K:{"2":"A B C cB mB dB","1537":"T"},L:{"1537":"H"},M:{"2308":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"545":"I","1537":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"545":"kC"},R:{"1537":"lC"},S:{"932":"mC"}},B:5,C:"Intrinsic & Extrinsic Sizing"};

},{}],413:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","129":"g vB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"JPEG 2000 image format"};

},{}],414:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b","578":"c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a qB rB","322":"b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b","194":"c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB 3B 4B 5B 6B cB mB 7B dB","194":"aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"JPEG XL image format"};

},{}],415:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"JPEG XR image format"};

},{}],416:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB qB rB"},D:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Lookbehind in JS regular expressions"};

},{}],417:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D oB","129":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"JSON parsing"};

},{}],418:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G","132":"M N O"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB"},D:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB","132":"JB KB fB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB","132":"kB"},F:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","132":"6 7 8"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC","132":"GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC","132":"cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"132":"mC"}},B:5,C:"CSS justify-content: space-evenly"};

},{}],419:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B"},H:{"2":"SC"},I:{"1":"H XC YC","2":"TC UC VC","132":"eB I WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"High-quality kerning pairs & ligatures"};

},{}],420:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","16":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B","16":"C"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T dB","2":"A B cB mB","16":"C"},L:{"1":"H"},M:{"130":"S"},N:{"130":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"KeyboardEvent.charCode"};

},{}],421:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"4 5 6 7 8 9"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q 3B 4B 5B 6B cB mB 7B dB","194":"r s t u v w"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"194":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I","194":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"194":"lC"},S:{"1":"mC"}},B:5,C:"KeyboardEvent.code"};

},{}],422:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B G M 3B 4B 5B 6B cB mB 7B","16":"C"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T dB","2":"A B cB mB","16":"C"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"KeyboardEvent.getModifierState()"};

},{}],423:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","260":"F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k qB rB","132":"l m n o p q"},D:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B","16":"C"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"1":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T dB","2":"A B cB mB","16":"C"},L:{"1":"H"},M:{"1":"S"},N:{"260":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:5,C:"KeyboardEvent.key"};

},{}],424:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","16":"J uB jB","132":"I g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B","16":"C","132":"G M"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB","132":"9B AC BC"},H:{"2":"SC"},I:{"1":"H XC YC","16":"TC UC","132":"eB I VC WC nB"},J:{"132":"D A"},K:{"1":"T dB","2":"A B cB mB","16":"C"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"KeyboardEvent.location"};

},{}],425:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","16":"g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","16":"F 3B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB","16":"TC UC","132":"XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"132":"H"},M:{"132":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"2":"I","132":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:7,C:"KeyboardEvent.which"};

},{}],426:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"1":"B","2":"A"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Resource Hints: Lazyload"};

},{}],427:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","2052":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","194":"0 1 2 3 4 5 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O","322":"0 1 2 h i j k l m n o p q r s t u v w x y z","516":"3 4 5 6 7 8 9 AB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","1028":"A kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","322":"G M N O h i j k l m n o p","516":"q r s t u v w x"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC","1028":"FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","516":"I"},Q:{"1":"kC"},R:{"516":"lC"},S:{"1":"mC"}},B:6,C:"let"};

},{}],428:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"JC KC LC MC NC OC PC QC RC lB","130":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC"},H:{"130":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D","130":"A"},K:{"1":"T","130":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"130":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"PNG favicons"};

},{}],429:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P","1537":"Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB qB rB","260":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","513":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","1537":"Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"6 7 8 9 AB BB CB DB EB FB","2":"0 1 2 3 4 5 F B C G M N O h i j k l m n o p q r s t u v w x y z GB HB IB JB KB LB MB NB T OB PB 3B 4B 5B 6B cB mB 7B dB","1537":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"JC KC LC MC NC OC PC QC RC lB","130":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC"},H:{"130":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","130":"A"},K:{"2":"T","130":"A B C cB mB dB"},L:{"1537":"H"},M:{"2":"S"},N:{"130":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC","1537":"hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"513":"mC"}},B:1,C:"SVG favicons"};

},{}],430:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E oB","132":"F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB","260":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"16":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"16":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"16":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"16":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Resource Hints: dns-prefetch"};

},{}],431:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"16":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:1,C:"Resource Hints: modulepreload"};

},{}],432:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L","260":"G M N O"},C:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB","2":"0 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","129":"1"},D:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"16":"S"},N:{"2":"A B"},O:{"16":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Resource Hints: preconnect"};

},{}],433:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB","194":"L G zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC","194":"OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"I H XC YC","2":"eB TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Resource Hints: prefetch"};

},{}],434:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M","1028":"N O"},C:{"1":"W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB qB rB","132":"IB","578":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V"},D:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","322":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC","322":"HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Resource Hints: preload"};

},{}],435:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"1":"B","2":"A"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Resource Hints: prerender"};

},{}],436:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB qB rB","132":"YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB","66":"YB ZB"},E:{"1":"2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB","322":"L G zB 0B 1B lB"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB","66":"MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC","322":"OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"132":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I aC bC cC dC eC kB fC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"Lazy loading via attribute for images & iframes"};

},{}],437:[function(require,module,exports){
module.exports={A:{A:{"1":"B","16":"oB","132":"J D E F A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","132":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F B C 3B 4B 5B 6B cB mB 7B","132":"dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"E jB 8B nB 9B AC BC CC DC EC"},H:{"132":"SC"},I:{"1":"H XC YC","132":"eB I TC UC VC WC nB"},J:{"132":"D A"},K:{"1":"T","16":"A B C cB mB","132":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","132":"A"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","132":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"4":"mC"}},B:6,C:"localeCompare()"};

},{}],438:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T OB PB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"194":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Magnetometer"};

},{}],439:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","36":"F A B"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","36":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB","36":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","36":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","36":"g J D vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B 3B 4B 5B 6B cB","36":"C G M N O h i mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB","36":"8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H","2":"TC","36":"eB I UC VC WC nB XC YC"},J:{"36":"D A"},K:{"1":"T","2":"A B","36":"C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"36":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","36":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"matches() DOM method"};

},{}],440:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"matchMedia"};

},{}],441:[function(require,module,exports){
module.exports={A:{A:{"2":"F A B oB","8":"J D E"},B:{"2":"C K L G M N O","8":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","129":"pB eB qB rB"},D:{"1":"m","8":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H","584":"iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","260":"I g J D E F uB jB vB wB xB yB"},F:{"2":"F","4":"B C 3B 4B 5B 6B cB mB 7B dB","8":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB"},H:{"8":"SC"},I:{"8":"eB I H TC UC VC WC nB XC YC"},J:{"1":"A","8":"D"},K:{"8":"A B C T cB mB dB"},L:{"8":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"4":"ZC"},P:{"8":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"8":"kC"},R:{"8":"lC"},S:{"1":"mC"}},B:2,C:"MathML"};

},{}],442:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","16":"oB","900":"J D E F"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","1025":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","900":"pB eB qB rB","1025":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"g uB","900":"I jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F","132":"B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"8B nB 9B AC BC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB","2052":"E CC"},H:{"132":"SC"},I:{"1":"eB I VC WC nB XC YC","16":"TC UC","4097":"H"},J:{"1":"D A"},K:{"132":"A B C cB mB dB","4097":"T"},L:{"4097":"H"},M:{"4097":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"4097":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1025":"mC"}},B:1,C:"maxlength attribute for input and textarea elements"};

},{}],443:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O","16":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v","2":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H","16":"iB sB tB"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"B C G M N O h i j k l m 4B 5B 6B cB mB 7B dB","2":"0 1 2 3 4 5 6 7 8 9 F n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"16":"SC"},I:{"1":"I H WC nB XC YC","16":"eB TC UC VC"},J:{"16":"D A"},K:{"1":"C T dB","16":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"16":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Media attribute"};

},{}],444:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","132":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v qB rB","132":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I g J D E F A B C K L G M N","132":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g uB jB vB","132":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB 9B AC BC","132":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","132":"H XC YC"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","132":"T"},L:{"132":"H"},M:{"132":"S"},N:{"132":"A B"},O:{"2":"ZC"},P:{"2":"I aC","132":"bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"132":"mC"}},B:2,C:"Media Fragments"};

},{}],445:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB","16":"L G zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Media Session API"};

},{}],446:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","260":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","324":"DB EB FB GB HB IB JB KB fB LB gB"},E:{"2":"I g J D E F A uB jB vB wB xB yB kB","132":"B C K L G cB dB zB 0B 1B lB 2B"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB","324":"0 1 2 3 4 5 6 7 8 9 y z"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"260":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I","132":"aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"260":"mC"}},B:5,C:"Media Capture from DOM Elements API"};

},{}],447:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"9 AB"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB","322":"K L dB zB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v 3B 4B 5B 6B cB mB 7B dB","194":"w x"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC","578":"JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:5,C:"MediaRecorder API"};

},{}],448:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB","66":"0 1 2 3 n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M","33":"l m n o p q r s","66":"N O h i j k"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC","260":"LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB XC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Media Source Extensions"};

},{}],449:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D qB rB","132":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V","450":"W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","66":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"9 F B C G M N O h i j k l m n o p q r s t u v w AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","66":"0 1 2 3 4 5 6 7 8 x y z"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"450":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Context menu item (menuitem element)"};

},{}],450:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","132":"WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","258":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB"},E:{"1":"G 1B lB 2B","2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB 0B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"513":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I","16":"aC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"theme-color Meta Tag"};

},{}],451:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F 3B 4B 5B 6B"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"meter element"};

},{}],452:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Web MIDI API"};

},{}],453:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","8":"J oB","129":"D","257":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"CSS min/max-width/height"};

},{}],454:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","132":"I g J D E F A B C K L G M N O h i j qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","2":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"MP3 audio format"};

},{}],455:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","386":"j k"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)"};

},{}],456:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i qB rB","4":"j k l m n o p q r s t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","4":"eB I TC UC WC nB","132":"VC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"260":"S"},N:{"1":"A B"},O:{"4":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"MPEG-4/H.264 video format"};

},{}],457:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 Multiple backgrounds"};

},{}],458:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O","516":"P Q R U V W X Y Z a b c d e S f H"},C:{"132":"EB FB GB HB IB JB KB fB LB gB MB NB T","164":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB","516":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c","1028":"d e S f H iB"},D:{"420":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB","516":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","132":"F yB","164":"D E xB","420":"I g J uB jB vB wB"},F:{"1":"C cB mB 7B dB","2":"F B 3B 4B 5B 6B","420":"G M N O h i j k l m n o p q r s t u v w x y","516":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"DC EC","164":"E BC CC","420":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"420":"eB I TC UC VC WC nB XC YC","516":"H"},J:{"420":"D A"},K:{"1":"C cB mB dB","2":"A B","516":"T"},L:{"516":"H"},M:{"516":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","420":"I"},Q:{"132":"kC"},R:{"132":"lC"},S:{"164":"mC"}},B:4,C:"CSS3 Multiple column layout"};

},{}],459:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","260":"F A B"},B:{"132":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N O"},C:{"2":"pB eB I g qB rB","260":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"16":"I g J D E F A B C K L","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"16":"uB jB","132":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"C 7B dB","2":"F 3B 4B 5B 6B","16":"B cB mB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"16":"jB 8B","132":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"16":"TC UC","132":"eB I H VC WC nB XC YC"},J:{"132":"D A"},K:{"1":"C dB","2":"A","16":"B cB mB","132":"T"},L:{"132":"H"},M:{"260":"S"},N:{"260":"A B"},O:{"132":"ZC"},P:{"132":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"260":"mC"}},B:5,C:"Mutation events"};

},{}],460:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E oB","8":"F A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N","33":"O h i j k l m n o"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB TC UC VC","8":"I WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","8":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Mutation Observer"};

},{}],461:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"oB","8":"J D"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","4":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Web Storage - name/value pairs"};

},{}],462:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","194":"P Q R U V W","260":"X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB","194":"XB YB ZB aB bB P Q R U V W","260":"X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B","4":"lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB","194":"MB NB T OB PB QB RB SB TB UB","260":"VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC","4":"lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"File System Access API"};

},{}],463:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g","33":"J D E F A B C"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"I H WC nB XC YC","2":"eB TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Navigation Timing API"};

},{}],464:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"16":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"16":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"16":"kC"},R:{"16":"lC"},S:{"1":"mC"}},B:2,C:"Navigator Language API"};

},{}],465:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","1028":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB","1028":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","1028":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"TC XC YC","132":"eB I UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","132":"I","516":"aC bC cC"},Q:{"1":"kC"},R:{"516":"lC"},S:{"260":"mC"}},B:7,C:"Network Information API"};

},{}],466:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I","36":"g J D E F A B C K L G M N O h i j"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","36":"H XC YC"},J:{"1":"A","2":"D"},K:{"2":"A B C cB mB dB","36":"T"},L:{"513":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"36":"I","258":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"258":"lC"},S:{"1":"mC"}},B:1,C:"Web Notifications"};

},{}],467:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","16":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:6,C:"Object.entries"};

},{}],468:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G","260":"M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","132":"E F xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F G M N O 3B 4B 5B","33":"B C 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","132":"E CC DC EC"},H:{"33":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB XC"},J:{"2":"D A"},K:{"1":"T","2":"A","33":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 object-fit/object-position"};

},{}],469:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"l m n o p q r s t u v w x y","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I","2":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"Object.observe data binding"};

},{}],470:[function(require,module,exports){
module.exports={A:{A:{"8":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","8":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","8":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"8":"SC"},I:{"1":"H","8":"eB I TC UC VC WC nB XC YC"},J:{"8":"D A"},K:{"1":"T","8":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","8":"I aC"},Q:{"1":"kC"},R:{"8":"lC"},S:{"1":"mC"}},B:6,C:"Object.values method"};

},{}],471:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O","2":"C P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","130":"A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Object RTC (ORTC) API for WebRTC"};

},{}],472:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"F oB","8":"J D E"},B:{"1":"C K L G M N O P Q R U V","2":"W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U qB rB","2":"V W X Y Z a b c d e S f H iB","4":"eB","8":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V","2":"W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 6B cB mB 7B dB","2":"F WB XB YB ZB aB bB P Q R hB 3B","8":"4B 5B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I TC UC VC WC nB XC YC","2":"H"},J:{"1":"D A"},K:{"1":"B C cB mB dB","2":"A T"},L:{"2":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"Offline web applications"};

},{}],473:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","322":"KB fB LB gB MB NB T OB PB QB RB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","322":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:1,C:"OffscreenCanvas"};

},{}],474:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB","132":"G 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"A","2":"D"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Ogg Vorbis audio format"};

},{}],475:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","8":"F A B"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","8":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:6,C:"Ogg/Theora video format"};

},{}],476:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G","16":"M N O h"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","16":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B","16":"C"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Reversed attribute of ordered lists"};

},{}],477:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB qB rB"},D:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"\"once\" event listener option"};

},{}],478:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D oB","260":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB","516":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B","4":"dB"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"A","132":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Online/offline status"};

},{}],479:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u"},E:{"2":"I g J D E F A uB jB vB wB xB yB kB","132":"B C K L G cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC","132":"HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Opus"};

},{}],480:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T OB PB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Orientation Sensor"};

},{}],481:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","260":"E","388":"F A B"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","388":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B","129":"dB","260":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"C T dB","260":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"388":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS outline properties"};

},{}],482:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:6,C:"String.prototype.padStart(), String.prototype.padEnd()"};

},{}],483:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"PageTransitionEvent"};

},{}],484:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F qB rB","33":"A B C K L G M N"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K","33":"L G M N O h i j k l m n o p q r s t u"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B C 3B 4B 5B 6B cB mB 7B","33":"G M N O h"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB","33":"XC YC"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","33":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Page Visibility"};

},{}],485:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"Passive event listeners"};

},{}],486:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","16":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f qB rB","16":"H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H","16":"iB sB tB"},E:{"1":"C K dB","2":"I g J D E F A B uB jB vB wB xB yB kB cB","16":"L G zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB 3B 4B 5B 6B cB mB 7B dB","16":"FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","16":"H"},J:{"2":"D","16":"A"},K:{"2":"A B C cB mB dB","16":"T"},L:{"16":"H"},M:{"16":"S"},N:{"2":"A","16":"B"},O:{"16":"ZC"},P:{"2":"I aC bC","16":"cC dC eC kB fC gC hC iC jC"},Q:{"16":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:1,C:"Password Rules"};

},{}],487:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K","132":"L G M N O"},C:{"1":"AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB","132":"0 1 2 3 4 5 6 7 8 9 t u v w x y z"},D:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x","132":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","132":"E F xB"},F:{"1":"HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","16":"E","132":"CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"1":"kB fC gC hC iC jC","132":"I aC bC cC dC eC"},Q:{"132":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:1,C:"Path2D"};

},{}],488:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K","322":"L","8196":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB qB rB","4162":"HB IB JB KB fB LB gB MB NB T OB","16452":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB","194":"FB GB HB IB JB KB","1090":"fB LB","8196":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","514":"A B kB","8196":"C cB"},F:{"1":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"2 3 4 5 6 7 8 9","8196":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC","514":"FC GC HC","8196":"IC JC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"2049":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I","8196":"aC bC cC dC eC kB fC"},Q:{"8196":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Payment Request API"};

},{}],489:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","16":"C K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"16":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Built-in PDF viewer"};

},{}],490:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:7,C:"Permissions API"};

},{}],491:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","258":"P Q R U V W","322":"X Y","388":"Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB qB rB","258":"XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","258":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W","322":"X Y","388":"Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B uB jB vB wB xB yB kB","258":"C K L G cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","258":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB","322":"VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC","258":"IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","258":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","258":"T"},L:{"388":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC","258":"dC eC kB fC gC hC iC jC"},Q:{"258":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Permissions Policy"};

},{}],492:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB qB rB","132":"VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","1090":"QB","1412":"UB","1668":"RB SB TB"},D:{"1":"TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB","2114":"SB"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","4100":"A B C K kB cB dB"},F:{"1":"WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y 3B 4B 5B 6B cB mB 7B dB","8196":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC","4100":"DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"16388":"H"},M:{"16388":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Picture-in-Picture"};

},{}],493:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v qB rB","578":"w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y","194":"z"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB","322":"m"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Picture element"};

},{}],494:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"2":"pB","194":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"194":"mC"}},B:1,C:"Ping attribute"};

},{}],495:[function(require,module,exports){
module.exports={A:{A:{"1":"D E F A B","2":"oB","8":"J"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"PNG alpha transparency"};

},{}],496:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"CSS pointer-events (for HTML)"};

},{}],497:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F oB","164":"A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB","8":"0 1 2 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","328":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB"},D:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j","8":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB","584":"EB FB GB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J uB jB vB","8":"D E F A B C wB xB yB kB cB","1096":"dB"},F:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","8":"0 G M N O h i j k l m n o p q r s t u v w x y z","584":"1 2 3"},G:{"1":"MC NC OC PC QC RC lB","8":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC","6148":"LC"},H:{"2":"SC"},I:{"1":"H","8":"eB I TC UC VC WC nB XC YC"},J:{"8":"D A"},K:{"1":"T","2":"A","8":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","36":"A"},O:{"8":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"aC","8":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"328":"mC"}},B:2,C:"Pointer events"};

},{}],498:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C"},C:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K qB rB","33":"0 1 2 L G M N O h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G","33":"k l m n o p q r s t u v w x y","66":"M N O h i j"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j k l"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:2,C:"Pointer Lock API"};

},{}],499:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V","322":"b c d e S f H","450":"W X Y Z a"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB","194":"YB ZB aB bB P Q R U V","322":"X Y Z a b c d e S f H iB sB tB","450":"W"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB","194":"MB NB T OB PB QB RB SB TB UB VB","322":"WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"450":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Portals"};

},{}],500:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB qB rB"},D:{"1":"ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"gC hC iC jC","2":"I aC bC cC dC eC kB fC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"prefers-color-scheme media query"};

},{}],501:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB qB rB"},D:{"1":"XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC dC eC kB"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"prefers-reduced-motion media query"};

},{}],502:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB"},F:{"1":"MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC dC eC kB"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Private class fields"};

},{}],503:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"V W X Y Z a b c d e S f H","2":"C K L G M N O P Q R U"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB"},F:{"1":"TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Public class fields"};

},{}],504:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F 3B 4B 5B 6B"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC","132":"BC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"progress element"};

},{}],505:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N"},C:{"1":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB qB rB"},D:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Promise.prototype.finally"};

},{}],506:[function(require,module,exports){
module.exports={A:{A:{"8":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","4":"p q","8":"pB eB I g J D E F A B C K L G M N O h i j k l m n o qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"u","8":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","8":"I g J D uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","4":"h","8":"F B C G M N O 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB 9B AC BC"},H:{"8":"SC"},I:{"1":"H YC","8":"eB I TC UC VC WC nB XC"},J:{"8":"D A"},K:{"1":"T","8":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Promises"};

},{}],507:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:4,C:"Proximity API"};

},{}],508:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O AB","66":"h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB","66":"G M N O h i j k l m"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:6,C:"Proxy object"};

},{}],509:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB qB rB","4":"TB UB VB WB XB","132":"SB"},D:{"1":"VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB zB","260":"L"},F:{"1":"LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC dC eC kB"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Public class fields"};

},{}],510:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB","2":"F B C G M N O h PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","4":"l","16":"i j k m"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB","2":"fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"HTTP Public Key Pinning"};

},{}],511:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O","2":"C K L G M","257":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","257":"6 8 9 AB BB CB DB FB GB HB IB JB KB fB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","1281":"7 EB LB"},D:{"2":"0 1 2 3 4 5 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","257":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","388":"6 7 8 9 AB BB"},E:{"2":"I g J D E F uB jB vB wB xB","514":"A B C K L G yB kB cB dB zB 0B 1B lB","2114":"2B"},F:{"2":"F B C G M N O h i j k l m n o p q r s t u v w x y 3B 4B 5B 6B cB mB 7B dB","16":"0 1 2 3 z","257":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"257":"mC"}},B:5,C:"Push API"};

},{}],512:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"oB","8":"J D","132":"E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","8":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","8":"F 3B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"querySelector/querySelectorAll"};

},{}],513:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","16":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L G M N O h i j k l m n"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F 3B","132":"B C 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B AC"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","132":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"257":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"readonly attribute of input and textarea elements"};

},{}],514:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"P Q R U","132":"C K L G M N O","513":"V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB","513":"Y Z a b c d e S f H iB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V","2":"I g J D E F A B C K L G M N O h i","260":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB","513":"W X Y Z a b c d e S f H iB sB tB"},E:{"1":"C cB dB","2":"I g J D uB jB vB wB","132":"E F A B xB yB kB","1025":"K L G zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","513":"WB XB YB ZB aB bB P Q R hB"},G:{"1":"JC KC LC MC","2":"jB 8B nB 9B AC BC","132":"E CC DC EC FC GC HC IC","1025":"NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"513":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Referrer Policy"};

},{}],515:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","129":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"2":"I g J D E F A B C","129":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B 3B 4B 5B 6B cB mB","129":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D","129":"A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"Custom protocol handling"};

},{}],516:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:1,C:"rel=noopener"};

},{}],517:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","132":"B"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L G"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Link type \"noreferrer\""};

},{}],518:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M","132":"N"},C:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r qB rB"},D:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB","132":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E uB jB vB wB xB"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"132":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I","132":"aC bC cC dC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"relList (DOMTokenList)"};

},{}],519:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E oB","132":"F A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E 8B nB AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB","260":"9B"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"rem (root em) units"};

},{}],520:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","33":"B C K L G M N O h i j k","164":"I g J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F","33":"k l","164":"O h i j","420":"A B C K L G M N"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","33":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","33":"AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"requestAnimationFrame"};

},{}],521:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB","194":"FB GB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB","322":"L G zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC","322":"OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"requestIdleCallback"};

},{}],522:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB qB rB"},D:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB","194":"GB HB IB JB KB fB LB gB MB NB"},E:{"1":"L G zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB dB","66":"K"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"3 4 5 6 7 8 9 AB BB CB DB"},G:{"1":"OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"eC kB fC gC hC iC jC","2":"I aC bC cC dC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Resize Observer"};

},{}],523:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB","194":"t u v w"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","260":"B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Resource Timing"};

},{}],524:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"6 7 8"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s 3B 4B 5B 6B cB mB 7B dB","194":"t u v"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Rest parameters"};

},{}],525:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L","516":"G M N O"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB","33":"0 1 2 3 4 5 k l m n o p q r s t u v w x y z"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k","33":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 O h i j k l m n o p q r s t u v w x y z"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","130":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"1":"mC"}},B:5,C:"WebRTC Peer-to-peer connections"};

},{}],526:[function(require,module,exports){
module.exports={A:{A:{"4":"J D E F A B oB"},B:{"4":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I"},E:{"4":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"I uB jB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","8":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"4":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB"},H:{"8":"SC"},I:{"4":"eB I H WC nB XC YC","8":"TC UC VC"},J:{"4":"A","8":"D"},K:{"4":"T","8":"A B C cB mB dB"},L:{"4":"H"},M:{"1":"S"},N:{"4":"A B"},O:{"4":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"4":"lC"},S:{"1":"mC"}},B:1,C:"Ruby annotation"};

},{}],527:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"J D oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t","2":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J vB","2":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","16":"wB","129":"I uB jB"},F:{"1":"F B C G M N O 3B 4B 5B 6B cB mB 7B dB","2":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"8B nB 9B AC BC","2":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","129":"jB"},H:{"1":"SC"},I:{"1":"eB I TC UC VC WC nB XC","2":"H YC"},J:{"1":"D A"},K:{"1":"A B C cB mB dB","2":"T"},L:{"2":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"display: run-in"};

},{}],528:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","388":"B"},B:{"1":"O P Q R U V W","2":"C K L G","129":"M N","513":"X Y Z a b c d e S f H"},C:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB qB rB"},D:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","513":"Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"G 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB cB","2052":"L","3076":"C K dB zB"},F:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB","2":"0 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","513":"UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC","2052":"JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"513":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"16":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:6,C:"'SameSite' cookie attribute"};

},{}],529:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","164":"B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","36":"C K L G M N O"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N qB rB","36":"0 1 2 3 4 5 O h i j k l m n o p q r s t u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A","36":"B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"Screen Orientation"};

},{}],530:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","132":"g"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"async attribute for external scripts"};

},{}],531:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","132":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","257":"I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"defer attribute for external scripts"};

},{}],532:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","132":"E F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","132":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x qB rB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB"},E:{"1":"2B","2":"I g uB jB","132":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B 5B 6B","16":"B cB mB","132":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z 7B dB"},G:{"16":"jB 8B nB","132":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","16":"TC UC","132":"eB I VC WC nB XC YC"},J:{"132":"D A"},K:{"1":"T","132":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"132":"ZC"},P:{"132":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:5,C:"scrollIntoView"};

},{}],533:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"Element.scrollIntoViewIfNeeded()"};

},{}],534:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","2":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB","2":"F B C WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"SDCH Accept-Encoding/Content-Encoding"};

},{}],535:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","16":"oB","260":"J D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"0 1 2 3 4 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","2180":"5 6 7 8 9 AB BB CB DB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","132":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"16":"nB","132":"jB 8B","516":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","16":"eB I TC UC VC WC","1025":"nB"},J:{"1":"A","16":"D"},K:{"1":"T","16":"A B C cB mB","132":"dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","16":"A"},O:{"1025":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2180":"mC"}},B:5,C:"Selection API"};

},{}],536:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB qB rB"},D:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","196":"LB gB MB NB","324":"T"},E:{"2":"I g J D E F A B C uB jB vB wB xB yB kB cB","516":"K L G dB zB 0B 1B lB 2B"},F:{"1":"EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Server Timing"};

},{}],537:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L","322":"G M"},C:{"1":"6 8 9 AB BB CB DB FB GB HB IB JB KB fB gB MB NB T OB PB QB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","194":"0 1 2 3 4 5 v w x y z","513":"7 EB LB RB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","4":"2 3 4 5 6"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A B uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o 3B 4B 5B 6B cB mB 7B dB","4":"p q r s t"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","4":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","4":"T"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"4":"lC"},S:{"2":"mC"}},B:4,C:"Service Workers"};

},{}],538:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O","2":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"1":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Efficient Script Yielding: setImmediate()"};

},{}],539:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","2":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"1":"eB I H UC VC WC nB XC YC","260":"TC"},J:{"1":"D A"},K:{"1":"T","16":"A B C cB mB dB"},L:{"1":"H"},M:{"16":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","16":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"SHA-2 SSL certificates"};

},{}],540:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P","2":"C K L G M N O Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","66":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","2":"I g J D E F A B C K L G M N O h i j k l m Q R U V W X Y Z a b c d e S f H iB sB tB","33":"n o p q r s t u v w"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB","2":"F B C QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB","33":"XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC","2":"hC iC jC","33":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:7,C:"Shadow DOM (deprecated V0 spec)"};

},{}],541:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB qB rB","322":"KB","578":"fB LB gB MB"},D:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB"},E:{"1":"A B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC","132":"FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I","4":"aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Shadow DOM (V1)"};

},{}],542:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b","2":"C K L G","194":"M N O","513":"c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB qB rB","194":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB","450":"XB YB ZB aB bB","513":"P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB","194":"LB gB MB NB T OB PB QB","513":"c d e S f H iB sB tB"},E:{"2":"I g J D E F A uB jB vB wB xB yB","194":"B C K L G kB cB dB zB 0B 1B","513":"lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","194":"9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC","194":"GC HC IC JC KC LC MC NC OC PC QC RC","513":"lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"513":"H"},M:{"513":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Shared Array Buffer"};

},{}],543:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"g J vB","2":"I D E F A B C K L G uB jB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B 4B 5B"},G:{"1":"9B AC","2":"E jB 8B nB BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C cB mB dB","2":"T","16":"A"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I","2":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"Shared Web Workers"};

},{}],544:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J oB","132":"D E"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB"},H:{"1":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Server Name Indication"};

},{}],545:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F A oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","2":"pB eB I g J D E F A B C DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","2":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"E F A B C yB kB cB","2":"I g J D uB jB vB wB xB","129":"K L G dB zB 0B 1B lB 2B"},F:{"1":"0 1 4 6 G M N O h i j k l m n o p q r s t u v w x y z dB","2":"2 3 5 7 8 9 F B C AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B"},G:{"1":"E CC DC EC FC GC HC IC JC","2":"jB 8B nB 9B AC BC","257":"KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I WC nB XC YC","2":"H TC UC VC"},J:{"2":"D A"},K:{"1":"dB","2":"A B C T cB mB"},L:{"2":"H"},M:{"2":"S"},N:{"1":"B","2":"A"},O:{"2":"ZC"},P:{"1":"I","2":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"16":"lC"},S:{"1":"mC"}},B:7,C:"SPDY protocol"};

},{}],546:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","1026":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j qB rB","322":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m","164":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L uB jB vB wB xB yB kB cB dB zB","2084":"G 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o 3B 4B 5B 6B cB mB 7B dB","1026":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC","2084":"QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"164":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"322":"mC"}},B:7,C:"Speech Recognition API"};

},{}],547:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O","2":"C K","257":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s qB rB","194":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u","257":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB","2":"F B C G M N O h i j k l m n o 3B 4B 5B 6B cB mB 7B dB","257":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:7,C:"Speech Synthesis API"};

},{}],548:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"4":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"4":"SC"},I:{"4":"eB I H TC UC VC WC nB XC YC"},J:{"1":"A","4":"D"},K:{"4":"A B C T cB mB dB"},L:{"4":"H"},M:{"4":"S"},N:{"4":"A B"},O:{"4":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"4":"lC"},S:{"2":"mC"}},B:1,C:"Spellcheck attribute"};

},{}],549:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C uB jB vB wB xB yB kB cB dB","2":"K L G zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC","2":"LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:7,C:"Web SQL Database"};

},{}],550:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","260":"C","514":"K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t qB rB","194":"u v w x y z"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v","260":"w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB wB","260":"E xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i 3B 4B 5B 6B cB mB 7B dB","260":"j k l m"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","260":"E CC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Srcset and sizes attributes"};

},{}],551:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M qB rB","129":"0 1 2 3 y z","420":"N O h i j k l m n o p q r s t u v w x"},D:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i","420":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B G M N 3B 4B 5B 6B cB mB 7B","420":"0 1 C O h i j k l m n o p q r s t u v w x y z dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC","513":"OC PC QC RC lB","1537":"HC IC JC KC LC MC NC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","420":"A"},K:{"1":"T","2":"A B cB mB","420":"C dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","420":"I aC"},Q:{"1":"kC"},R:{"420":"lC"},S:{"2":"mC"}},B:4,C:"getUserMedia/Stream API"};

},{}],552:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","130":"B"},B:{"1":"a b c d e S f H","16":"C K","260":"L G","1028":"P Q R U V W X Y Z","5124":"M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB qB rB","6148":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","6722":"JB KB fB LB gB MB NB T"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB","260":"EB FB GB HB IB JB KB","1028":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z"},E:{"2":"I g J D E F uB jB vB wB xB yB","1028":"G 0B 1B lB 2B","3076":"A B C K L kB cB dB zB"},F:{"1":"ZB aB bB P Q R hB","2":"0 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","260":"1 2 3 4 5 6 7","1028":"8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC","16":"FC","1028":"GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"6148":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"jC","2":"I aC bC","1028":"cC dC eC kB fC gC hC iC"},Q:{"1028":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"Streams"};

},{}],553:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A oB","129":"B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Strict Transport Security"};

},{}],554:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB","2":"pB eB I g J D E F A B C K L G M N O h i gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","322":"HB IB JB KB fB LB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","194":"i j k l m n o p q r s t u v w x y"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:7,C:"Scoped CSS"};

},{}],555:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC","194":"HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Subresource Integrity"};

},{}],556:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","516":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","260":"I g J D E F A B C K L G M N O h i j k l"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I"},E:{"1":"g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB","132":"I jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"jB 8B"},H:{"260":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"T","260":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"SVG in CSS backgrounds"};

},{}],557:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I","4":"g J D"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B"},H:{"1":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"SVG filters"};

},{}],558:[function(require,module,exports){
module.exports={A:{A:{"2":"F A B oB","8":"J D E"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","2":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","130":"0 1 2 3 4 5 6 7 8 9 AB BB CB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB"},F:{"1":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB","2":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","130":"n o p q r s t u v w x y"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"258":"SC"},I:{"1":"eB I WC nB XC YC","2":"H TC UC VC"},J:{"1":"D A"},K:{"1":"A B C cB mB dB","2":"T"},L:{"130":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I","130":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"130":"lC"},S:{"2":"mC"}},B:2,C:"SVG fonts"};

},{}],559:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","260":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x","132":"0 1 2 3 4 5 6 7 8 9 y z AB BB"},E:{"1":"C K L G cB dB zB 0B 1B lB 2B","2":"I g J D F A B uB jB vB wB yB kB","132":"E xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"G M N O h i j k","4":"B C 4B 5B 6B cB mB 7B","16":"F 3B","132":"l m n o p q r s t u v w x y"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC DC EC FC GC HC","132":"E CC"},H:{"1":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D","132":"A"},K:{"1":"T dB","4":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","132":"I"},Q:{"1":"kC"},R:{"132":"lC"},S:{"1":"mC"}},B:4,C:"SVG fragment identifiers"};

},{}],560:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","388":"F A B"},B:{"4":"P Q R U V W X Y Z a b c d e S f H","260":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB","4":"eB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"uB jB","4":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"4":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"4":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","4":"H XC YC"},J:{"1":"A","2":"D"},K:{"4":"A B C T cB mB dB"},L:{"4":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"4":"lC"},S:{"1":"mC"}},B:2,C:"SVG effects for HTML"};

},{}],561:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E","129":"F A B"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","129":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","8":"I g J"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","8":"I g uB jB","129":"J D E vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"B 6B cB mB","8":"F 3B 4B 5B"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","8":"jB 8B nB","129":"E 9B AC BC CC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"TC UC VC","129":"eB I WC nB"},J:{"1":"A","129":"D"},K:{"1":"C T dB","8":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"129":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Inline SVG in HTML5"};

},{}],562:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l m n o p"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"uB","4":"jB","132":"I g J D E vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"E jB 8B nB 9B AC BC CC"},H:{"1":"SC"},I:{"1":"H XC YC","2":"TC UC VC","132":"eB I WC nB"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"SVG in HTML img element"};

},{}],563:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","8":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","8":"uB jB","132":"I g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"jB 8B nB 9B"},H:{"2":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"SVG SMIL animation"};

},{}],564:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E","772":"F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","513":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","4":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","4":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"H XC YC","2":"TC UC VC","132":"eB I WC nB"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"257":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"SVG (basic support)"};

},{}],565:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB","132":"UB VB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"16":"ZC"},P:{"1":"fC gC hC iC jC","2":"I aC bC cC dC eC kB"},Q:{"16":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:6,C:"Signed HTTP Exchanges (SXG)"};

},{}],566:[function(require,module,exports){
module.exports={A:{A:{"1":"D E F A B","16":"J oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"16":"pB eB qB rB","129":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"16":"I g uB jB","257":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"769":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"16":"eB I H TC UC VC WC nB XC YC"},J:{"16":"D A"},K:{"16":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"16":"A B"},O:{"16":"ZC"},P:{"16":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"16":"lC"},S:{"129":"mC"}},B:1,C:"tabindex global attribute"};

},{}],567:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"K L G M N O P Q R U V W X Y Z a b c d e S f H","16":"C"},C:{"1":"0 1 2 3 4 5 6 7 8 9 w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v qB rB"},D:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"A B K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB","129":"C"},F:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"DC EC FC GC HC IC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC","129":"JC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ES6 Template Literals (Template Strings)"};

},{}],568:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"G M N O P Q R U V W X Y Z a b c d e S f H","2":"C","388":"K L"},C:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n","132":"o p q r s t u v w"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D uB jB vB","388":"E xB","514":"wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","132":"G M N O h i j"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC","388":"E CC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"HTML templates"};

},{}],569:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"Temporal"};

},{}],570:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E A B oB","16":"F"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","16":"I g"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"B C"},E:{"2":"I J uB jB vB","16":"g D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B mB 7B dB","16":"cB"},G:{"2":"jB 8B nB 9B AC","16":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC WC nB XC YC","16":"VC"},J:{"2":"A","16":"D"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Test feature - updated"};

},{}],571:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","2052":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g qB rB","1028":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","1060":"J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m n","226":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB","2052":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D uB jB vB wB","772":"K L G dB zB 0B 1B lB 2B","804":"E F A B C yB kB cB","1316":"xB"},F:{"2":"F B C G M N O h i j k l m n o p q r s t u v w 3B 4B 5B 6B cB mB 7B dB","226":"0 1 2 3 4 5 x y z","2052":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"jB 8B nB 9B AC BC","292":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"2052":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2052":"ZC"},P:{"2":"I aC bC","2052":"cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"1":"lC"},S:{"1028":"mC"}},B:4,C:"text-decoration styling"};

},{}],572:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","164":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","322":"7"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m","164":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB","164":"D wB"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","164":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB","164":"H XC YC"},J:{"2":"D","164":"A"},K:{"2":"A B C cB mB dB","164":"T"},L:{"164":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"164":"ZC"},P:{"164":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"164":"kC"},R:{"164":"lC"},S:{"1":"mC"}},B:4,C:"text-emphasis styling"};

},{}],573:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B","2":"oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","8":"pB eB I g J qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","33":"F 3B 4B 5B 6B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"T dB","33":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 Text-overflow"};

},{}],574:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","33":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n p q r s t u v w x y z AB BB CB DB EB FB","258":"o"},E:{"2":"I g J D E F A B C K L G uB jB wB xB yB kB cB dB zB 0B 1B lB 2B","258":"vB"},F:{"1":"5 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 6 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"jB 8B nB","33":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"33":"S"},N:{"161":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS text-size-adjust"};

},{}],575:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L","33":"P Q R U V W X Y Z a b c d e S f H","161":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","161":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","450":"AB"},D:{"33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"33":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"33":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","36":"jB"},H:{"2":"SC"},I:{"2":"eB","33":"I H TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"2":"A B C cB mB dB","33":"T"},L:{"33":"H"},M:{"161":"S"},N:{"2":"A B"},O:{"33":"ZC"},P:{"33":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"33":"kC"},R:{"33":"lC"},S:{"161":"mC"}},B:7,C:"CSS text-stroke and text-fill"};

},{}],576:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB qB rB","130":"SB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"K L G dB zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"text-underline-offset"};

},{}],577:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Node.textContent"};

},{}],578:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O qB rB","132":"h"},D:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"TextEncoder & TextDecoder"};

},{}],579:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D oB","66":"E F A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB","2":"pB eB I g J D E F A B C K L G M N O h i j k qB rB","66":"l","129":"RB SB TB UB VB WB XB YB ZB aB","388":"bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V","2":"I g J D E F A B C K L G M N O h i j","1540":"W X Y Z a b c d e S f H iB sB tB"},E:{"1":"D E F A B C K xB yB kB cB dB","2":"I g J uB jB vB wB","513":"L G zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB dB","2":"F B C 3B 4B 5B 6B cB mB 7B","1540":"WB XB YB ZB aB bB P Q R hB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"129":"S"},N:{"1":"B","66":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"TLS 1.1"};

},{}],580:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D oB","66":"E F A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l qB rB","66":"m n o"},D:{"1":"0 1 2 3 4 5 6 7 8 9 r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F G 3B","66":"B C 4B 5B 6B cB mB 7B dB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"T dB","2":"A B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","66":"A"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"TLS 1.2"};

},{}],581:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB qB rB","132":"LB gB MB","450":"DB EB FB GB HB IB JB KB fB"},D:{"1":"TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB","706":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB","1028":"K dB zB"},F:{"1":"JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB","706":"GB HB IB"},G:{"1":"KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"kB fC gC hC iC jC","2":"I aC bC cC dC eC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:6,C:"TLS 1.3"};

},{}],582:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L","194":"P Q R U V W X Y Z a b c d e S f H","257":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f qB rB","16":"H iB"},D:{"2":"0 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","16":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB","194":"KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E uB jB vB wB xB","16":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB","16":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC","16":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"16":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","16":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","16":"T"},L:{"16":"H"},M:{"16":"S"},N:{"2":"A","16":"B"},O:{"16":"ZC"},P:{"16":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"16":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:6,C:"Token Binding"};

},{}],583:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","8":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","578":"C K L G M N O"},C:{"1":"O h i j k l m EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","4":"I g J D E F A B C K L G M N","194":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A","260":"B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:2,C:"Touch events"};

},{}],584:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E","129":"A B","161":"F"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","129":"C K L G M"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","33":"I g J D E F A B C K L G qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","33":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F 3B 4B","33":"B C G M N O h i j k 5B 6B cB mB 7B"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","33":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","33":"eB I TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"CSS3 2D Transforms"};

},{}],585:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F qB rB","33":"A B C K L G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B","33":"C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"2B","2":"uB jB","33":"I g J D E vB wB xB","257":"F A B C K L G yB kB cB dB zB 0B 1B lB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"G M N O h i j k"},G:{"33":"E jB 8B nB 9B AC BC CC","257":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"TC UC VC","33":"eB I WC nB XC YC"},J:{"33":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS3 3D Transforms"};

},{}],586:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"U V W X Y Z a b c d e S f H","2":"C K L G M N O P Q R"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"hC iC jC","2":"I aC bC cC dC eC kB fC gC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Trusted Types for DOM manipulation"};

},{}],587:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 4B 5B 6B cB mB 7B dB","2":"F 3B"},G:{"1":"E nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B"},H:{"2":"SC"},I:{"1":"eB I H UC VC WC nB XC YC","2":"TC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"TTF/OTF - TrueType and OpenType font support"};

},{}],588:[function(require,module,exports){
module.exports={A:{A:{"1":"B","2":"J D E F oB","132":"A"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","260":"vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B","260":"nB"},H:{"1":"SC"},I:{"1":"I H WC nB XC YC","2":"eB TC UC VC"},J:{"1":"A","2":"D"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Typed Arrays"};

},{}],589:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","513":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","322":"9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB"},D:{"2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","130":"0 1 2","513":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB dB"},F:{"2":"0 1 3 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","513":"2 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"322":"mC"}},B:6,C:"FIDO U2F API"};

},{}],590:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB qB rB"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC","16":"HC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:1,C:"unhandledrejection/rejectionhandled events"};

},{}],591:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Upgrade Insecure Requests"};

},{}],592:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"U V W X Y Z a b c d e S f H","2":"C K L G M N O","66":"P Q R"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB","66":"XB YB ZB aB bB P Q"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB 3B 4B 5B 6B cB mB 7B dB","66":"PB QB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"hC iC jC","2":"I aC bC cC dC eC kB fC gC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"URL Scroll-To-Text Fragment"};

},{}],593:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k","130":"l m n o p q r s t"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB wB","130":"D"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","130":"G M N O"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC","130":"BC"},H:{"2":"SC"},I:{"1":"H YC","2":"eB I TC UC VC WC nB","130":"XC"},J:{"2":"D","130":"A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"URL API"};

},{}],594:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","132":"0 1 2 3 4 5 r s t u v w x y z"},D:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB"},E:{"1":"B C K L G kB cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","2":"I"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"URLSearchParams"};

},{}],595:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","132":"g vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"1":"SC"},I:{"1":"eB I H WC nB XC YC","2":"TC UC VC"},J:{"1":"D A"},K:{"1":"C T mB dB","2":"A B cB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"ECMAScript 5 Strict Mode"};

},{}],596:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","33":"A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","33":"C K L G M N O"},C:{"1":"SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","33":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB qB rB"},D:{"1":"GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","33":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB"},E:{"33":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","33":"0 1 2 G M N O h i j k l m n o p q r s t u v w x y z"},G:{"33":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","33":"eB I TC UC VC WC nB XC YC"},J:{"33":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"33":"A B"},O:{"2":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","33":"I aC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"33":"mC"}},B:5,C:"CSS user-select: none"};

},{}],597:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"User Timing API"};

},{}],598:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"N O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB qB rB","4609":"MB NB T OB PB QB RB SB TB","4674":"gB","5698":"LB","7490":"FB GB HB IB JB","7746":"KB fB","8705":"UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB","4097":"PB","4290":"fB LB gB","6148":"MB NB T OB"},E:{"1":"G 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","4609":"B C cB dB","8193":"K L zB 0B"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB 3B 4B 5B 6B cB mB 7B dB","4097":"FB","6148":"BB CB DB EB"},G:{"1":"LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC","4097":"HC IC JC KC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"4097":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC","4097":"dC eC kB fC gC hC iC jC"},Q:{"4097":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"Variable fonts"};

},{}],599:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","2":"F B 3B 4B 5B 6B cB mB"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"1":"SC"},I:{"1":"H XC YC","16":"eB I TC UC VC WC nB"},J:{"16":"D A"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"SVG vector-effect: non-scaling-stroke"};

},{}],600:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A qB rB","33":"B C K L G"},D:{"1":"0 1 2 3 4 5 6 7 8 9 s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"Vibration API"};

},{}],601:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","260":"I g J D E F A B C K L G M N O h qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A vB wB xB yB kB","2":"uB jB","513":"B C K L G cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC","513":"HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","132":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Video element"};

},{}],602:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O","322":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","194":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","322":"7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g J uB jB vB"},F:{"2":"F B C G M N O h i j k l m n o p q r s t 3B 4B 5B 6B cB mB 7B dB","322":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"322":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:1,C:"Video Tracks"};

},{}],603:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"2B","2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Large, Small, and Dynamic viewport units"};

},{}],604:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","132":"F","260":"A B"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","260":"C K L G"},C:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h","260":"i j k l m n"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB","260":"J"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B","516":"BC","772":"AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"260":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"Viewport units: vw, vh, vmin, vmax"};

},{}],605:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","4":"E F A B"},B:{"4":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"4":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"uB jB","4":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F","4":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"4":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"4":"SC"},I:{"2":"eB I TC UC VC WC nB","4":"H XC YC"},J:{"2":"D A"},K:{"4":"A B C T cB mB dB"},L:{"4":"H"},M:{"4":"S"},N:{"4":"A B"},O:{"2":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"4":"lC"},S:{"4":"mC"}},B:2,C:"WAI-ARIA Accessibility features"};

},{}],606:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"b c d e S f H","2":"C K L G M N O","194":"P Q R U V W X Y Z a"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB","194":"UB VB WB XB YB ZB aB bB P Q R U V"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB 3B 4B 5B 6B cB mB 7B dB","194":"KB LB MB NB T OB PB QB RB SB TB UB VB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"iC jC","2":"I aC bC cC dC eC kB fC gC hC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:4,C:"Screen Wake Lock API"};

},{}],607:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"M N O P Q R U V W X Y Z a b c d e S f H","2":"C K L","578":"G"},C:{"1":"FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB","194":"9 AB BB CB DB","1025":"EB"},D:{"1":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB","322":"DB EB FB GB HB IB"},E:{"1":"B C K L G cB dB zB 0B 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB"},F:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","322":"0 1 2 3 4 5"},G:{"1":"HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"194":"mC"}},B:6,C:"WebAssembly"};

},{}],608:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 5B 6B cB mB 7B dB","2":"F 3B 4B"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","16":"A"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"Wav audio format"};

},{}],609:[function(require,module,exports){
module.exports={A:{A:{"1":"J D oB","2":"E F A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G jB vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"uB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","16":"F"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB"},H:{"1":"SC"},I:{"1":"eB I H VC WC nB XC YC","16":"TC UC"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"wbr (word break opportunity) element"};

},{}],610:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"V W X Y Z a b c d e S f H","2":"C K L G M N O","260":"P Q R U"},C:{"1":"R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u qB rB","260":"fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB","516":"9 AB BB CB DB EB FB GB HB IB JB KB","580":"0 1 2 3 4 5 6 7 8 v w x y z","2049":"YB ZB aB bB P Q"},D:{"1":"V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x","132":"0 y z","260":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U"},E:{"1":"G 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB kB","1090":"B C K cB dB","2049":"L zB 0B"},F:{"1":"UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k 3B 4B 5B 6B cB mB 7B dB","132":"l m n","260":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC","1090":"HC IC JC KC LC MC NC","2049":"OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"260":"ZC"},P:{"260":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"260":"kC"},R:{"260":"lC"},S:{"516":"mC"}},B:5,C:"Web Animations API"};

},{}],611:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M","130":"N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB X Y Z a b c d e S f H iB qB rB","578":"ZB aB bB P Q R hB U V W"},D:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC","260":"IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"2":"mC"}},B:5,C:"Add to home screen (A2HS)"};

},{}],612:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","1025":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","194":"7 8 9 AB BB CB DB EB","706":"FB GB HB","1025":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C G M N O h i j k l m n o p q r s t u v w x 3B 4B 5B 6B cB mB 7B dB","450":"0 1 y z","706":"2 3 4","1025":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC YC","1025":"H"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","1025":"T"},L:{"1025":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"bC cC dC eC kB fC gC hC iC jC","2":"I aC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Web Bluetooth"};

},{}],613:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O","66":"P Q R U V W X Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB","66":"bB P Q R U V W X Y Z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T 3B 4B 5B 6B cB mB 7B dB","66":"OB PB QB RB SB TB UB VB WB XB YB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Web Serial API"};

},{}],614:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P Q","516":"R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z","130":"O h i j k l m","1028":"a b c d e S f H iB sB tB"},E:{"1":"L G 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB","2049":"K dB zB"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC","2049":"KC LC MC NC OC"},H:{"2":"SC"},I:{"2":"eB I TC UC VC WC nB XC","258":"H YC"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","258":"T"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I","258":"aC bC cC"},Q:{"2":"kC"},R:{"16":"lC"},S:{"2":"mC"}},B:5,C:"Web Share API"};

},{}],615:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","2":"C","226":"K L G M N"},C:{"1":"LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB qB rB"},D:{"1":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB"},E:{"1":"K L G zB 0B 1B lB 2B","2":"I g J D E F A B C uB jB vB wB xB yB kB cB","322":"dB"},F:{"1":"GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC","578":"MC","2052":"PC","3076":"NC OC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:2,C:"Web Authentication API"};

},{}],616:[function(require,module,exports){
module.exports={A:{A:{"2":"oB","8":"J D E F A","129":"B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","129":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","129":"I g J D E F A B C K L G M N O h i j k l"},D:{"1":"0 1 2 3 4 5 6 7 8 9 v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D","129":"E F A B C K L G M N O h i j k l m n o p q r s t u"},E:{"1":"E F A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB","129":"J D vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B 3B 4B 5B 6B cB mB 7B","129":"C G M N O dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC BC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"1":"A","2":"D"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A","129":"B"},O:{"129":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"129":"mC"}},B:6,C:"WebGL - 3D Canvas graphics"};

},{}],617:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m qB rB","194":"4 5 6","450":"0 1 2 3 n o p q r s t u v w x y z","2242":"7 8 9 AB BB CB"},D:{"1":"IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z","578":"5 6 7 8 9 AB BB CB DB EB FB GB HB"},E:{"1":"G 1B lB 2B","2":"I g J D E F A uB jB vB wB xB yB","1090":"B C K L kB cB dB zB 0B"},F:{"1":"5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 3 4 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC","1090":"JC KC LC MC NC OC PC QC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"cC dC eC kB fC gC hC iC jC","2":"I aC bC"},Q:{"578":"kC"},R:{"2":"lC"},S:{"2242":"mC"}},B:6,C:"WebGL 2.0"};

},{}],618:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P","578":"Q R U V W X Y Z a b c d e","1602":"S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB qB rB","194":"NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P","578":"Q R U V W X Y Z a b c d e","1602":"S f H iB sB tB"},E:{"2":"I g J D E F A B uB jB vB wB xB yB kB","322":"C K L G cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB 3B 4B 5B 6B cB mB 7B dB","578":"WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"194":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"WebGPU"};

},{}],619:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"a b c d e S f H","2":"C K L G M N O","66":"P Q R U V W X Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB","66":"bB P Q R U V W X Y Z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"ZB aB bB P Q R hB","2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB 3B 4B 5B 6B cB mB 7B dB","66":"PB QB RB SB TB UB VB WB XB YB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"WebHID API"};

},{}],620:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","132":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"16":"I g J D E F A B C K L G","132":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"F B C 3B 4B 5B 6B cB mB 7B dB","132":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"CSS -webkit-user-drag property"};

},{}],621:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E oB","520":"F A B"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","8":"C K","388":"L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","132":"I g J D E F A B C K L G M N O h i j k l m n o p"},D:{"1":"0 1 2 3 4 5 6 7 8 9 n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g","132":"J D E F A B C K L G M N O h i j k l m"},E:{"2":"uB","8":"I g jB vB","520":"J D E F A B C wB xB yB kB cB","1028":"K dB zB","7172":"L","8196":"G 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B 5B","132":"B C G 6B cB mB 7B dB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC","1028":"KC LC MC NC OC","3076":"PC QC RC lB"},H:{"2":"SC"},I:{"1":"H","2":"TC UC","132":"eB I VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"8":"A B"},O:{"1":"ZC"},P:{"1":"aC bC cC dC eC kB fC gC hC iC jC","132":"I"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:6,C:"WebM video format"};

},{}],622:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O P a b c d e S f H","450":"Q R U V W X Y Z"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P a b c d e S f H iB sB tB","450":"Q R U V W X Y Z"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB 3B 4B 5B 6B cB mB 7B dB","450":"QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"257":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"Web NFC"};

},{}],623:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N"},C:{"1":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","8":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T"},D:{"1":"0 1 2 3 4 5 6 7 8 9 u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g","8":"J D E","132":"F A B C K L G M N O h i j k","260":"l m n o p q r s t"},E:{"2":"I g J D E F A B C K uB jB vB wB xB yB kB cB dB zB","516":"L G 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F 3B 4B 5B","8":"B 6B","132":"cB mB 7B","260":"C G M N O dB"},G:{"1":"PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC"},H:{"1":"SC"},I:{"1":"H nB XC YC","2":"eB TC UC VC","132":"I WC"},J:{"2":"D A"},K:{"1":"C T cB mB dB","2":"A","132":"B"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"8":"mC"}},B:7,C:"WebP image format"};

},{}],624:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB qB rB","132":"I g","292":"J D E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L","260":"G"},E:{"1":"D E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","132":"g vB","260":"J wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F 3B 4B 5B 6B","132":"B C cB mB 7B"},G:{"1":"E AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B","132":"nB 9B"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","129":"D"},K:{"1":"T dB","2":"A","132":"B C cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Web Sockets"};

},{}],625:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB","66":"GB HB IB JB KB fB LB"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"0 1 2 F B C G M N O h i j k l m n o p q r s t u v w x y z 3B 4B 5B 6B cB mB 7B dB","66":"3 4 5 6 7 8 9"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"1":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"1":"dC eC kB fC gC hC iC jC","2":"I aC bC cC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:7,C:"WebUSB"};

},{}],626:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L Q R U V W X Y Z a b c d e S f H","66":"P","257":"G M N O"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB qB rB","129":"HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","194":"GB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB Q R U V W X Y Z a b c d e S f H iB sB tB","66":"JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P"},E:{"2":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 F B C G M N O h i j k l m n o p q r s t u v w x y z QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","66":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C T cB mB dB"},L:{"2":"H"},M:{"2":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"513":"I","516":"aC bC cC dC eC kB fC gC hC iC jC"},Q:{"2":"kC"},R:{"66":"lC"},S:{"2":"mC"}},B:7,C:"WebVR API"};

},{}],627:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"2":"pB eB I g J D E F A B C K L G M N O h i j k l qB rB","66":"m n o p q r s","129":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N"},E:{"1":"J D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB I TC UC VC WC nB"},J:{"1":"A","2":"D"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"B","2":"A"},O:{"2":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"129":"mC"}},B:5,C:"WebVTT - Web Video Text Tracks"};

},{}],628:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","2":"oB","8":"J D E F"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","8":"pB eB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","8":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 6B cB mB 7B dB","2":"F 3B","8":"4B 5B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H TC XC YC","2":"eB I UC VC WC nB"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","8":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Web Workers"};

},{}],629:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"2":"C K L G M N O","132":"P Q R U V W X Y Z a b c d e S f H"},C:{"2":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB qB rB","322":"aB bB P Q R hB U V W X Y Z a b c d e S f H iB"},D:{"2":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T","66":"OB PB QB RB SB TB UB VB WB XB YB ZB aB bB","132":"P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"2":"I g J D E F A B C uB jB vB wB xB yB kB cB dB","578":"K L G zB 0B 1B lB 2B"},F:{"2":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB 3B 4B 5B 6B cB mB 7B dB","66":"EB FB GB HB IB JB KB LB MB NB T OB","132":"PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB"},G:{"2":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"2":"SC"},I:{"2":"eB I H TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"2":"A B C cB mB dB","132":"T"},L:{"132":"H"},M:{"322":"S"},N:{"2":"A B"},O:{"2":"ZC"},P:{"2":"I aC bC cC dC eC kB fC","132":"gC hC iC jC"},Q:{"2":"kC"},R:{"2":"lC"},S:{"2":"mC"}},B:5,C:"WebXR Device API"};

},{}],630:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"P Q R U V W X Y Z a b c d e S f H","2":"C K L G M N O"},C:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L G M N O h i j k l m n o p q qB rB","194":"r s t u v w x"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"A B C K L G yB kB cB dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k l 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS will-change property"};

},{}],631:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB rB","2":"pB eB qB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I"},E:{"1":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"I g uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB cB mB 7B dB","2":"F B 3B 4B 5B 6B"},G:{"1":"E 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB"},H:{"2":"SC"},I:{"1":"H XC YC","2":"eB TC UC VC WC nB","130":"I"},J:{"1":"D A"},K:{"1":"B C T cB mB dB","2":"A"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:2,C:"WOFF - Web Open Font Format"};

},{}],632:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F A B oB"},B:{"1":"L G M N O P Q R U V W X Y Z a b c d e S f H","2":"C K"},C:{"1":"1 2 3 4 5 6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"0 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","2":"I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x"},E:{"1":"C K L G dB zB 0B 1B lB 2B","2":"I g J D E F uB jB vB wB xB yB","132":"A B kB cB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C G M N O h i j k 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"E jB 8B nB 9B AC BC CC DC EC"},H:{"2":"SC"},I:{"1":"H","2":"eB I TC UC VC WC nB XC YC"},J:{"2":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"2":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"WOFF 2.0 - Web Open Font Format"};

},{}],633:[function(require,module,exports){
module.exports={A:{A:{"1":"J D E F A B oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB I g J D E F A B C K L qB rB"},D:{"1":"6 7 8 9 AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"0 1 2 3 4 5 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z"},E:{"1":"F A B C K L G yB kB cB dB zB 0B 1B lB 2B","4":"I g J D E uB jB vB wB xB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","2":"F B C 3B 4B 5B 6B cB mB 7B dB","4":"G M N O h i j k l m n o p q r s"},G:{"1":"DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","4":"E jB 8B nB 9B AC BC CC"},H:{"2":"SC"},I:{"1":"H","4":"eB I TC UC VC WC nB XC YC"},J:{"4":"D A"},K:{"1":"T","2":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"4":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:5,C:"CSS3 word-break"};

},{}],634:[function(require,module,exports){
module.exports={A:{A:{"4":"J D E F A B oB"},B:{"1":"O P Q R U V W X Y Z a b c d e S f H","4":"C K L G M N"},C:{"1":"BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","4":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","4":"I g J D E F A B C K L G M N O h i j k"},E:{"1":"D E F A B C K L G wB xB yB kB cB dB zB 0B 1B lB 2B","4":"I g J uB jB vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F 3B 4B","4":"B C 5B 6B cB mB 7B"},G:{"1":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","4":"jB 8B nB 9B AC"},H:{"4":"SC"},I:{"1":"H XC YC","4":"eB I TC UC VC WC nB"},J:{"1":"A","4":"D"},K:{"1":"T","4":"A B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"4":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"4":"mC"}},B:5,C:"CSS3 Overflow-wrap"};

},{}],635:[function(require,module,exports){
module.exports={A:{A:{"2":"J D oB","132":"E F","260":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB","2":"pB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","2":"uB jB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB","2":"F"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"4":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"Cross-document messaging"};

},{}],636:[function(require,module,exports){
module.exports={A:{A:{"1":"E F A B","2":"J D oB"},B:{"1":"C K L G M N O","4":"P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB","4":"I g J D E F A B C K L G M N TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","16":"pB eB qB rB"},D:{"4":"0 1 2 3 4 5 6 7 8 9 o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J D E F A B C K L G M N O h i j k l m n"},E:{"4":"J D E F A B C K L G vB wB xB yB kB cB dB zB 0B 1B lB 2B","16":"I g uB jB"},F:{"4":"0 1 2 3 4 5 6 7 8 9 C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 7B dB","16":"F B 3B 4B 5B 6B cB mB"},G:{"4":"E BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","16":"jB 8B nB 9B AC"},H:{"2":"SC"},I:{"4":"I H WC nB XC YC","16":"eB TC UC VC"},J:{"4":"D A"},K:{"4":"T dB","16":"A B C cB mB"},L:{"4":"H"},M:{"4":"S"},N:{"1":"A B"},O:{"4":"ZC"},P:{"4":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"4":"kC"},R:{"4":"lC"},S:{"1":"mC"}},B:6,C:"X-Frame-Options HTTP header"};

},{}],637:[function(require,module,exports){
module.exports={A:{A:{"2":"J D E F oB","132":"A B"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","2":"pB eB","260":"A B","388":"J D E F","900":"I g qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","16":"I g J","132":"r s","388":"D E F A B C K L G M N O h i j k l m n o p q"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","2":"I uB jB","132":"D wB","388":"g J vB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 C O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB dB","2":"F B 3B 4B 5B 6B cB mB 7B","132":"G M N"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","2":"jB 8B nB","132":"BC","388":"9B AC"},H:{"2":"SC"},I:{"1":"H YC","2":"TC UC VC","388":"XC","900":"eB I WC nB"},J:{"132":"A","388":"D"},K:{"1":"C T dB","2":"A B cB mB"},L:{"1":"H"},M:{"1":"S"},N:{"132":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:1,C:"XMLHttpRequest advanced features"};

},{}],638:[function(require,module,exports){
module.exports={A:{A:{"1":"F A B","2":"J D E oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"1":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"1":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"1":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"1":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"1":"SC"},I:{"1":"eB I H TC UC VC WC nB XC YC"},J:{"1":"D A"},K:{"1":"A B C T cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"2":"lC"},S:{"1":"mC"}},B:1,C:"XHTML served as application/xhtml+xml"};

},{}],639:[function(require,module,exports){
module.exports={A:{A:{"2":"F A B oB","4":"J D E"},B:{"2":"C K L G M N O","8":"P Q R U V W X Y Z a b c d e S f H"},C:{"8":"0 1 2 3 4 5 6 7 8 9 pB eB I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB qB rB"},D:{"8":"0 1 2 3 4 5 6 7 8 9 I g J D E F A B C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB"},E:{"8":"I g J D E F A B C K L G uB jB vB wB xB yB kB cB dB zB 0B 1B lB 2B"},F:{"8":"0 1 2 3 4 5 6 7 8 9 F B C G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB 3B 4B 5B 6B cB mB 7B dB"},G:{"8":"E jB 8B nB 9B AC BC CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB"},H:{"8":"SC"},I:{"8":"eB I H TC UC VC WC nB XC YC"},J:{"8":"D A"},K:{"8":"A B C T cB mB dB"},L:{"8":"H"},M:{"8":"S"},N:{"2":"A B"},O:{"8":"ZC"},P:{"8":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"8":"kC"},R:{"8":"lC"},S:{"8":"mC"}},B:7,C:"XHTML+SMIL animation"};

},{}],640:[function(require,module,exports){
module.exports={A:{A:{"1":"A B","260":"J D E F oB"},B:{"1":"C K L G M N O P Q R U V W X Y Z a b c d e S f H"},C:{"1":"0 1 2 3 4 5 6 7 8 9 C K L G M N O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB U V W X Y Z a b c d e S f H iB","132":"B","260":"pB eB I g J D qB rB","516":"E F A"},D:{"1":"0 1 2 3 4 5 6 7 8 9 t u v w x y z AB BB CB DB EB FB GB HB IB JB KB fB LB gB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R U V W X Y Z a b c d e S f H iB sB tB","132":"I g J D E F A B C K L G M N O h i j k l m n o p q r s"},E:{"1":"E F A B C K L G xB yB kB cB dB zB 0B 1B lB 2B","132":"I g J D uB jB vB wB"},F:{"1":"0 1 2 3 4 5 6 7 8 9 O h i j k l m n o p q r s t u v w x y z AB BB CB DB EB FB GB HB IB JB KB LB MB NB T OB PB QB RB SB TB UB VB WB XB YB ZB aB bB P Q R hB","16":"F 3B","132":"B C G M N 4B 5B 6B cB mB 7B dB"},G:{"1":"E CC DC EC FC GC HC IC JC KC LC MC NC OC PC QC RC lB","132":"jB 8B nB 9B AC BC"},H:{"132":"SC"},I:{"1":"H XC YC","132":"eB I TC UC VC WC nB"},J:{"132":"D A"},K:{"1":"T","16":"A","132":"B C cB mB dB"},L:{"1":"H"},M:{"1":"S"},N:{"1":"A B"},O:{"1":"ZC"},P:{"1":"I aC bC cC dC eC kB fC gC hC iC jC"},Q:{"1":"kC"},R:{"1":"lC"},S:{"1":"mC"}},B:4,C:"DOM Parsing and Serialization"};

},{}],641:[function(require,module,exports){
module.exports = {
  1: 'ls', // WHATWG Living Standard
  2: 'rec', // W3C Recommendation
  3: 'pr', // W3C Proposed Recommendation
  4: 'cr', // W3C Candidate Recommendation
  5: 'wd', // W3C Working Draft
  6: 'other', // Non-W3C, but reputable
  7: 'unoff' // Unofficial, Editor's Draft or W3C "Note"
}

},{}],642:[function(require,module,exports){
module.exports = {
  y: 1 << 0,
  n: 1 << 1,
  a: 1 << 2,
  p: 1 << 3,
  u: 1 << 4,
  x: 1 << 5,
  d: 1 << 6
}

},{}],643:[function(require,module,exports){
'use strict'

const browsers = require('./browsers').browsers
const versions = require('./browserVersions').browserVersions
const agentsData = require('../../data/agents')

function unpackBrowserVersions(versionsData) {
  return Object.keys(versionsData).reduce((usage, version) => {
    usage[versions[version]] = versionsData[version]
    return usage
  }, {})
}

module.exports.agents = Object.keys(agentsData).reduce((map, key) => {
  let versionsData = agentsData[key]
  map[browsers[key]] = Object.keys(versionsData).reduce((data, entry) => {
    if (entry === 'A') {
      data.usage_global = unpackBrowserVersions(versionsData[entry])
    } else if (entry === 'C') {
      data.versions = versionsData[entry].reduce((list, version) => {
        if (version === '') {
          list.push(null)
        } else {
          list.push(versions[version])
        }
        return list
      }, [])
    } else if (entry === 'D') {
      data.prefix_exceptions = unpackBrowserVersions(versionsData[entry])
    } else if (entry === 'E') {
      data.browser = versionsData[entry]
    } else if (entry === 'F') {
      data.release_date = Object.keys(versionsData[entry]).reduce(
        (map2, key2) => {
          map2[versions[key2]] = versionsData[entry][key2]
          return map2
        },
        {}
      )
    } else {
      // entry is B
      data.prefix = versionsData[entry]
    }
    return data
  }, {})
  return map
}, {})

},{"../../data/agents":87,"./browserVersions":644,"./browsers":645}],644:[function(require,module,exports){
module.exports.browserVersions = require('../../data/browserVersions')

},{"../../data/browserVersions":88}],645:[function(require,module,exports){
module.exports.browsers = require('../../data/browsers')

},{"../../data/browsers":89}],646:[function(require,module,exports){
'use strict'

const statuses = require('../lib/statuses')
const supported = require('../lib/supported')
const browsers = require('./browsers').browsers
const versions = require('./browserVersions').browserVersions

const MATH2LOG = Math.log(2)

function unpackSupport(cipher) {
  // bit flags
  let stats = Object.keys(supported).reduce((list, support) => {
    if (cipher & supported[support]) list.push(support)
    return list
  }, [])

  // notes
  let notes = cipher >> 7
  let notesArray = []
  while (notes) {
    let note = Math.floor(Math.log(notes) / MATH2LOG) + 1
    notesArray.unshift(`#${note}`)
    notes -= Math.pow(2, note - 1)
  }

  return stats.concat(notesArray).join(' ')
}

function unpackFeature(packed) {
  let unpacked = { status: statuses[packed.B], title: packed.C }
  unpacked.stats = Object.keys(packed.A).reduce((browserStats, key) => {
    let browser = packed.A[key]
    browserStats[browsers[key]] = Object.keys(browser).reduce(
      (stats, support) => {
        let packedVersions = browser[support].split(' ')
        let unpacked2 = unpackSupport(support)
        packedVersions.forEach(v => (stats[versions[v]] = unpacked2))
        return stats
      },
      {}
    )
    return browserStats
  }, {})
  return unpacked
}

module.exports = unpackFeature
module.exports.default = unpackFeature

},{"../lib/statuses":641,"../lib/supported":642,"./browserVersions":644,"./browsers":645}],647:[function(require,module,exports){
/*
 * Load this dynamically so that it
 * doesn't appear in the rollup bundle.
 */

module.exports.features = require('../../data/features')

},{"../../data/features":90}],648:[function(require,module,exports){
module.exports.agents = require('./agents').agents
module.exports.feature = require('./feature')
module.exports.features = require('./features').features
module.exports.region = require('./region')

},{"./agents":643,"./feature":646,"./features":647,"./region":649}],649:[function(require,module,exports){
'use strict'

const browsers = require('./browsers').browsers

function unpackRegion(packed) {
  return Object.keys(packed).reduce((list, browser) => {
    let data = packed[browser]
    list[browsers[browser]] = Object.keys(data).reduce((memo, key) => {
      let stats = data[key]
      if (key === '_') {
        stats.split(' ').forEach(version => (memo[version] = null))
      } else {
        memo[key] = stats
      }
      return memo
    }, {})
    return list
  }, {})
}

module.exports = unpackRegion
module.exports.default = unpackRegion

},{"./browsers":645}],650:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-selector-parser"));const r=e=>{const r=String(Object(e).replaceWith||"[blank]"),s=t.default().astSync(r),o=Boolean(!("preserve"in Object(e))||e.preserve);return{postcssPlugin:"css-blank-pseudo",Rule:(e,{result:r})=>{if(-1===e.selector.indexOf(":blank"))return;let n;try{const r=t.default((e=>{e.walkPseudos((e=>{":blank"===e.value&&(e.nodes&&e.nodes.length||e.replaceWith(s.clone()))}))})).processSync(e.selector);n=String(r)}catch(t){return void e.warn(r,`Failed to parse selector : ${e.selector}`)}if(void 0===n)return;if(n===e.selector)return;const c=e.clone({selector:n});o?e.before(c):e.replaceWith(c)}}};r.postcss=!0,module.exports=r;


},{"postcss-selector-parser":693}],651:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-selector-parser"));const r=e=>{e="object"==typeof e&&e||s;const r=Boolean(!("preserve"in e)||e.preserve);return{postcssPlugin:"css-has-pseudo",Rule:(e,{result:s})=>{if(!e.selector.includes(":has("))return;let a;try{const r=t.default((e=>{e.walkPseudos((e=>{if(":has"===e.value&&e.nodes){const r=n(e);e.value=r?":not-has":":has";const s=t.default.attribute({attribute:o(String(e))});r?e.parent.parent.replaceWith(s):e.replaceWith(s)}}))})).processSync(e.selector);a=String(r)}catch(t){return void e.warn(s,`Failed to parse selector : ${e.selector}`)}void 0!==a&&a!==e.selector&&(r?e.cloneBefore({selector:a}):e.assign({selector:a}))}}};r.postcss=!0;const s={preserve:!0},o=e=>encodeURIComponent(e).replace(/%3A/g,":").replace(/%5B/g,"[").replace(/%5D/g,"]").replace(/%2C/g,",").replace(/[():%[\],]/g,"\\$&"),n=e=>{var t,r;return"pseudo"===(null==(t=e.parent)||null==(r=t.parent)?void 0:r.type)&&":not"===e.parent.parent.value};module.exports=r;


},{"postcss-selector-parser":693}],652:[function(require,module,exports){
"use strict";const e=/^media$/i,r=/\(\s*prefers-color-scheme\s*:\s*(dark|light|no-preference)\s*\)/i,o={dark:48,light:70,"no-preference":22},s=(e,r)=>`(color-index: ${o[r.toLowerCase()]})`,c={dark:48842621,light:70318723,"no-preference":22511989},n=(e,r)=>`(color: ${c[r.toLowerCase()]})`,t=o=>{const c=!("preserve"in Object(o))||o.preserve,t={};return!("mediaQuery"in Object(o))||"color-index"!==o.mediaQuery&&"color"!==o.mediaQuery?(t["color-index"]=!0,t.color=!0):t[o.mediaQuery]=!0,{postcssPlugin:"postcss-prefers-color-scheme",AtRule:o=>{if(!e.test(o.name))return;const{params:l}=o,a=l.replace(r,s),i=l.replace(r,n);l!==a&&t["color-index"]&&o.cloneBefore({params:a}),l!==i&&t.color&&o.cloneBefore({params:i}),c||o.remove()}}};t.postcss=!0,module.exports=t;


},{}],653:[function(require,module,exports){
module.exports=[
  {
    "id": "all-property",
    "title": "`all` Property",
    "description": "A property for defining the reset of all properties of an element",
    "specification": "https://www.w3.org/TR/css-cascade-3/#all-shorthand",
    "stage": 3,
    "caniuse": "css-all",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/all"
    },
    "example": "a {\n  all: initial;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/maximkoretskiy/postcss-initial"
      }
    ]
  },
  {
    "id": "any-link-pseudo-class",
    "title": "`:any-link` Hyperlink Pseudo-Class",
    "description": "A pseudo-class for matching anchor elements independent of whether they have been visited",
    "specification": "https://www.w3.org/TR/selectors-4/#any-link-pseudo",
    "stage": 2,
    "caniuse": "css-any-link",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:any-link"
    },
    "example": "nav :any-link > span {\n  background-color: yellow;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-pseudo-class-any-link"
      }
    ]
  },
  {
    "id": "blank-pseudo-class",
    "title": "`:blank` Empty-Value Pseudo-Class",
    "description": "A pseudo-class for matching form elements when they are empty",
    "specification": "https://drafts.csswg.org/selectors-4/#blank",
    "stage": 1,
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:blank"
    },
    "example": "input:blank {\n  background-color: yellow;\n}",
    "polyfills": [
      {
        "type": "JavaScript Library",
        "link": "https://github.com/csstools/css-blank-pseudo"
      },
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/csstools/css-blank-pseudo"
      }
    ]
  },
  {
    "id": "break-properties",
    "title": "Break Properties",
    "description": "Properties for defining the break behavior between and within boxes",
    "specification": "https://www.w3.org/TR/css-break-3/#breaking-controls",
    "stage": 3,
    "caniuse": "multicolumn",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/break-after"
    },
    "example": "a {\n  break-inside: avoid;\n  break-before: avoid-column;\n  break-after: always;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/shrpne/postcss-page-break"
      }
    ]
  },
  {
    "id": "case-insensitive-attributes",
    "title": "Case-Insensitive Attributes",
    "description": "An attribute selector matching attribute values case-insensitively",
    "specification": "https://www.w3.org/TR/selectors-4/#attribute-case",
    "stage": 2,
    "caniuse": "css-case-insensitive",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors"
    },
    "example": "[frame=hsides i] {\n  border-style: solid none;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/Semigradsky/postcss-attribute-case-insensitive"
      }
    ]
  },
  {
    "id": "color-adjust",
    "title": "`color-adjust` Property",
    "description": "The color-adjust property is a non-standard CSS extension that can be used to force printing of background colors and images",
    "specification": "https://www.w3.org/TR/css-color-4/#color-adjust",
    "stage": 2,
    "caniuse": "css-color-adjust",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-adjust"
    },
    "example": ".background {\n  background-color:#ccc;\n}\n.background.color-adjust {\n  color-adjust: economy;\n}\n.background.color-adjust-exact {\n  color-adjust: exact;\n}"
  },
  {
    "id": "color-functional-notation",
    "title": "Color Functional Notation",
    "description": "A space and slash separated notation for specifying colors",
    "specification": "https://drafts.csswg.org/css-color/#ref-for-funcdef-rgb%E2%91%A1%E2%91%A0",
    "stage": 1,
    "example": "em {\n  background-color: hsl(120deg 100% 25%);\n  box-shadow: 0 0 0 10px hwb(120deg 100% 25% / 80%);\n  color: rgb(0 255 0);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-color-functional-notation"
      }
    ]
  },
  {
    "id": "color-mod-function",
    "title": "`color-mod()` Function",
    "description": "A function for modifying colors",
    "specification": "https://www.w3.org/TR/css-color-4/#funcdef-color-mod",
    "stage": -1,
    "example": "p {\n  color: color-mod(black alpha(50%));\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-color-mod-function"
      }
    ]
  },
  {
    "id": "custom-media-queries",
    "title": "Custom Media Queries",
    "description": "An at-rule for defining aliases that represent media queries",
    "specification": "https://drafts.csswg.org/mediaqueries-5/#at-ruledef-custom-media",
    "stage": 1,
    "example": "@custom-media --narrow-window (max-width: 30em);\n\n@media (--narrow-window) {}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-custom-media"
      }
    ]
  },
  {
    "id": "custom-properties",
    "title": "Custom Properties",
    "description": "A syntax for defining custom values accepted by all CSS properties",
    "specification": "https://www.w3.org/TR/css-variables-1/",
    "stage": 3,
    "caniuse": "css-variables",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/var"
    },
    "example": "img {\n  --some-length: 32px;\n\n  height: var(--some-length);\n  width: var(--some-length);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-custom-properties"
      }
    ]
  },
  {
    "id": "custom-property-sets",
    "title": "Custom Property Sets",
    "description": "A syntax for storing properties in named variables, referenceable in other style rules",
    "specification": "https://tabatkins.github.io/specs/css-apply-rule/",
    "stage": -1,
    "caniuse": "css-apply-rule",
    "example": "img {\n  --some-length-styles: {\n    height: 32px;\n    width: 32px;\n  };\n\n  @apply --some-length-styles;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/pascalduez/postcss-apply"
      }
    ]
  },
  {
    "id": "custom-selectors",
    "title": "Custom Selectors",
    "description": "An at-rule for defining aliases that represent selectors",
    "specification": "https://drafts.csswg.org/css-extensions/#custom-selectors",
    "stage": 1,
    "example": "@custom-selector :--heading h1, h2, h3, h4, h5, h6;\n\narticle :--heading + p {}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-custom-selectors"
      }
    ]
  },
  {
    "id": "dir-pseudo-class",
    "title": "`:dir` Directionality Pseudo-Class",
    "description": "A pseudo-class for matching elements based on their directionality",
    "specification": "https://www.w3.org/TR/selectors-4/#dir-pseudo",
    "stage": 2,
    "caniuse": "css-dir-pseudo",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:dir"
    },
    "example": "blockquote:dir(rtl) {\n  margin-right: 10px;\n}\n\nblockquote:dir(ltr) {\n  margin-left: 10px;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-dir-pseudo-class"
      }
    ]
  },
  {
    "id": "double-position-gradients",
    "title": "Double Position Gradients",
    "description": "A syntax for using two positions in a gradient.",
    "specification": "https://www.w3.org/TR/css-images-4/#color-stop-syntax",
    "stage": 2,
    "caniuse-compat": {
      "and_chr": {
        "71": "y"
      },
      "chrome": {
        "71": "y"
      }
    },
    "example": ".pie_chart {\n  background-image: conic-gradient(yellowgreen 40%, gold 0deg 75%, #f06 0deg);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-double-position-gradients"
      }
    ]
  },
  {
    "id": "environment-variables",
    "title": "Custom Environment Variables",
    "description": "A syntax for using custom values accepted by CSS globally",
    "specification": "https://drafts.csswg.org/css-env-1/",
    "stage": 0,
    "caniuse-compat": {
      "and_chr": {
        "69": "y"
      },
      "chrome": {
        "69": "y"
      },
      "ios_saf": {
        "11.2": "y"
      },
      "safari": {
        "11.2": "y"
      }
    },
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/env"
    },
    "example": "@media (max-width: env(--brand-small)) {\n  body {\n    padding: env(--brand-spacing);\n  }\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-env-function"
      }
    ]
  },
  {
    "id": "focus-visible-pseudo-class",
    "title": "`:focus-visible` Focus-Indicated Pseudo-Class",
    "description": "A pseudo-class for matching focused elements that indicate that focus to a user",
    "specification": "https://www.w3.org/TR/selectors-4/#focus-visible-pseudo",
    "stage": 2,
    "caniuse": "css-focus-visible",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible"
    },
    "example": ":focus:not(:focus-visible) {\n  outline: 0;\n}",
    "polyfills": [
      {
        "type": "JavaScript Library",
        "link": "https://github.com/WICG/focus-visible"
      },
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-focus-visible"
      }
    ]
  },
  {
    "id": "focus-within-pseudo-class",
    "title": "`:focus-within` Focus Container Pseudo-Class",
    "description": "A pseudo-class for matching elements that are either focused or that have focused descendants",
    "specification": "https://www.w3.org/TR/selectors-4/#focus-within-pseudo",
    "stage": 2,
    "caniuse": "css-focus-within",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-within"
    },
    "example": "form:focus-within {\n  background: rgba(0, 0, 0, 0.3);\n}",
    "polyfills": [
      {
        "type": "JavaScript Library",
        "link": "https://github.com/jonathantneal/focus-within"
      },
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-focus-within"
      }
    ]
  },
  {
    "id": "font-variant-property",
    "title": "`font-variant` Property",
    "description": "A property for defining the usage of alternate glyphs in a font",
    "specification": "https://www.w3.org/TR/css-fonts-3/#propdef-font-variant",
    "stage": 3,
    "caniuse": "font-variant-alternates",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant"
    },
    "example": "h2 {\n  font-variant: small-caps;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-font-variant"
      }
    ]
  },
  {
    "id": "gap-properties",
    "title": "Gap Properties",
    "description": "Properties for defining gutters within a layout",
    "specification": "https://www.w3.org/TR/css-grid-1/#gutters",
    "stage": 3,
    "caniuse-compat": {
      "chrome": {
        "66": "y"
      },
      "edge": {
        "16": "y"
      },
      "firefox": {
        "61": "y"
      },
      "safari": {
        "11.2": "y",
        "TP": "y"
      }
    },
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/gap"
    },
    "example": ".grid-1 {\n  gap: 20px;\n}\n\n.grid-2 {\n  column-gap: 40px;\n  row-gap: 20px;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-gap-properties"
      }
    ]
  },
  {
    "id": "gray-function",
    "title": "`gray()` Function",
    "description": "A function for specifying fully desaturated colors",
    "specification": "https://www.w3.org/TR/css-color-4/#funcdef-gray",
    "stage": 2,
    "example": "p {\n  color: gray(50);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-color-gray"
      }
    ]
  },
  {
    "id": "grid-layout",
    "title": "Grid Layout",
    "description": "A syntax for using a grid concept to lay out content",
    "specification": "https://www.w3.org/TR/css-grid-1/",
    "stage": 3,
    "caniuse": "css-grid",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/grid"
    },
    "example": "section {\n  display: grid;\n  grid-template-columns: 100px 100px 100px;\n  grid-gap: 10px;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/autoprefixer"
      }
    ]
  },
  {
    "id": "has-pseudo-class",
    "title": "`:has()` Relational Pseudo-Class",
    "description": "A pseudo-class for matching ancestor and sibling elements",
    "specification": "https://www.w3.org/TR/selectors-4/#has-pseudo",
    "stage": 2,
    "caniuse": "css-has",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:has"
    },
    "example": "a:has(> img) {\n  display: block;\n}",
    "polyfills": [
      {
        "type": "JavaScript Library",
        "link": "https://github.com/csstools/css-has-pseudo"
      },
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/csstools/css-has-pseudo"
      }
    ]
  },
  {
    "id": "hexadecimal-alpha-notation",
    "title": "Hexadecimal Alpha Notation",
    "description": "A 4 & 8 character hex color notation for specifying the opacity level",
    "specification": "https://www.w3.org/TR/css-color-4/#hex-notation",
    "stage": 2,
    "caniuse": "css-rrggbbaa",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Syntax_2"
    },
    "example": "section {\n  background-color: #f3f3f3f3;\n  color: #0003;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-color-hex-alpha"
      }
    ]
  },
  {
    "id": "hwb-function",
    "title": "`hwb()` Function",
    "description": "A function for specifying colors by hue and then a degree of whiteness and blackness to mix into it",
    "specification": "https://www.w3.org/TR/css-color-4/#funcdef-hwb",
    "stage": 2,
    "example": "p {\n  color: hwb(120 44% 50%);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-color-hwb"
      }
    ]
  },
  {
    "id": "image-set-function",
    "title": "`image-set()` Function",
    "description": "A function for specifying image sources based on the user’s resolution",
    "specification": "https://www.w3.org/TR/css-images-4/#image-set-notation",
    "stage": 2,
    "caniuse": "css-image-set",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/image-set"
    },
    "example": "p {\n  background-image: image-set(\n    \"foo.png\" 1x,\n    \"foo-2x.png\" 2x,\n    \"foo-print.png\" 600dpi\n  );\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-image-set-function"
      }
    ]
  },
  {
    "id": "in-out-of-range-pseudo-class",
    "title": "`:in-range` and `:out-of-range` Pseudo-Classes",
    "description": "A pseudo-class for matching elements that have range limitations",
    "specification": "https://www.w3.org/TR/selectors-4/#range-pseudos",
    "stage": 2,
    "caniuse": "css-in-out-of-range",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:in-range"
    },
    "example": "input:in-range {\n  background-color: rgba(0, 255, 0, 0.25);\n}\ninput:out-of-range {\n  background-color: rgba(255, 0, 0, 0.25);\n  border: 2px solid red;\n}"
  },
  {
    "id": "is-pseudo-class",
    "title": "`:is()` Matches-Any Pseudo-Class",
    "description": "A pseudo-class for matching elements in a selector list",
    "specification": "https://www.w3.org/TR/selectors-4/#matches-pseudo",
    "stage": 2,
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:is"
    },
    "example": "p:is(:first-child, .special) {\n  margin-top: 1em;\n}"
  },
  {
    "id": "lab-function",
    "title": "`lab()` Function",
    "description": "A function for specifying colors expressed in the CIE Lab color space",
    "specification": "https://www.w3.org/TR/css-color-4/#funcdef-lab",
    "stage": 2,
    "example": "body {\n  color: lab(240 50 20);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-lab-function"
      }
    ]
  },
  {
    "id": "lch-function",
    "title": "`lch()` Function",
    "description": "A function for specifying colors expressed in the CIE Lab color space with chroma and hue",
    "specification": "https://www.w3.org/TR/css-color-4/#funcdef-lch",
    "stage": 2,
    "example": "body {\n  color: lch(53 105 40);\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-lab-function"
      }
    ]
  },
  {
    "id": "logical-properties-and-values",
    "title": "Logical Properties and Values",
    "description": "Flow-relative (left-to-right or right-to-left) properties and values",
    "specification": "https://www.w3.org/TR/css-logical-1/",
    "stage": 2,
    "caniuse": "css-logical-props",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties"
    },
    "example": "span:first-child {\n  float: inline-start;\n  margin-inline-start: 10px;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-logical-properties"
      }
    ]
  },
  {
    "id": "matches-pseudo-class",
    "title": "`:matches()` Matches-Any Pseudo-Class",
    "description": "A pseudo-class for matching elements in a selector list",
    "specification": "https://www.w3.org/TR/selectors-4/#selectordef-matches",
    "stage": -1,
    "caniuse": "css-matches-pseudo",
    "example": "p:matches(:first-child, .special) {\n  margin-top: 1em;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-selector-matches"
      }
    ]
  },
  {
    "id": "media-query-ranges",
    "title": "Media Query Ranges",
    "description": "A syntax for defining media query ranges using ordinary comparison operators",
    "specification": "https://www.w3.org/TR/mediaqueries-4/#range-context",
    "stage": 3,
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#Syntax_improvements_in_Level_4"
    },
    "example": "@media (width < 480px) {}\n\n@media (480px <= width < 768px) {}\n\n@media (width >= 768px) {}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-media-minmax"
      }
    ]
  },
  {
    "id": "nesting-rules",
    "title": "Nesting Rules",
    "description": "A syntax for nesting relative rules within rules",
    "specification": "https://drafts.csswg.org/css-nesting-1/",
    "stage": 1,
    "example": "article {\n  & p {\n    color: #333;\n  }\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-nesting"
      }
    ]
  },
  {
    "id": "not-pseudo-class",
    "title": "`:not()` Negation List Pseudo-Class",
    "description": "A pseudo-class for ignoring elements in a selector list",
    "specification": "https://www.w3.org/TR/selectors-4/#negation-pseudo",
    "stage": 2,
    "caniuse": "css-not-sel-list",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:not"
    },
    "example": "p:not(:first-child, .special) {\n  margin-top: 1em;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-selector-not"
      }
    ]
  },
  {
    "id": "overflow-property",
    "title": "`overflow` Shorthand Property",
    "description": "A property for defining `overflow-x` and `overflow-y`",
    "specification": "https://www.w3.org/TR/css-overflow-3/#propdef-overflow",
    "stage": 2,
    "caniuse": "css-overflow",
    "caniuse-compat": {
      "and_chr": {
        "68": "y"
      },
      "and_ff": {
        "61": "y"
      },
      "chrome": {
        "68": "y"
      },
      "firefox": {
        "61": "y"
      }
    },
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/overflow"
    },
    "example": "html {\n  overflow: hidden auto;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-overflow-shorthand"
      }
    ]
  },
  {
    "id": "overflow-wrap-property",
    "title": "`overflow-wrap` Property",
    "description": "A property for defining whether to insert line breaks within words to prevent overflowing",
    "specification": "https://www.w3.org/TR/css-text-3/#overflow-wrap-property",
    "stage": 2,
    "caniuse": "wordwrap",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap"
    },
    "example": "p {\n  overflow-wrap: break-word;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/mattdimu/postcss-replace-overflow-wrap"
      }
    ]
  },
  {
    "id": "overscroll-behavior-property",
    "title": "`overscroll-behavior` Property",
    "description": "Properties for controlling when the scroll position of a scroll container reaches the edge of a scrollport",
    "specification": "https://drafts.csswg.org/css-overscroll-behavior",
    "stage": 1,
    "caniuse": "css-overscroll-behavior",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior"
    },
    "example": ".messages {\n  height: 220px;\n  overflow: auto;\n  overscroll-behavior-y: contain;\n}\n\nbody {\n  margin: 0;\n  overscroll-behavior: none;\n}"
  },
  {
    "id": "place-properties",
    "title": "Place Properties",
    "description": "Properties for defining alignment within a layout",
    "specification": "https://www.w3.org/TR/css-align-3/#place-items-property",
    "stage": 2,
    "caniuse-compat": {
      "chrome": {
        "59": "y"
      },
      "firefox": {
        "45": "y"
      }
    },
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/place-content"
    },
    "example": ".example {\n  place-content: flex-end;\n  place-items: center / space-between;\n  place-self: flex-start / center;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/jonathantneal/postcss-place"
      }
    ]
  },
  {
    "id": "prefers-color-scheme-query",
    "title": "`prefers-color-scheme` Media Query",
    "description": "A media query to detect if the user has requested the system use a light or dark color theme",
    "specification": "https://drafts.csswg.org/mediaqueries-5/#prefers-color-scheme",
    "stage": 1,
    "caniuse": "prefers-color-scheme",
    "caniuse-compat": {
      "ios_saf": {
        "12.1": "y"
      },
      "safari": {
        "12.1": "y"
      }
    },
    "example": "body {\n  background-color: white;\n  color: black;\n}\n\n@media (prefers-color-scheme: dark) {\n  body {\n    background-color: black;\n    color: white;\n  }\n}",
    "polyfills": [
      {
        "type": "JavaScript Library",
        "link": "https://github.com/csstools/css-prefers-color-scheme"
      },
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/csstools/css-prefers-color-scheme"
      }
    ]
  },
  {
    "id": "prefers-reduced-motion-query",
    "title": "`prefers-reduced-motion` Media Query",
    "description": "A media query to detect if the user has requested less animation and general motion on the page",
    "specification": "https://drafts.csswg.org/mediaqueries-5/#prefers-reduced-motion",
    "stage": 1,
    "caniuse": "prefers-reduced-motion",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion"
    },
    "example": ".animation {\n  animation: vibrate 0.3s linear infinite both; \n}\n\n@media (prefers-reduced-motion: reduce) {\n  .animation {\n    animation: none;\n  }\n}"
  },
  {
    "id": "read-only-write-pseudo-class",
    "title": "`:read-only` and `:read-write` selectors",
    "description": "Pseudo-classes to match elements which are considered user-alterable",
    "specification": "https://www.w3.org/TR/selectors-4/#rw-pseudos",
    "stage": 2,
    "caniuse": "css-read-only-write",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/:read-only"
    },
    "example": "input:read-only {\n  background-color: #ccc;\n}"
  },
  {
    "id": "rebeccapurple-color",
    "title": "`rebeccapurple` Color",
    "description": "A particularly lovely shade of purple in memory of Rebecca Alison Meyer",
    "specification": "https://www.w3.org/TR/css-color-4/#valdef-color-rebeccapurple",
    "stage": 2,
    "caniuse": "css-rebeccapurple",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value"
    },
    "example": "html {\n  color: rebeccapurple;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/postcss/postcss-color-rebeccapurple"
      }
    ]
  },
  {
    "id": "system-ui-font-family",
    "title": "`system-ui` Font Family",
    "description": "A generic font used to match the user’s interface",
    "specification": "https://www.w3.org/TR/css-fonts-4/#system-ui-def",
    "stage": 2,
    "caniuse": "font-family-system-ui",
    "docs": {
      "mdn": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-family#Syntax"
    },
    "example": "body {\n  font-family: system-ui;\n}",
    "polyfills": [
      {
        "type": "PostCSS Plugin",
        "link": "https://github.com/JLHwung/postcss-font-family-system-ui"
      }
    ]
  },
  {
    "id": "when-else-rules",
    "title": "When/Else Rules",
    "description": "At-rules for specifying media queries and support queries in a single grammar",
    "specification": "https://tabatkins.github.io/specs/css-when-else/",
    "stage": 0,
    "example": "@when media(width >= 640px) and (supports(display: flex) or supports(display: grid)) {\n  /* A */\n} @else media(pointer: coarse) {\n  /* B */\n} @else {\n  /* C */\n}"
  },
  {
    "id": "where-pseudo-class",
    "title": "`:where()` Zero-Specificity Pseudo-Class",
    "description": "A pseudo-class for matching elements in a selector list without contributing specificity",
    "specification": "https://drafts.csswg.org/selectors-4/#where-pseudo",
    "stage": 1,
    "example": "a:where(:not(:hover)) {\n  text-decoration: none;\n}"
  }
]

},{}],654:[function(require,module,exports){
/*! https://mths.be/cssesc v3.0.0 by @mathias */
'use strict';

var object = {};
var hasOwnProperty = object.hasOwnProperty;
var merge = function merge(options, defaults) {
	if (!options) {
		return defaults;
	}
	var result = {};
	for (var key in defaults) {
		// `if (defaults.hasOwnProperty(key) { … }` is not needed here, since
		// only recognized option names are used.
		result[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];
	}
	return result;
};

var regexAnySingleEscape = /[ -,\.\/:-@\[-\^`\{-~]/;
var regexSingleEscape = /[ -,\.\/:-@\[\]\^`\{-~]/;
var regexAlwaysEscape = /['"\\]/;
var regexExcessiveSpaces = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;

// https://mathiasbynens.be/notes/css-escapes#css
var cssesc = function cssesc(string, options) {
	options = merge(options, cssesc.options);
	if (options.quotes != 'single' && options.quotes != 'double') {
		options.quotes = 'single';
	}
	var quote = options.quotes == 'double' ? '"' : '\'';
	var isIdentifier = options.isIdentifier;

	var firstChar = string.charAt(0);
	var output = '';
	var counter = 0;
	var length = string.length;
	while (counter < length) {
		var character = string.charAt(counter++);
		var codePoint = character.charCodeAt();
		var value = void 0;
		// If it’s not a printable ASCII character…
		if (codePoint < 0x20 || codePoint > 0x7E) {
			if (codePoint >= 0xD800 && codePoint <= 0xDBFF && counter < length) {
				// It’s a high surrogate, and there is a next character.
				var extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) {
					// next character is low surrogate
					codePoint = ((codePoint & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;
				} else {
					// It’s an unmatched surrogate; only append this code unit, in case
					// the next code unit is the high surrogate of a surrogate pair.
					counter--;
				}
			}
			value = '\\' + codePoint.toString(16).toUpperCase() + ' ';
		} else {
			if (options.escapeEverything) {
				if (regexAnySingleEscape.test(character)) {
					value = '\\' + character;
				} else {
					value = '\\' + codePoint.toString(16).toUpperCase() + ' ';
				}
			} else if (/[\t\n\f\r\x0B]/.test(character)) {
				value = '\\' + codePoint.toString(16).toUpperCase() + ' ';
			} else if (character == '\\' || !isIdentifier && (character == '"' && quote == character || character == '\'' && quote == character) || isIdentifier && regexSingleEscape.test(character)) {
				value = '\\' + character;
			} else {
				value = character;
			}
		}
		output += value;
	}

	if (isIdentifier) {
		if (/^-[-\d]/.test(output)) {
			output = '\\-' + output.slice(1);
		} else if (/\d/.test(firstChar)) {
			output = '\\3' + firstChar + ' ' + output.slice(1);
		}
	}

	// Remove spaces after `\HEX` escapes that are not followed by a hex digit,
	// since they’re redundant. Note that this is only possible if the escape
	// sequence isn’t preceded by an odd number of backslashes.
	output = output.replace(regexExcessiveSpaces, function ($0, $1, $2) {
		if ($1 && $1.length % 2) {
			// It’s not safe to remove the space, so don’t.
			return $0;
		}
		// Strip the space.
		return ($1 || '') + $2;
	});

	if (!isIdentifier && options.wrap) {
		return quote + output + quote;
	}
	return output;
};

// Expose default options (so they can be overridden globally).
cssesc.options = {
	'escapeEverything': false,
	'isIdentifier': false,
	'quotes': 'single',
	'wrap': false
};

cssesc.version = '3.0.0';

module.exports = cssesc;

},{}],655:[function(require,module,exports){
module.exports = {
	"0.20": "39",
	"0.21": "41",
	"0.22": "41",
	"0.23": "41",
	"0.24": "41",
	"0.25": "42",
	"0.26": "42",
	"0.27": "43",
	"0.28": "43",
	"0.29": "43",
	"0.30": "44",
	"0.31": "45",
	"0.32": "45",
	"0.33": "45",
	"0.34": "45",
	"0.35": "45",
	"0.36": "47",
	"0.37": "49",
	"1.0": "49",
	"1.1": "50",
	"1.2": "51",
	"1.3": "52",
	"1.4": "53",
	"1.5": "54",
	"1.6": "56",
	"1.7": "58",
	"1.8": "59",
	"2.0": "61",
	"2.1": "61",
	"3.0": "66",
	"3.1": "66",
	"4.0": "69",
	"4.1": "69",
	"4.2": "69",
	"5.0": "73",
	"6.0": "76",
	"6.1": "76",
	"7.0": "78",
	"7.1": "78",
	"7.2": "78",
	"7.3": "78",
	"8.0": "80",
	"8.1": "80",
	"8.2": "80",
	"8.3": "80",
	"8.4": "80",
	"8.5": "80",
	"9.0": "83",
	"9.1": "83",
	"9.2": "83",
	"9.3": "83",
	"9.4": "83",
	"10.0": "85",
	"10.1": "85",
	"10.2": "85",
	"10.3": "85",
	"10.4": "85",
	"11.0": "87",
	"11.1": "87",
	"11.2": "87",
	"11.3": "87",
	"11.4": "87",
	"11.5": "87",
	"12.0": "89",
	"12.1": "89",
	"12.2": "89",
	"13.0": "91",
	"13.1": "91",
	"13.2": "91",
	"13.3": "91",
	"13.4": "91",
	"13.5": "91",
	"13.6": "91",
	"14.0": "93",
	"14.1": "93",
	"14.2": "93",
	"15.0": "94",
	"15.1": "94",
	"15.2": "94",
	"15.3": "94",
	"16.0": "96",
	"17.0": "98"
};
},{}],656:[function(require,module,exports){
/**
 * @license Fraction.js v4.1.2 23/05/2021
 * https://www.xarg.org/2014/03/rational-numbers-in-javascript/
 *
 * Copyright (c) 2021, Robert Eisele (robert@xarg.org)
 * Dual licensed under the MIT or GPL Version 2 licenses.
 **/


/**
 *
 * This class offers the possibility to calculate fractions.
 * You can pass a fraction in different formats. Either as array, as double, as string or as an integer.
 *
 * Array/Object form
 * [ 0 => <nominator>, 1 => <denominator> ]
 * [ n => <nominator>, d => <denominator> ]
 *
 * Integer form
 * - Single integer value
 *
 * Double form
 * - Single double value
 *
 * String form
 * 123.456 - a simple double
 * 123/456 - a string fraction
 * 123.'456' - a double with repeating decimal places
 * 123.(456) - synonym
 * 123.45'6' - a double with repeating last place
 * 123.45(6) - synonym
 *
 * Example:
 *
 * var f = new Fraction("9.4'31'");
 * f.mul([-4, 3]).div(4.9);
 *
 */

(function(root) {

  "use strict";

  // Maximum search depth for cyclic rational numbers. 2000 should be more than enough.
  // Example: 1/7 = 0.(142857) has 6 repeating decimal places.
  // If MAX_CYCLE_LEN gets reduced, long cycles will not be detected and toString() only gets the first 10 digits
  var MAX_CYCLE_LEN = 2000;

  // Parsed data to avoid calling "new" all the time
  var P = {
    "s": 1,
    "n": 0,
    "d": 1
  };

  function createError(name) {

    function errorConstructor() {
      var temp = Error.apply(this, arguments);
      temp['name'] = this['name'] = name;
      this['stack'] = temp['stack'];
      this['message'] = temp['message'];
    }

    /**
     * Error constructor
     *
     * @constructor
     */
    function IntermediateInheritor() { }
    IntermediateInheritor.prototype = Error.prototype;
    errorConstructor.prototype = new IntermediateInheritor();

    return errorConstructor;
  }

  var DivisionByZero = Fraction['DivisionByZero'] = createError('DivisionByZero');
  var InvalidParameter = Fraction['InvalidParameter'] = createError('InvalidParameter');

  function assign(n, s) {

    if (isNaN(n = parseInt(n, 10))) {
      throwInvalidParam();
    }
    return n * s;
  }

  function throwInvalidParam() {
    throw new InvalidParameter();
  }

  function factorize(num) {

    var factors = {};

    var n = num;
    var i = 2;
    var s = 4;

    while (s <= n) {

      while (n % i === 0) {
        n /= i;
        factors[i] = (factors[i] || 0) + 1;
      }
      s += 1 + 2 * i++;
    }

    if (n !== num) {
      if (n > 1)
      factors[n] = (factors[n] || 0) + 1;
    } else {
      factors[num] = (factors[num] || 0) + 1;
    }
    return factors;
  }

  var parse = function(p1, p2) {

    var n = 0, d = 1, s = 1;
    var v = 0, w = 0, x = 0, y = 1, z = 1;

    var A = 0, B = 1;
    var C = 1, D = 1;

    var N = 10000000;
    var M;

    if (p1 === undefined || p1 === null) {
      /* void */
    } else if (p2 !== undefined) {
      n = p1;
      d = p2;
      s = n * d;
    } else
      switch (typeof p1) {

        case "object":
          {
            if ("d" in p1 && "n" in p1) {
              n = p1["n"];
              d = p1["d"];
              if ("s" in p1)
                n *= p1["s"];
            } else if (0 in p1) {
              n = p1[0];
              if (1 in p1)
                d = p1[1];
            } else {
              throwInvalidParam();
            }
            s = n * d;
            break;
          }
        case "number":
          {
            if (p1 < 0) {
              s = p1;
              p1 = -p1;
            }

            if (p1 % 1 === 0) {
              n = p1;
            } else if (p1 > 0) { // check for != 0, scale would become NaN (log(0)), which converges really slow

              if (p1 >= 1) {
                z = Math.pow(10, Math.floor(1 + Math.log(p1) / Math.LN10));
                p1 /= z;
              }

              // Using Farey Sequences
              // http://www.johndcook.com/blog/2010/10/20/best-rational-approximation/

              while (B <= N && D <= N) {
                M = (A + C) / (B + D);

                if (p1 === M) {
                  if (B + D <= N) {
                    n = A + C;
                    d = B + D;
                  } else if (D > B) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                  break;

                } else {

                  if (p1 > M) {
                    A += C;
                    B += D;
                  } else {
                    C += A;
                    D += B;
                  }

                  if (B > N) {
                    n = C;
                    d = D;
                  } else {
                    n = A;
                    d = B;
                  }
                }
              }
              n *= z;
            } else if (isNaN(p1) || isNaN(p2)) {
              d = n = NaN;
            }
            break;
          }
        case "string":
          {
            B = p1.match(/\d+|./g);

            if (B === null)
              throwInvalidParam();

            if (B[A] === '-') {// Check for minus sign at the beginning
              s = -1;
              A++;
            } else if (B[A] === '+') {// Check for plus sign at the beginning
              A++;
            }

            if (B.length === A + 1) { // Check if it's just a simple number "1234"
              w = assign(B[A++], s);
            } else if (B[A + 1] === '.' || B[A] === '.') { // Check if it's a decimal number

              if (B[A] !== '.') { // Handle 0.5 and .5
                v = assign(B[A++], s);
              }
              A++;

              // Check for decimal places
              if (A + 1 === B.length || B[A + 1] === '(' && B[A + 3] === ')' || B[A + 1] === "'" && B[A + 3] === "'") {
                w = assign(B[A], s);
                y = Math.pow(10, B[A].length);
                A++;
              }

              // Check for repeating places
              if (B[A] === '(' && B[A + 2] === ')' || B[A] === "'" && B[A + 2] === "'") {
                x = assign(B[A + 1], s);
                z = Math.pow(10, B[A + 1].length) - 1;
                A += 3;
              }

            } else if (B[A + 1] === '/' || B[A + 1] === ':') { // Check for a simple fraction "123/456" or "123:456"
              w = assign(B[A], s);
              y = assign(B[A + 2], 1);
              A += 3;
            } else if (B[A + 3] === '/' && B[A + 1] === ' ') { // Check for a complex fraction "123 1/2"
              v = assign(B[A], s);
              w = assign(B[A + 2], s);
              y = assign(B[A + 4], 1);
              A += 5;
            }

            if (B.length <= A) { // Check for more tokens on the stack
              d = y * z;
              s = /* void */
              n = x + d * v + z * w;
              break;
            }

            /* Fall through on error */
          }
        default:
          throwInvalidParam();
      }

    if (d === 0) {
      throw new DivisionByZero();
    }

    P["s"] = s < 0 ? -1 : 1;
    P["n"] = Math.abs(n);
    P["d"] = Math.abs(d);
  };

  function modpow(b, e, m) {

    var r = 1;
    for (; e > 0; b = (b * b) % m, e >>= 1) {

      if (e & 1) {
        r = (r * b) % m;
      }
    }
    return r;
  }


  function cycleLen(n, d) {

    for (; d % 2 === 0;
      d /= 2) {
    }

    for (; d % 5 === 0;
      d /= 5) {
    }

    if (d === 1) // Catch non-cyclic numbers
      return 0;

    // If we would like to compute really large numbers quicker, we could make use of Fermat's little theorem:
    // 10^(d-1) % d == 1
    // However, we don't need such large numbers and MAX_CYCLE_LEN should be the capstone,
    // as we want to translate the numbers to strings.

    var rem = 10 % d;
    var t = 1;

    for (; rem !== 1; t++) {
      rem = rem * 10 % d;

      if (t > MAX_CYCLE_LEN)
        return 0; // Returning 0 here means that we don't print it as a cyclic number. It's likely that the answer is `d-1`
    }
    return t;
  }


  function cycleStart(n, d, len) {

    var rem1 = 1;
    var rem2 = modpow(10, len, d);

    for (var t = 0; t < 300; t++) { // s < ~log10(Number.MAX_VALUE)
      // Solve 10^s == 10^(s+t) (mod d)

      if (rem1 === rem2)
        return t;

      rem1 = rem1 * 10 % d;
      rem2 = rem2 * 10 % d;
    }
    return 0;
  }

  function gcd(a, b) {

    if (!a)
      return b;
    if (!b)
      return a;

    while (1) {
      a %= b;
      if (!a)
        return b;
      b %= a;
      if (!b)
        return a;
    }
  };

  /**
   * Module constructor
   *
   * @constructor
   * @param {number|Fraction=} a
   * @param {number=} b
   */
  function Fraction(a, b) {

    if (!(this instanceof Fraction)) {
      return new Fraction(a, b);
    }

    parse(a, b);

    a = gcd(P["d"], P["n"]); // Abuse variable a

    this["s"] = P["s"];
    this["n"] = P["n"] / a;
    this["d"] = P["d"] / a;
  }

  Fraction.prototype = {

    "s": 1,
    "n": 0,
    "d": 1,

    /**
     * Calculates the absolute value
     *
     * Ex: new Fraction(-4).abs() => 4
     **/
    "abs": function() {

      return new Fraction(this["n"], this["d"]);
    },

    /**
     * Inverts the sign of the current fraction
     *
     * Ex: new Fraction(-4).neg() => 4
     **/
    "neg": function() {

      return new Fraction(-this["s"] * this["n"], this["d"]);
    },

    /**
     * Adds two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => 467 / 30
     **/
    "add": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * this["n"] * P["d"] + P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Subtracts two rational numbers
     *
     * Ex: new Fraction({n: 2, d: 3}).add("14.9") => -427 / 30
     **/
    "sub": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * this["n"] * P["d"] - P["s"] * this["d"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Multiplies two rational numbers
     *
     * Ex: new Fraction("-17.(345)").mul(3) => 5776 / 111
     **/
    "mul": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * P["s"] * this["n"] * P["n"],
        this["d"] * P["d"]
      );
    },

    /**
     * Divides two rational numbers
     *
     * Ex: new Fraction("-17.(345)").inverse().div(3)
     **/
    "div": function(a, b) {

      parse(a, b);
      return new Fraction(
        this["s"] * P["s"] * this["n"] * P["d"],
        this["d"] * P["n"]
      );
    },

    /**
     * Clones the actual object
     *
     * Ex: new Fraction("-17.(345)").clone()
     **/
    "clone": function() {
      return new Fraction(this);
    },

    /**
     * Calculates the modulo of two rational numbers - a more precise fmod
     *
     * Ex: new Fraction('4.(3)').mod([7, 8]) => (13/3) % (7/8) = (5/6)
     **/
    "mod": function(a, b) {

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return new Fraction(NaN);
      }

      if (a === undefined) {
        return new Fraction(this["s"] * this["n"] % this["d"], 1);
      }

      parse(a, b);
      if (0 === P["n"] && 0 === this["d"]) {
        Fraction(0, 0); // Throw DivisionByZero
      }

      /*
       * First silly attempt, kinda slow
       *
       return that["sub"]({
       "n": num["n"] * Math.floor((this.n / this.d) / (num.n / num.d)),
       "d": num["d"],
       "s": this["s"]
       });*/

      /*
       * New attempt: a1 / b1 = a2 / b2 * q + r
       * => b2 * a1 = a2 * b1 * q + b1 * b2 * r
       * => (b2 * a1 % a2 * b1) / (b1 * b2)
       */
      return new Fraction(
        this["s"] * (P["d"] * this["n"]) % (P["n"] * this["d"]),
        P["d"] * this["d"]
      );
    },

    /**
     * Calculates the fractional gcd of two rational numbers
     *
     * Ex: new Fraction(5,8).gcd(3,7) => 1/56
     */
    "gcd": function(a, b) {

      parse(a, b);

      // gcd(a / b, c / d) = gcd(a, c) / lcm(b, d)

      return new Fraction(gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]), P["d"] * this["d"]);
    },

    /**
     * Calculates the fractional lcm of two rational numbers
     *
     * Ex: new Fraction(5,8).lcm(3,7) => 15
     */
    "lcm": function(a, b) {

      parse(a, b);

      // lcm(a / b, c / d) = lcm(a, c) / gcd(b, d)

      if (P["n"] === 0 && this["n"] === 0) {
        return new Fraction;
      }
      return new Fraction(P["n"] * this["n"], gcd(P["n"], this["n"]) * gcd(P["d"], this["d"]));
    },

    /**
     * Calculates the ceil of a rational number
     *
     * Ex: new Fraction('4.(3)').ceil() => (5 / 1)
     **/
    "ceil": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.ceil(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Calculates the floor of a rational number
     *
     * Ex: new Fraction('4.(3)').floor() => (4 / 1)
     **/
    "floor": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.floor(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Rounds a rational numbers
     *
     * Ex: new Fraction('4.(3)').round() => (4 / 1)
     **/
    "round": function(places) {

      places = Math.pow(10, places || 0);

      if (isNaN(this["n"]) || isNaN(this["d"])) {
        return new Fraction(NaN);
      }
      return new Fraction(Math.round(places * this["s"] * this["n"] / this["d"]), places);
    },

    /**
     * Gets the inverse of the fraction, means numerator and denominator are exchanged
     *
     * Ex: new Fraction([-3, 4]).inverse() => -4 / 3
     **/
    "inverse": function() {

      return new Fraction(this["s"] * this["d"], this["n"]);
    },

    /**
     * Calculates the fraction to some rational exponent, if possible
     *
     * Ex: new Fraction(-1,2).pow(-3) => -8
     */
    "pow": function(a, b) {

      parse(a, b);

      // Trivial case when exp is an integer

      if (P['d'] === 1) {

        if (P['s'] < 0) {
          return new Fraction(Math.pow(this['s'] * this["d"], P['n']), Math.pow(this["n"], P['n']));
        } else {
          return new Fraction(Math.pow(this['s'] * this["n"], P['n']), Math.pow(this["d"], P['n']));
        }
      }

      // Negative roots become complex
      //     (-a/b)^(c/d) = x
      // <=> (-1)^(c/d) * (a/b)^(c/d) = x
      // <=> (cos(pi) + i*sin(pi))^(c/d) * (a/b)^(c/d) = x         # rotate 1 by 180°
      // <=> (cos(c*pi/d) + i*sin(c*pi/d)) * (a/b)^(c/d) = x       # DeMoivre's formula in Q ( https://proofwiki.org/wiki/De_Moivre%27s_Formula/Rational_Index )
      // From which follows that only for c=0 the root is non-complex. c/d is a reduced fraction, so that sin(c/dpi)=0 occurs for d=1, which is handled by our trivial case.
      if (this['s'] < 0) return null;

      // Now prime factor n and d
      var N = factorize(this['n']);
      var D = factorize(this['d']);

      // Exponentiate and take root for n and d individually
      var n = 1;
      var d = 1;
      for (var k in N) {
        if (k === '1') continue;
        if (k === '0') {
          n = 0;
          break;
        }
        N[k]*= P['n'];

        if (N[k] % P['d'] === 0) {
          N[k]/= P['d'];
        } else return null;
        n*= Math.pow(k, N[k]);
      }

      for (var k in D) {
        if (k === '1') continue;
        D[k]*= P['n'];

        if (D[k] % P['d'] === 0) {
          D[k]/= P['d'];
        } else return null;
        d*= Math.pow(k, D[k]);
      }

      if (P['s'] < 0) {
        return new Fraction(d, n);
      }
      return new Fraction(n, d);
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "equals": function(a, b) {

      parse(a, b);
      return this["s"] * this["n"] * P["d"] === P["s"] * P["n"] * this["d"]; // Same as compare() === 0
    },

    /**
     * Check if two rational numbers are the same
     *
     * Ex: new Fraction(19.6).equals([98, 5]);
     **/
    "compare": function(a, b) {

      parse(a, b);
      var t = (this["s"] * this["n"] * P["d"] - P["s"] * P["n"] * this["d"]);
      return (0 < t) - (t < 0);
    },

    "simplify": function(eps) {

      // First naive implementation, needs improvement

      if (isNaN(this['n']) || isNaN(this['d'])) {
        return this;
      }

      var cont = this['abs']()['toContinued']();

      eps = eps || 0.001;

      function rec(a) {
        if (a.length === 1)
          return new Fraction(a[0]);
        return rec(a.slice(1))['inverse']()['add'](a[0]);
      }

      for (var i = 0; i < cont.length; i++) {
        var tmp = rec(cont.slice(0, i + 1));
        if (tmp['sub'](this['abs']())['abs']().valueOf() < eps) {
          return tmp['mul'](this['s']);
        }
      }
      return this;
    },

    /**
     * Check if two rational numbers are divisible
     *
     * Ex: new Fraction(19.6).divisible(1.5);
     */
    "divisible": function(a, b) {

      parse(a, b);
      return !(!(P["n"] * this["d"]) || ((this["n"] * P["d"]) % (P["n"] * this["d"])));
    },

    /**
     * Returns a decimal representation of the fraction
     *
     * Ex: new Fraction("100.'91823'").valueOf() => 100.91823918239183
     **/
    'valueOf': function() {

      return this["s"] * this["n"] / this["d"];
    },

    /**
     * Returns a string-fraction representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toFraction() => "4 1/3"
     **/
    'toFraction': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          str += " ";
          n %= d;
        }

        str += n;
        str += '/';
        str += d;
      }
      return str;
    },

    /**
     * Returns a latex representation of a Fraction object
     *
     * Ex: new Fraction("1.'3'").toLatex() => "\frac{4}{3}"
     **/
    'toLatex': function(excludeWhole) {

      var whole, str = "";
      var n = this["n"];
      var d = this["d"];
      if (this["s"] < 0) {
        str += '-';
      }

      if (d === 1) {
        str += n;
      } else {

        if (excludeWhole && (whole = Math.floor(n / d)) > 0) {
          str += whole;
          n %= d;
        }

        str += "\\frac{";
        str += n;
        str += '}{';
        str += d;
        str += '}';
      }
      return str;
    },

    /**
     * Returns an array of continued fraction elements
     *
     * Ex: new Fraction("7/8").toContinued() => [0,1,7]
     */
    'toContinued': function() {

      var t;
      var a = this['n'];
      var b = this['d'];
      var res = [];

      if (isNaN(a) || isNaN(b)) {
        return res;
      }

      do {
        res.push(Math.floor(a / b));
        t = a % b;
        a = b;
        b = t;
      } while (a !== 1);

      return res;
    },

    /**
     * Creates a string representation of a fraction with all digits
     *
     * Ex: new Fraction("100.'91823'").toString() => "100.(91823)"
     **/
    'toString': function(dec) {

      var g;
      var N = this["n"];
      var D = this["d"];

      if (isNaN(N) || isNaN(D)) {
        return "NaN";
      }

      dec = dec || 15; // 15 = decimal places when no repetation

      var cycLen = cycleLen(N, D); // Cycle length
      var cycOff = cycleStart(N, D, cycLen); // Cycle start

      var str = this['s'] === -1 ? "-" : "";

      str += N / D | 0;

      N %= D;
      N *= 10;

      if (N)
        str += ".";

      if (cycLen) {

        for (var i = cycOff; i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += "(";
        for (var i = cycLen; i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
        str += ")";
      } else {
        for (var i = dec; N && i--;) {
          str += N / D | 0;
          N %= D;
          N *= 10;
        }
      }
      return str;
    }
  };

  if (typeof define === "function" && define["amd"]) {
    define([], function() {
      return Fraction;
    });
  } else if (typeof exports === "object") {
    Object.defineProperty(Fraction, "__esModule", { 'value': true });
    Fraction['default'] = Fraction;
    Fraction['Fraction'] = Fraction;
    module['exports'] = Fraction;
  } else {
    root['Fraction'] = Fraction;
  }

})(this);

},{}],657:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],658:[function(require,module,exports){
let urlAlphabet =
  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'
let customAlphabet = (alphabet, size) => {
  return () => {
    let id = ''
    let i = size
    while (i--) {
      id += alphabet[(Math.random() * alphabet.length) | 0]
    }
    return id
  }
}
let nanoid = (size = 21) => {
  let id = ''
  let i = size
  while (i--) {
    id += urlAlphabet[(Math.random() * 64) | 0]
  }
  return id
}
module.exports = { nanoid, customAlphabet }

},{}],659:[function(require,module,exports){
module.exports=[{"name":"nodejs","version":"0.2.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.3.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.4.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.5.0","date":"2011-08-26","lts":false,"security":false},{"name":"nodejs","version":"0.6.0","date":"2011-11-04","lts":false,"security":false},{"name":"nodejs","version":"0.7.0","date":"2012-01-17","lts":false,"security":false},{"name":"nodejs","version":"0.8.0","date":"2012-06-22","lts":false,"security":false},{"name":"nodejs","version":"0.9.0","date":"2012-07-20","lts":false,"security":false},{"name":"nodejs","version":"0.10.0","date":"2013-03-11","lts":false,"security":false},{"name":"nodejs","version":"0.11.0","date":"2013-03-28","lts":false,"security":false},{"name":"nodejs","version":"0.12.0","date":"2015-02-06","lts":false,"security":false},{"name":"nodejs","version":"4.0.0","date":"2015-09-08","lts":false,"security":false},{"name":"nodejs","version":"4.1.0","date":"2015-09-17","lts":false,"security":false},{"name":"nodejs","version":"4.2.0","date":"2015-10-12","lts":"Argon","security":false},{"name":"nodejs","version":"4.3.0","date":"2016-02-09","lts":"Argon","security":false},{"name":"nodejs","version":"4.4.0","date":"2016-03-08","lts":"Argon","security":false},{"name":"nodejs","version":"4.5.0","date":"2016-08-16","lts":"Argon","security":false},{"name":"nodejs","version":"4.6.0","date":"2016-09-27","lts":"Argon","security":true},{"name":"nodejs","version":"4.7.0","date":"2016-12-06","lts":"Argon","security":false},{"name":"nodejs","version":"4.8.0","date":"2017-02-21","lts":"Argon","security":false},{"name":"nodejs","version":"4.9.0","date":"2018-03-28","lts":"Argon","security":true},{"name":"nodejs","version":"5.0.0","date":"2015-10-29","lts":false,"security":false},{"name":"nodejs","version":"5.1.0","date":"2015-11-17","lts":false,"security":false},{"name":"nodejs","version":"5.2.0","date":"2015-12-09","lts":false,"security":false},{"name":"nodejs","version":"5.3.0","date":"2015-12-15","lts":false,"security":false},{"name":"nodejs","version":"5.4.0","date":"2016-01-06","lts":false,"security":false},{"name":"nodejs","version":"5.5.0","date":"2016-01-21","lts":false,"security":false},{"name":"nodejs","version":"5.6.0","date":"2016-02-09","lts":false,"security":false},{"name":"nodejs","version":"5.7.0","date":"2016-02-23","lts":false,"security":false},{"name":"nodejs","version":"5.8.0","date":"2016-03-09","lts":false,"security":false},{"name":"nodejs","version":"5.9.0","date":"2016-03-16","lts":false,"security":false},{"name":"nodejs","version":"5.10.0","date":"2016-04-01","lts":false,"security":false},{"name":"nodejs","version":"5.11.0","date":"2016-04-21","lts":false,"security":false},{"name":"nodejs","version":"5.12.0","date":"2016-06-23","lts":false,"security":false},{"name":"nodejs","version":"6.0.0","date":"2016-04-26","lts":false,"security":false},{"name":"nodejs","version":"6.1.0","date":"2016-05-05","lts":false,"security":false},{"name":"nodejs","version":"6.2.0","date":"2016-05-17","lts":false,"security":false},{"name":"nodejs","version":"6.3.0","date":"2016-07-06","lts":false,"security":false},{"name":"nodejs","version":"6.4.0","date":"2016-08-12","lts":false,"security":false},{"name":"nodejs","version":"6.5.0","date":"2016-08-26","lts":false,"security":false},{"name":"nodejs","version":"6.6.0","date":"2016-09-14","lts":false,"security":false},{"name":"nodejs","version":"6.7.0","date":"2016-09-27","lts":false,"security":true},{"name":"nodejs","version":"6.8.0","date":"2016-10-12","lts":false,"security":false},{"name":"nodejs","version":"6.9.0","date":"2016-10-18","lts":"Boron","security":false},{"name":"nodejs","version":"6.10.0","date":"2017-02-21","lts":"Boron","security":false},{"name":"nodejs","version":"6.11.0","date":"2017-06-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.12.0","date":"2017-11-06","lts":"Boron","security":false},{"name":"nodejs","version":"6.13.0","date":"2018-02-10","lts":"Boron","security":false},{"name":"nodejs","version":"6.14.0","date":"2018-03-28","lts":"Boron","security":true},{"name":"nodejs","version":"6.15.0","date":"2018-11-27","lts":"Boron","security":true},{"name":"nodejs","version":"6.16.0","date":"2018-12-26","lts":"Boron","security":false},{"name":"nodejs","version":"6.17.0","date":"2019-02-28","lts":"Boron","security":true},{"name":"nodejs","version":"7.0.0","date":"2016-10-25","lts":false,"security":false},{"name":"nodejs","version":"7.1.0","date":"2016-11-08","lts":false,"security":false},{"name":"nodejs","version":"7.2.0","date":"2016-11-22","lts":false,"security":false},{"name":"nodejs","version":"7.3.0","date":"2016-12-20","lts":false,"security":false},{"name":"nodejs","version":"7.4.0","date":"2017-01-04","lts":false,"security":false},{"name":"nodejs","version":"7.5.0","date":"2017-01-31","lts":false,"security":false},{"name":"nodejs","version":"7.6.0","date":"2017-02-21","lts":false,"security":false},{"name":"nodejs","version":"7.7.0","date":"2017-02-28","lts":false,"security":false},{"name":"nodejs","version":"7.8.0","date":"2017-03-29","lts":false,"security":false},{"name":"nodejs","version":"7.9.0","date":"2017-04-11","lts":false,"security":false},{"name":"nodejs","version":"7.10.0","date":"2017-05-02","lts":false,"security":false},{"name":"nodejs","version":"8.0.0","date":"2017-05-30","lts":false,"security":false},{"name":"nodejs","version":"8.1.0","date":"2017-06-08","lts":false,"security":false},{"name":"nodejs","version":"8.2.0","date":"2017-07-19","lts":false,"security":false},{"name":"nodejs","version":"8.3.0","date":"2017-08-08","lts":false,"security":false},{"name":"nodejs","version":"8.4.0","date":"2017-08-15","lts":false,"security":false},{"name":"nodejs","version":"8.5.0","date":"2017-09-12","lts":false,"security":false},{"name":"nodejs","version":"8.6.0","date":"2017-09-26","lts":false,"security":false},{"name":"nodejs","version":"8.7.0","date":"2017-10-11","lts":false,"security":false},{"name":"nodejs","version":"8.8.0","date":"2017-10-24","lts":false,"security":false},{"name":"nodejs","version":"8.9.0","date":"2017-10-31","lts":"Carbon","security":false},{"name":"nodejs","version":"8.10.0","date":"2018-03-06","lts":"Carbon","security":false},{"name":"nodejs","version":"8.11.0","date":"2018-03-28","lts":"Carbon","security":true},{"name":"nodejs","version":"8.12.0","date":"2018-09-10","lts":"Carbon","security":false},{"name":"nodejs","version":"8.13.0","date":"2018-11-20","lts":"Carbon","security":false},{"name":"nodejs","version":"8.14.0","date":"2018-11-27","lts":"Carbon","security":true},{"name":"nodejs","version":"8.15.0","date":"2018-12-26","lts":"Carbon","security":false},{"name":"nodejs","version":"8.16.0","date":"2019-04-16","lts":"Carbon","security":false},{"name":"nodejs","version":"8.17.0","date":"2019-12-17","lts":"Carbon","security":true},{"name":"nodejs","version":"9.0.0","date":"2017-10-31","lts":false,"security":false},{"name":"nodejs","version":"9.1.0","date":"2017-11-07","lts":false,"security":false},{"name":"nodejs","version":"9.2.0","date":"2017-11-14","lts":false,"security":false},{"name":"nodejs","version":"9.3.0","date":"2017-12-12","lts":false,"security":false},{"name":"nodejs","version":"9.4.0","date":"2018-01-10","lts":false,"security":false},{"name":"nodejs","version":"9.5.0","date":"2018-01-31","lts":false,"security":false},{"name":"nodejs","version":"9.6.0","date":"2018-02-21","lts":false,"security":false},{"name":"nodejs","version":"9.7.0","date":"2018-03-01","lts":false,"security":false},{"name":"nodejs","version":"9.8.0","date":"2018-03-07","lts":false,"security":false},{"name":"nodejs","version":"9.9.0","date":"2018-03-21","lts":false,"security":false},{"name":"nodejs","version":"9.10.0","date":"2018-03-28","lts":false,"security":true},{"name":"nodejs","version":"9.11.0","date":"2018-04-04","lts":false,"security":false},{"name":"nodejs","version":"10.0.0","date":"2018-04-24","lts":false,"security":false},{"name":"nodejs","version":"10.1.0","date":"2018-05-08","lts":false,"security":false},{"name":"nodejs","version":"10.2.0","date":"2018-05-23","lts":false,"security":false},{"name":"nodejs","version":"10.3.0","date":"2018-05-29","lts":false,"security":false},{"name":"nodejs","version":"10.4.0","date":"2018-06-06","lts":false,"security":false},{"name":"nodejs","version":"10.5.0","date":"2018-06-20","lts":false,"security":false},{"name":"nodejs","version":"10.6.0","date":"2018-07-04","lts":false,"security":false},{"name":"nodejs","version":"10.7.0","date":"2018-07-18","lts":false,"security":false},{"name":"nodejs","version":"10.8.0","date":"2018-08-01","lts":false,"security":false},{"name":"nodejs","version":"10.9.0","date":"2018-08-15","lts":false,"security":false},{"name":"nodejs","version":"10.10.0","date":"2018-09-06","lts":false,"security":false},{"name":"nodejs","version":"10.11.0","date":"2018-09-19","lts":false,"security":false},{"name":"nodejs","version":"10.12.0","date":"2018-10-10","lts":false,"security":false},{"name":"nodejs","version":"10.13.0","date":"2018-10-30","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.14.0","date":"2018-11-27","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.15.0","date":"2018-12-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.16.0","date":"2019-05-28","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.17.0","date":"2019-10-22","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.18.0","date":"2019-12-17","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.19.0","date":"2020-02-05","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.20.0","date":"2020-03-26","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.21.0","date":"2020-06-02","lts":"Dubnium","security":true},{"name":"nodejs","version":"10.22.0","date":"2020-07-21","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.23.0","date":"2020-10-27","lts":"Dubnium","security":false},{"name":"nodejs","version":"10.24.0","date":"2021-02-23","lts":"Dubnium","security":true},{"name":"nodejs","version":"11.0.0","date":"2018-10-23","lts":false,"security":false},{"name":"nodejs","version":"11.1.0","date":"2018-10-30","lts":false,"security":false},{"name":"nodejs","version":"11.2.0","date":"2018-11-15","lts":false,"security":false},{"name":"nodejs","version":"11.3.0","date":"2018-11-27","lts":false,"security":true},{"name":"nodejs","version":"11.4.0","date":"2018-12-07","lts":false,"security":false},{"name":"nodejs","version":"11.5.0","date":"2018-12-18","lts":false,"security":false},{"name":"nodejs","version":"11.6.0","date":"2018-12-26","lts":false,"security":false},{"name":"nodejs","version":"11.7.0","date":"2019-01-17","lts":false,"security":false},{"name":"nodejs","version":"11.8.0","date":"2019-01-24","lts":false,"security":false},{"name":"nodejs","version":"11.9.0","date":"2019-01-30","lts":false,"security":false},{"name":"nodejs","version":"11.10.0","date":"2019-02-14","lts":false,"security":false},{"name":"nodejs","version":"11.11.0","date":"2019-03-05","lts":false,"security":false},{"name":"nodejs","version":"11.12.0","date":"2019-03-14","lts":false,"security":false},{"name":"nodejs","version":"11.13.0","date":"2019-03-28","lts":false,"security":false},{"name":"nodejs","version":"11.14.0","date":"2019-04-10","lts":false,"security":false},{"name":"nodejs","version":"11.15.0","date":"2019-04-30","lts":false,"security":false},{"name":"nodejs","version":"12.0.0","date":"2019-04-23","lts":false,"security":false},{"name":"nodejs","version":"12.1.0","date":"2019-04-29","lts":false,"security":false},{"name":"nodejs","version":"12.2.0","date":"2019-05-07","lts":false,"security":false},{"name":"nodejs","version":"12.3.0","date":"2019-05-21","lts":false,"security":false},{"name":"nodejs","version":"12.4.0","date":"2019-06-04","lts":false,"security":false},{"name":"nodejs","version":"12.5.0","date":"2019-06-26","lts":false,"security":false},{"name":"nodejs","version":"12.6.0","date":"2019-07-03","lts":false,"security":false},{"name":"nodejs","version":"12.7.0","date":"2019-07-23","lts":false,"security":false},{"name":"nodejs","version":"12.8.0","date":"2019-08-06","lts":false,"security":false},{"name":"nodejs","version":"12.9.0","date":"2019-08-20","lts":false,"security":false},{"name":"nodejs","version":"12.10.0","date":"2019-09-04","lts":false,"security":false},{"name":"nodejs","version":"12.11.0","date":"2019-09-25","lts":false,"security":false},{"name":"nodejs","version":"12.12.0","date":"2019-10-11","lts":false,"security":false},{"name":"nodejs","version":"12.13.0","date":"2019-10-21","lts":"Erbium","security":false},{"name":"nodejs","version":"12.14.0","date":"2019-12-17","lts":"Erbium","security":true},{"name":"nodejs","version":"12.15.0","date":"2020-02-05","lts":"Erbium","security":true},{"name":"nodejs","version":"12.16.0","date":"2020-02-11","lts":"Erbium","security":false},{"name":"nodejs","version":"12.17.0","date":"2020-05-26","lts":"Erbium","security":false},{"name":"nodejs","version":"12.18.0","date":"2020-06-02","lts":"Erbium","security":true},{"name":"nodejs","version":"12.19.0","date":"2020-10-06","lts":"Erbium","security":false},{"name":"nodejs","version":"12.20.0","date":"2020-11-24","lts":"Erbium","security":false},{"name":"nodejs","version":"12.21.0","date":"2021-02-23","lts":"Erbium","security":true},{"name":"nodejs","version":"12.22.0","date":"2021-03-30","lts":"Erbium","security":false},{"name":"nodejs","version":"13.0.0","date":"2019-10-22","lts":false,"security":false},{"name":"nodejs","version":"13.1.0","date":"2019-11-05","lts":false,"security":false},{"name":"nodejs","version":"13.2.0","date":"2019-11-21","lts":false,"security":false},{"name":"nodejs","version":"13.3.0","date":"2019-12-03","lts":false,"security":false},{"name":"nodejs","version":"13.4.0","date":"2019-12-17","lts":false,"security":true},{"name":"nodejs","version":"13.5.0","date":"2019-12-18","lts":false,"security":false},{"name":"nodejs","version":"13.6.0","date":"2020-01-07","lts":false,"security":false},{"name":"nodejs","version":"13.7.0","date":"2020-01-21","lts":false,"security":false},{"name":"nodejs","version":"13.8.0","date":"2020-02-05","lts":false,"security":true},{"name":"nodejs","version":"13.9.0","date":"2020-02-18","lts":false,"security":false},{"name":"nodejs","version":"13.10.0","date":"2020-03-04","lts":false,"security":false},{"name":"nodejs","version":"13.11.0","date":"2020-03-12","lts":false,"security":false},{"name":"nodejs","version":"13.12.0","date":"2020-03-26","lts":false,"security":false},{"name":"nodejs","version":"13.13.0","date":"2020-04-14","lts":false,"security":false},{"name":"nodejs","version":"13.14.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.0.0","date":"2020-04-21","lts":false,"security":false},{"name":"nodejs","version":"14.1.0","date":"2020-04-29","lts":false,"security":false},{"name":"nodejs","version":"14.2.0","date":"2020-05-05","lts":false,"security":false},{"name":"nodejs","version":"14.3.0","date":"2020-05-19","lts":false,"security":false},{"name":"nodejs","version":"14.4.0","date":"2020-06-02","lts":false,"security":true},{"name":"nodejs","version":"14.5.0","date":"2020-06-30","lts":false,"security":false},{"name":"nodejs","version":"14.6.0","date":"2020-07-20","lts":false,"security":false},{"name":"nodejs","version":"14.7.0","date":"2020-07-29","lts":false,"security":false},{"name":"nodejs","version":"14.8.0","date":"2020-08-11","lts":false,"security":false},{"name":"nodejs","version":"14.9.0","date":"2020-08-27","lts":false,"security":false},{"name":"nodejs","version":"14.10.0","date":"2020-09-08","lts":false,"security":false},{"name":"nodejs","version":"14.11.0","date":"2020-09-15","lts":false,"security":true},{"name":"nodejs","version":"14.12.0","date":"2020-09-22","lts":false,"security":false},{"name":"nodejs","version":"14.13.0","date":"2020-09-29","lts":false,"security":false},{"name":"nodejs","version":"14.14.0","date":"2020-10-15","lts":false,"security":false},{"name":"nodejs","version":"14.15.0","date":"2020-10-27","lts":"Fermium","security":false},{"name":"nodejs","version":"14.16.0","date":"2021-02-23","lts":"Fermium","security":true},{"name":"nodejs","version":"14.17.0","date":"2021-05-11","lts":"Fermium","security":false},{"name":"nodejs","version":"14.18.0","date":"2021-09-28","lts":"Fermium","security":false},{"name":"nodejs","version":"15.0.0","date":"2020-10-20","lts":false,"security":false},{"name":"nodejs","version":"15.1.0","date":"2020-11-04","lts":false,"security":false},{"name":"nodejs","version":"15.2.0","date":"2020-11-10","lts":false,"security":false},{"name":"nodejs","version":"15.3.0","date":"2020-11-24","lts":false,"security":false},{"name":"nodejs","version":"15.4.0","date":"2020-12-09","lts":false,"security":false},{"name":"nodejs","version":"15.5.0","date":"2020-12-22","lts":false,"security":false},{"name":"nodejs","version":"15.6.0","date":"2021-01-14","lts":false,"security":false},{"name":"nodejs","version":"15.7.0","date":"2021-01-25","lts":false,"security":false},{"name":"nodejs","version":"15.8.0","date":"2021-02-02","lts":false,"security":false},{"name":"nodejs","version":"15.9.0","date":"2021-02-18","lts":false,"security":false},{"name":"nodejs","version":"15.10.0","date":"2021-02-23","lts":false,"security":true},{"name":"nodejs","version":"15.11.0","date":"2021-03-03","lts":false,"security":false},{"name":"nodejs","version":"15.12.0","date":"2021-03-17","lts":false,"security":false},{"name":"nodejs","version":"15.13.0","date":"2021-03-31","lts":false,"security":false},{"name":"nodejs","version":"15.14.0","date":"2021-04-06","lts":false,"security":false},{"name":"nodejs","version":"16.0.0","date":"2021-04-20","lts":false,"security":false},{"name":"nodejs","version":"16.1.0","date":"2021-05-04","lts":false,"security":false},{"name":"nodejs","version":"16.2.0","date":"2021-05-19","lts":false,"security":false},{"name":"nodejs","version":"16.3.0","date":"2021-06-03","lts":false,"security":false},{"name":"nodejs","version":"16.4.0","date":"2021-06-23","lts":false,"security":false},{"name":"nodejs","version":"16.5.0","date":"2021-07-14","lts":false,"security":false},{"name":"nodejs","version":"16.6.0","date":"2021-07-29","lts":false,"security":true},{"name":"nodejs","version":"16.7.0","date":"2021-08-18","lts":false,"security":false},{"name":"nodejs","version":"16.8.0","date":"2021-08-25","lts":false,"security":false},{"name":"nodejs","version":"16.9.0","date":"2021-09-07","lts":false,"security":false},{"name":"nodejs","version":"16.10.0","date":"2021-09-22","lts":false,"security":false},{"name":"nodejs","version":"16.11.0","date":"2021-10-08","lts":false,"security":false},{"name":"nodejs","version":"16.12.0","date":"2021-10-20","lts":false,"security":false},{"name":"nodejs","version":"17.0.0","date":"2021-10-19","lts":false,"security":false}]
},{}],660:[function(require,module,exports){
module.exports={"v0.8":{"start":"2012-06-25","end":"2014-07-31"},"v0.10":{"start":"2013-03-11","end":"2016-10-31"},"v0.12":{"start":"2015-02-06","end":"2016-12-31"},"v4":{"start":"2015-09-08","lts":"2015-10-12","maintenance":"2017-04-01","end":"2018-04-30","codename":"Argon"},"v5":{"start":"2015-10-29","maintenance":"2016-04-30","end":"2016-06-30"},"v6":{"start":"2016-04-26","lts":"2016-10-18","maintenance":"2018-04-30","end":"2019-04-30","codename":"Boron"},"v7":{"start":"2016-10-25","maintenance":"2017-04-30","end":"2017-06-30"},"v8":{"start":"2017-05-30","lts":"2017-10-31","maintenance":"2019-01-01","end":"2019-12-31","codename":"Carbon"},"v9":{"start":"2017-10-01","maintenance":"2018-04-01","end":"2018-06-30"},"v10":{"start":"2018-04-24","lts":"2018-10-30","maintenance":"2020-05-19","end":"2021-04-30","codename":"Dubnium"},"v11":{"start":"2018-10-23","maintenance":"2019-04-22","end":"2019-06-01"},"v12":{"start":"2019-04-23","lts":"2019-10-21","maintenance":"2020-11-30","end":"2022-04-30","codename":"Erbium"},"v13":{"start":"2019-10-22","maintenance":"2020-04-01","end":"2020-06-01"},"v14":{"start":"2020-04-21","lts":"2020-10-27","maintenance":"2021-10-19","end":"2023-04-30","codename":"Fermium"},"v15":{"start":"2020-10-20","maintenance":"2021-04-01","end":"2021-06-01"},"v16":{"start":"2021-04-20","lts":"2021-10-26","maintenance":"2022-10-18","end":"2024-04-30","codename":""},"v17":{"start":"2021-10-19","maintenance":"2022-04-01","end":"2022-06-01"},"v18":{"start":"2022-04-19","lts":"2022-10-25","maintenance":"2023-10-18","end":"2025-04-30","codename":""}}
},{}],661:[function(require,module,exports){
'use strict';
module.exports = {
  wrap: wrapRange,
  limit: limitRange,
  validate: validateRange,
  test: testRange,
  curry: curry,
  name: name
};

function wrapRange(min, max, value) {
  var maxLessMin = max - min;
  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;
}

function limitRange(min, max, value) {
  return Math.max(min, Math.min(max, value));
}

function validateRange(min, max, value, minExclusive, maxExclusive) {
  if (!testRange(min, max, value, minExclusive, maxExclusive)) {
    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');
  }
  return value;
}

function testRange(min, max, value, minExclusive, maxExclusive) {
  return !(
       value < min ||
       value > max ||
       (maxExclusive && (value === max)) ||
       (minExclusive && (value === min))
  );
}

function name(min, max, minExcl, maxExcl) {
  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');
}

function curry(min, max, minExclusive, maxExclusive) {
  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);
  return {
    wrap: wrapRange.bind(null, min, max),
    limit: limitRange.bind(null, min, max),
    validate: function(value) {
      return validateRange(min, max, value, minExclusive, maxExclusive);
    },
    test: function(value) {
      return testRange(min, max, value, minExclusive, maxExclusive);
    },
    toString: boundNameFn,
    name: boundNameFn
  };
}

},{}],662:[function(require,module,exports){
(function (process){(function (){
// 'path' module extracted from Node.js v8.11.1 (only the posix part)
// transplited with Babel

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

function assertPath(path) {
  if (typeof path !== 'string') {
    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));
  }
}

// Resolves . and .. elements in a path with directory names
function normalizeStringPosix(path, allowAboveRoot) {
  var res = '';
  var lastSegmentLength = 0;
  var lastSlash = -1;
  var dots = 0;
  var code;
  for (var i = 0; i <= path.length; ++i) {
    if (i < path.length)
      code = path.charCodeAt(i);
    else if (code === 47 /*/*/)
      break;
    else
      code = 47 /*/*/;
    if (code === 47 /*/*/) {
      if (lastSlash === i - 1 || dots === 1) {
        // NOOP
      } else if (lastSlash !== i - 1 && dots === 2) {
        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {
          if (res.length > 2) {
            var lastSlashIndex = res.lastIndexOf('/');
            if (lastSlashIndex !== res.length - 1) {
              if (lastSlashIndex === -1) {
                res = '';
                lastSegmentLength = 0;
              } else {
                res = res.slice(0, lastSlashIndex);
                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');
              }
              lastSlash = i;
              dots = 0;
              continue;
            }
          } else if (res.length === 2 || res.length === 1) {
            res = '';
            lastSegmentLength = 0;
            lastSlash = i;
            dots = 0;
            continue;
          }
        }
        if (allowAboveRoot) {
          if (res.length > 0)
            res += '/..';
          else
            res = '..';
          lastSegmentLength = 2;
        }
      } else {
        if (res.length > 0)
          res += '/' + path.slice(lastSlash + 1, i);
        else
          res = path.slice(lastSlash + 1, i);
        lastSegmentLength = i - lastSlash - 1;
      }
      lastSlash = i;
      dots = 0;
    } else if (code === 46 /*.*/ && dots !== -1) {
      ++dots;
    } else {
      dots = -1;
    }
  }
  return res;
}

function _format(sep, pathObject) {
  var dir = pathObject.dir || pathObject.root;
  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');
  if (!dir) {
    return base;
  }
  if (dir === pathObject.root) {
    return dir + base;
  }
  return dir + sep + base;
}

var posix = {
  // path.resolve([from ...], to)
  resolve: function resolve() {
    var resolvedPath = '';
    var resolvedAbsolute = false;
    var cwd;

    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
      var path;
      if (i >= 0)
        path = arguments[i];
      else {
        if (cwd === undefined)
          cwd = process.cwd();
        path = cwd;
      }

      assertPath(path);

      // Skip empty entries
      if (path.length === 0) {
        continue;
      }

      resolvedPath = path + '/' + resolvedPath;
      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;
    }

    // At this point the path should be resolved to a full absolute path, but
    // handle relative paths to be safe (might happen when process.cwd() fails)

    // Normalize the path
    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);

    if (resolvedAbsolute) {
      if (resolvedPath.length > 0)
        return '/' + resolvedPath;
      else
        return '/';
    } else if (resolvedPath.length > 0) {
      return resolvedPath;
    } else {
      return '.';
    }
  },

  normalize: function normalize(path) {
    assertPath(path);

    if (path.length === 0) return '.';

    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;
    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;

    // Normalize the path
    path = normalizeStringPosix(path, !isAbsolute);

    if (path.length === 0 && !isAbsolute) path = '.';
    if (path.length > 0 && trailingSeparator) path += '/';

    if (isAbsolute) return '/' + path;
    return path;
  },

  isAbsolute: function isAbsolute(path) {
    assertPath(path);
    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;
  },

  join: function join() {
    if (arguments.length === 0)
      return '.';
    var joined;
    for (var i = 0; i < arguments.length; ++i) {
      var arg = arguments[i];
      assertPath(arg);
      if (arg.length > 0) {
        if (joined === undefined)
          joined = arg;
        else
          joined += '/' + arg;
      }
    }
    if (joined === undefined)
      return '.';
    return posix.normalize(joined);
  },

  relative: function relative(from, to) {
    assertPath(from);
    assertPath(to);

    if (from === to) return '';

    from = posix.resolve(from);
    to = posix.resolve(to);

    if (from === to) return '';

    // Trim any leading backslashes
    var fromStart = 1;
    for (; fromStart < from.length; ++fromStart) {
      if (from.charCodeAt(fromStart) !== 47 /*/*/)
        break;
    }
    var fromEnd = from.length;
    var fromLen = fromEnd - fromStart;

    // Trim any leading backslashes
    var toStart = 1;
    for (; toStart < to.length; ++toStart) {
      if (to.charCodeAt(toStart) !== 47 /*/*/)
        break;
    }
    var toEnd = to.length;
    var toLen = toEnd - toStart;

    // Compare paths to find the longest common path from root
    var length = fromLen < toLen ? fromLen : toLen;
    var lastCommonSep = -1;
    var i = 0;
    for (; i <= length; ++i) {
      if (i === length) {
        if (toLen > length) {
          if (to.charCodeAt(toStart + i) === 47 /*/*/) {
            // We get here if `from` is the exact base path for `to`.
            // For example: from='/foo/bar'; to='/foo/bar/baz'
            return to.slice(toStart + i + 1);
          } else if (i === 0) {
            // We get here if `from` is the root
            // For example: from='/'; to='/foo'
            return to.slice(toStart + i);
          }
        } else if (fromLen > length) {
          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {
            // We get here if `to` is the exact base path for `from`.
            // For example: from='/foo/bar/baz'; to='/foo/bar'
            lastCommonSep = i;
          } else if (i === 0) {
            // We get here if `to` is the root.
            // For example: from='/foo'; to='/'
            lastCommonSep = 0;
          }
        }
        break;
      }
      var fromCode = from.charCodeAt(fromStart + i);
      var toCode = to.charCodeAt(toStart + i);
      if (fromCode !== toCode)
        break;
      else if (fromCode === 47 /*/*/)
        lastCommonSep = i;
    }

    var out = '';
    // Generate the relative path based on the path difference between `to`
    // and `from`
    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {
      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {
        if (out.length === 0)
          out += '..';
        else
          out += '/..';
      }
    }

    // Lastly, append the rest of the destination (`to`) path that comes after
    // the common path parts
    if (out.length > 0)
      return out + to.slice(toStart + lastCommonSep);
    else {
      toStart += lastCommonSep;
      if (to.charCodeAt(toStart) === 47 /*/*/)
        ++toStart;
      return to.slice(toStart);
    }
  },

  _makeLong: function _makeLong(path) {
    return path;
  },

  dirname: function dirname(path) {
    assertPath(path);
    if (path.length === 0) return '.';
    var code = path.charCodeAt(0);
    var hasRoot = code === 47 /*/*/;
    var end = -1;
    var matchedSlash = true;
    for (var i = path.length - 1; i >= 1; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          if (!matchedSlash) {
            end = i;
            break;
          }
        } else {
        // We saw the first non-path separator
        matchedSlash = false;
      }
    }

    if (end === -1) return hasRoot ? '/' : '.';
    if (hasRoot && end === 1) return '//';
    return path.slice(0, end);
  },

  basename: function basename(path, ext) {
    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('"ext" argument must be a string');
    assertPath(path);

    var start = 0;
    var end = -1;
    var matchedSlash = true;
    var i;

    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {
      if (ext.length === path.length && ext === path) return '';
      var extIdx = ext.length - 1;
      var firstNonSlashEnd = -1;
      for (i = path.length - 1; i >= 0; --i) {
        var code = path.charCodeAt(i);
        if (code === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else {
          if (firstNonSlashEnd === -1) {
            // We saw the first non-path separator, remember this index in case
            // we need it if the extension ends up not matching
            matchedSlash = false;
            firstNonSlashEnd = i + 1;
          }
          if (extIdx >= 0) {
            // Try to match the explicit extension
            if (code === ext.charCodeAt(extIdx)) {
              if (--extIdx === -1) {
                // We matched the extension, so mark this as the end of our path
                // component
                end = i;
              }
            } else {
              // Extension does not match, so our result is the entire path
              // component
              extIdx = -1;
              end = firstNonSlashEnd;
            }
          }
        }
      }

      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;
      return path.slice(start, end);
    } else {
      for (i = path.length - 1; i >= 0; --i) {
        if (path.charCodeAt(i) === 47 /*/*/) {
            // If we reached a path separator that was not part of a set of path
            // separators at the end of the string, stop now
            if (!matchedSlash) {
              start = i + 1;
              break;
            }
          } else if (end === -1) {
          // We saw the first non-path separator, mark this as the end of our
          // path component
          matchedSlash = false;
          end = i + 1;
        }
      }

      if (end === -1) return '';
      return path.slice(start, end);
    }
  },

  extname: function extname(path) {
    assertPath(path);
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;
    for (var i = path.length - 1; i >= 0; --i) {
      var code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1)
            startDot = i;
          else if (preDotState !== 1)
            preDotState = 1;
      } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
        // We saw a non-dot character immediately before the dot
        preDotState === 0 ||
        // The (right-most) trimmed path component is exactly '..'
        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      return '';
    }
    return path.slice(startDot, end);
  },

  format: function format(pathObject) {
    if (pathObject === null || typeof pathObject !== 'object') {
      throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof pathObject);
    }
    return _format('/', pathObject);
  },

  parse: function parse(path) {
    assertPath(path);

    var ret = { root: '', dir: '', base: '', ext: '', name: '' };
    if (path.length === 0) return ret;
    var code = path.charCodeAt(0);
    var isAbsolute = code === 47 /*/*/;
    var start;
    if (isAbsolute) {
      ret.root = '/';
      start = 1;
    } else {
      start = 0;
    }
    var startDot = -1;
    var startPart = 0;
    var end = -1;
    var matchedSlash = true;
    var i = path.length - 1;

    // Track the state of characters (if any) we see before our first dot and
    // after any path separator we find
    var preDotState = 0;

    // Get non-dir info
    for (; i >= start; --i) {
      code = path.charCodeAt(i);
      if (code === 47 /*/*/) {
          // If we reached a path separator that was not part of a set of path
          // separators at the end of the string, stop now
          if (!matchedSlash) {
            startPart = i + 1;
            break;
          }
          continue;
        }
      if (end === -1) {
        // We saw the first non-path separator, mark this as the end of our
        // extension
        matchedSlash = false;
        end = i + 1;
      }
      if (code === 46 /*.*/) {
          // If this is our first dot, mark it as the start of our extension
          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;
        } else if (startDot !== -1) {
        // We saw a non-dot and non-path separator before our dot, so we should
        // have a good chance at having a non-empty extension
        preDotState = -1;
      }
    }

    if (startDot === -1 || end === -1 ||
    // We saw a non-dot character immediately before the dot
    preDotState === 0 ||
    // The (right-most) trimmed path component is exactly '..'
    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {
      if (end !== -1) {
        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);
      }
    } else {
      if (startPart === 0 && isAbsolute) {
        ret.name = path.slice(1, startDot);
        ret.base = path.slice(1, end);
      } else {
        ret.name = path.slice(startPart, startDot);
        ret.base = path.slice(startPart, end);
      }
      ret.ext = path.slice(startDot, end);
    }

    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';

    return ret;
  },

  sep: '/',
  delimiter: ':',
  win32: null,
  posix: null
};

posix.posix = posix;

module.exports = posix;

}).call(this)}).call(this,require('_process'))
},{"_process":755}],663:[function(require,module,exports){
var x=String;
var create=function() {return {isColorSupported:false,reset:x,bold:x,dim:x,italic:x,underline:x,inverse:x,hidden:x,strikethrough:x,black:x,red:x,green:x,yellow:x,blue:x,magenta:x,cyan:x,white:x,gray:x,bgBlack:x,bgRed:x,bgGreen:x,bgYellow:x,bgBlue:x,bgMagenta:x,bgCyan:x,bgWhite:x}};
module.exports=create();
module.exports.createColors = create;

},{}],664:[function(require,module,exports){
const parser = require('postcss-selector-parser')

function nodeIsInsensitiveAttribute(node) {
	return node.type === 'attribute' && node.insensitive
}

function selectorHasInsensitiveAttribute(selector) {
	return selector.some(nodeIsInsensitiveAttribute)
}

function transformString(strings, charPos, string) {
	const char = string.charAt(charPos)
	if (char === '') {
		return strings
	}

	let newStrings = strings.map(x => x + char)
	const upperChar = char.toLocaleUpperCase()

	if (upperChar !== char) {
		newStrings = newStrings.concat(strings.map(x => x + upperChar))
	}

	return transformString(newStrings, charPos + 1, string)
}

function createSensitiveAtributes(attribute) {
	const attributes = transformString([''], 0, attribute.value)
	return attributes.map(x => {
		const newAttribute = attribute.clone({
			spaces: {
				after: attribute.spaces.after,
				before: attribute.spaces.before
			},
			insensitive: false
		})

		newAttribute.setValue(x)

		return newAttribute
	})
}

function createNewSelectors(selector) {
	let newSelectors = [parser.selector()]

	selector.walk(node => {
		if (!nodeIsInsensitiveAttribute(node)) {
			newSelectors.forEach(newSelector => {
				newSelector.append(node.clone())
			})
			return
		}

		const sensitiveAttributes = createSensitiveAtributes(node)
		const newSelectorsWithSensitiveAttributes = []

		sensitiveAttributes.forEach(newNode => {
			newSelectors.forEach(newSelector => {
				const newSelectorWithNewNode = newSelector.clone()
				newSelectorWithNewNode.append(newNode)
				newSelectorsWithSensitiveAttributes.push(newSelectorWithNewNode)
			})
		})

		newSelectors = newSelectorsWithSensitiveAttributes
	})

	return newSelectors
}

function transform(selectors) {
	let newSelectors = []

	selectors.each(selector => {
		if (selectorHasInsensitiveAttribute(selector)) {
			newSelectors = newSelectors.concat(createNewSelectors(selector))
			selector.remove()
		}
	})

	if (newSelectors.length) {
		newSelectors.forEach(newSelector => selectors.append(newSelector))
	}
}

const caseInsensitiveRegExp = /i(\s*\/\*[\W\w]*?\*\/)*\s*\]/

module.exports = () => {
	return {
		postcssPlugin: 'postcss-attribute-case-insensitive',
		Rule(rule) {
			if (caseInsensitiveRegExp.test(rule.selector)) {
				rule.selector = parser(transform).processSync(rule.selector)
			}
		}
	}
}

module.exports.postcss = true

},{"postcss-selector-parser":693}],665:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=e(require("postcss-value-parser"));function n(e){const n=e.value,i=e.nodes.slice().filter((e=>"comment"!==e.type&&"space"!==e.type));let s=null;if("hsl"===n||"hsla"===n?s=function(e){if(!function(e){if(!e||"word"!==e.type)return!1;if(!o(e))return!1;const n=r.default.unit(e.value);if(!n)return!1;return!!n.number&&("deg"===n.unit||"grad"===n.unit||"rad"===n.unit||"turn"===n.unit||""===n.unit)}(e[0]))return null;if(!t(e[1]))return null;if(!t(e[2]))return null;const n={h:r.default.unit(e[0].value),hNode:e[0],s:r.default.unit(e[1].value),sNode:e[1],l:r.default.unit(e[2].value),lNode:e[2]};if(function(e){switch(e.unit){case"deg":return void(e.unit="");case"rad":return e.unit="",void(e.number=Math.round(180*parseFloat(e.number)/Math.PI).toString());case"grad":return e.unit="",void(e.number=Math.round(.9*parseFloat(e.number)).toString());case"turn":e.unit="",e.number=Math.round(360*parseFloat(e.number)).toString()}}(n.h),""!==n.h.unit)return null;n.hNode.value=n.h.number,l(e[3])&&(n.slash=e[3]);(t(e[4])||u(e[4])||a(e[4]))&&(n.alpha=e[4]);return n}(i):"rgb"!==n&&"rgba"!==n||(s=function(e){if(!t(e[0]))return null;if(!t(e[1]))return null;if(!t(e[2]))return null;const n={r:r.default.unit(e[0].value),rNode:e[0],g:r.default.unit(e[1].value),gNode:e[1],b:r.default.unit(e[2].value),bNode:e[2]};"%"===n.r.unit&&(n.r.number=String(Math.floor(Number(n.r.number)/100*255)),n.rNode.value=n.r.number);"%"===n.g.unit&&(n.g.number=String(Math.floor(Number(n.g.number)/100*255)),n.gNode.value=n.g.number);"%"===n.b.unit&&(n.b.number=String(Math.floor(Number(n.b.number)/100*255)),n.bNode.value=n.b.number);l(e[3])&&(n.slash=e[3]);(t(e[4])||u(e[4])||a(e[4]))&&(n.alpha=e[4]);return n}(i)),!s)return;if(i.length>3&&(!s.slash||!s.alpha))return;!function(e,n,t){"hsl"===e.value||"hsla"===e.value?e.value="hsl":"rgb"!==e.value&&"rgba"!==e.value||(e.value="rgb");if(!n||!t)return;"hsl"===e.value?e.value="hsla":e.value="rgba";if(n.value=",",n.before="",!function(e){if(!e||"word"!==e.type)return!1;if(!o(e))return!1;const n=r.default.unit(e.value);if(!n)return!1;return!!n.number}(t))return;const u=r.default.unit(t.value);if(!u)return;"%"===u.unit&&(u.number=String(parseFloat(u.number)/100),t.value=String(u.number))}(e,s.slash,s.alpha);const[f,c]=function(e){if(function(e){if(void 0!==e.r)return!0;return!1}(e))return[e.rNode,e.gNode,e.bNode];return[e.hNode,e.sNode,e.lNode]}(s);e.nodes.splice(e.nodes.indexOf(f)+1,0,{sourceIndex:0,sourceEndIndex:1,value:",",type:"div",before:"",after:""}),e.nodes.splice(e.nodes.indexOf(c)+1,0,{sourceIndex:0,sourceEndIndex:1,value:",",type:"div",before:"",after:""})}function t(e){if(!e||"word"!==e.type)return!1;if(!o(e))return!1;const n=r.default.unit(e.value);return!!n&&("%"===n.unit||""===n.unit)}function u(e){return e&&"function"===e.type&&"calc"===e.value}function a(e){return e&&"function"===e.type&&"var"===e.value}function l(e){return e&&"div"===e.type&&"/"===e.value}function o(e){if(!e||!e.value)return!1;try{return!1!==r.default.unit(e.value)}catch(e){return!1}}const i=e=>{const t="preserve"in Object(e)&&Boolean(e.preserve);return{postcssPlugin:"postcss-color-functional-notation",Declaration:(e,{result:u,postcss:a})=>{if(t&&function(e){let r=e.parent;for(;r;)if("atrule"===r.type){if("supports"===r.name&&-1!==r.params.indexOf("(color: rgb(0 0 0 / 0.5)) and (color: hsl(0 0% 0% / 0.5))"))return!0;r=r.parent}else r=r.parent;return!1}(e))return;const l=e.value;if(!/(^|[^\w-])(hsla?|rgba?)\(/i.test(l))return;let o;try{o=r.default(l)}catch(r){e.warn(u,`Failed to parse value '${l}' as a hsl or rgb function. Leaving the original value intact.`)}if(void 0===o)return;o.walk((e=>{e.type&&"function"===e.type&&("hsl"!==e.value&&"hsla"!==e.value&&"rgb"!==e.value&&"rgba"!==e.value||n(e))}));const i=String(o);if(i!==l)if(t&&e.variable){const r=e.parent,n="(color: rgb(0 0 0 / 0.5)) and (color: hsl(0 0% 0% / 0.5))",t=a.atRule({name:"supports",params:n,source:e.source}),u=r.clone();u.removeAll(),u.append(e.clone()),t.append(u);let l=r,o=r.next();for(;l&&o&&"atrule"===o.type&&"supports"===o.name&&o.params===n;)l=o,o=o.next();l.after(t),e.value=i}else t?e.cloneBefore({value:i}):e.value=i}}};i.postcss=!0,module.exports=i;


},{"postcss-value-parser":723}],666:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=e(require("postcss-value-parser")),t={preserve:!1};const r=e=>{if(o(e)){const{value:r}=e,a=s.default(r);a.walk((e=>{c(e)&&n(e)}));const l=a.toString();l!==r&&(t.preserve?e.cloneBefore({value:l}):e.value=l)}},a=/^#([0-9A-Fa-f]{4}(?:[0-9A-Fa-f]{4})?)$/,l=/#([0-9A-Fa-f]{4}(?:[0-9A-Fa-f]{4})?)\b/,o=e=>l.test(e.value),c=e=>"word"===e.type&&a.test(e.value),n=e=>{const s=e.value,t=`0x${5===s.length?s.slice(1).replace(/[0-9A-f]/g,"$&$&"):s.slice(1)}`,[r,a,l,o]=[parseInt(t.slice(2,4),16),parseInt(t.slice(4,6),16),parseInt(t.slice(6,8),16),Math.round(parseInt(t.slice(8,10),16)/255*1e5)/1e5];e.value=`rgba(${r},${a},${l},${o})`};function u(e){return t.preserve="preserve"in Object(e)&&Boolean(e.preserve),{postcssPlugin:"postcss-color-hex-alpha",Declaration:r}}u.postcss=!0,module.exports=u;


},{"postcss-value-parser":723}],667:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var r=e(require("postcss-value-parser"));const t=Function.bind.bind(RegExp.prototype.test)(/^rebeccapurple$/i);var o={preserve:!1};const s=e=>{const{value:s}=e;if(n(s)){const n=r.default(s);n.walk((e=>{"word"===e.type&&(e=>{t(e.value)&&(e.value="#639")})(e)}));const c=String(n);c!==s&&(o.preserve?e.cloneBefore({value:c}):e.value=c)}},n=Function.bind.bind(RegExp.prototype.test)(/(^|[^\w-])rebeccapurple([^\w-]|$)/i);function c(e){return o.preserve="preserve"in Object(e)&&Boolean(e.preserve),{postcssPlugin:"postcss-color-rebeccapurple",Declaration:s}}c.postcss=!0,module.exports=c;


},{"postcss-value-parser":723}],668:[function(require,module,exports){
'use strict';

var fs = require('fs');
var path = require('path');
var postcss = require('postcss');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () {
						return e[k];
					}
				});
			}
		});
	}
	n['default'] = e;
	return Object.freeze(n);
}

var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);

function parse(string, splitByAnd) {
  const array = [];
  let buffer = '';
  let split = false;
  let func = 0;
  let i = -1;

  while (++i < string.length) {
    const char = string[i];

    if (char === '(') {
      func += 1;
    } else if (char === ')') {
      if (func > 0) {
        func -= 1;
      }
    } else if (func === 0) {
      if (splitByAnd && andRegExp.test(buffer + char)) {
        split = true;
      } else if (!splitByAnd && char === ',') {
        split = true;
      }
    }

    if (split) {
      array.push(splitByAnd ? new MediaExpression(buffer + char) : new MediaQuery(buffer));
      buffer = '';
      split = false;
    } else {
      buffer += char;
    }
  }

  if (buffer !== '') {
    array.push(splitByAnd ? new MediaExpression(buffer) : new MediaQuery(buffer));
  }

  return array;
}

class MediaQueryList {
  constructor(string) {
    this.nodes = parse(string);
  }

  invert() {
    this.nodes.forEach(node => {
      node.invert();
    });
    return this;
  }

  clone() {
    return new MediaQueryList(String(this));
  }

  toString() {
    return this.nodes.join(',');
  }

}

class MediaQuery {
  constructor(string) {
    const [, before, media, after] = string.match(spaceWrapRegExp);
    const [, modifier = '', afterModifier = ' ', type = '', beforeAnd = '', and = '', beforeExpression = '', expression1 = '', expression2 = ''] = media.match(mediaRegExp) || [];
    const raws = {
      before,
      after,
      afterModifier,
      originalModifier: modifier || '',
      beforeAnd,
      and,
      beforeExpression
    };
    const nodes = parse(expression1 || expression2, true);
    Object.assign(this, {
      modifier,
      type,
      raws,
      nodes
    });
  }

  clone(overrides) {
    const instance = new MediaQuery(String(this));
    Object.assign(instance, overrides);
    return instance;
  }

  invert() {
    this.modifier = this.modifier ? '' : this.raws.originalModifier;
    return this;
  }

  toString() {
    const {
      raws
    } = this;
    return `${raws.before}${this.modifier}${this.modifier ? `${raws.afterModifier}` : ''}${this.type}${raws.beforeAnd}${raws.and}${raws.beforeExpression}${this.nodes.join('')}${this.raws.after}`;
  }

}

class MediaExpression {
  constructor(string) {
    const [, value, after = '', and = '', afterAnd = ''] = string.match(andRegExp) || [null, string];
    const raws = {
      after,
      and,
      afterAnd
    };
    Object.assign(this, {
      value,
      raws
    });
  }

  clone(overrides) {
    const instance = new MediaExpression(String(this));
    Object.assign(instance, overrides);
    return instance;
  }

  toString() {
    const {
      raws
    } = this;
    return `${this.value}${raws.after}${raws.and}${raws.afterAnd}`;
  }

}

const modifierRE = '(not|only)';
const typeRE = '(all|print|screen|speech)';
const noExpressionRE = '([\\W\\w]*)';
const expressionRE = '([\\W\\w]+)';
const noSpaceRE = '(\\s*)';
const spaceRE = '(\\s+)';
const andRE = '(?:(\\s+)(and))';
const andRegExp = new RegExp(`^${expressionRE}(?:${andRE}${spaceRE})$`, 'i');
const spaceWrapRegExp = new RegExp(`^${noSpaceRE}${noExpressionRE}${noSpaceRE}$`);
const mediaRegExp = new RegExp(`^(?:${modifierRE}${spaceRE})?(?:${typeRE}(?:${andRE}${spaceRE}${expressionRE})?|${expressionRE})$`, 'i');
var mediaASTFromString = (string => new MediaQueryList(string));

var getCustomMediaFromRoot = ((root, opts) => {
  // initialize custom selectors
  const customMedias = {}; // for each custom selector atrule that is a child of the css root

  root.nodes.slice().forEach(node => {
    if (isCustomMedia(node)) {
      // extract the name and selectors from the params of the custom selector
      const [, name, selectors] = node.params.match(customMediaParamsRegExp); // write the parsed selectors to the custom selector

      customMedias[name] = mediaASTFromString(selectors); // conditionally remove the custom selector atrule

      if (!Object(opts).preserve) {
        node.remove();
      }
    }
  });
  return customMedias;
}); // match the custom selector name

const customMediaNameRegExp = /^custom-media$/i; // match the custom selector params

const customMediaParamsRegExp = /^(--[A-z][\w-]*)\s+([\W\w]+)\s*$/; // whether the atrule is a custom selector

const isCustomMedia = node => node.type === 'atrule' && customMediaNameRegExp.test(node.name) && customMediaParamsRegExp.test(node.params);

/* Get Custom Media from CSS File
/* ========================================================================== */

async function getCustomMediaFromCSSFile(from) {
  const css = await readFile(from);
  const root = postcss.parse(css, {
    from
  });
  return getCustomMediaFromRoot(root, {
    preserve: true
  });
}
/* Get Custom Media from Object
/* ========================================================================== */


function getCustomMediaFromObject(object) {
  const customMedia = Object.assign({}, Object(object).customMedia, Object(object)['custom-media']);

  for (const key in customMedia) {
    customMedia[key] = mediaASTFromString(customMedia[key]);
  }

  return customMedia;
}
/* Get Custom Media from JSON file
/* ========================================================================== */


async function getCustomMediaFromJSONFile(from) {
  const object = await readJSON(from);
  return getCustomMediaFromObject(object);
}
/* Get Custom Media from JS file
/* ========================================================================== */


async function getCustomMediaFromJSFile(from) {
  const object = await Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require(from)); });
  return getCustomMediaFromObject(object);
}
/* Get Custom Media from Sources
/* ========================================================================== */


function getCustomMediaFromSources(sources) {
  return sources.map(source => {
    if (source instanceof Promise) {
      return source;
    } else if (source instanceof Function) {
      return source();
    } // read the source as an object


    const opts = source === Object(source) ? source : {
      from: String(source)
    }; // skip objects with custom media

    if (Object(opts).customMedia || Object(opts)['custom-media']) {
      return opts;
    } // source pathname


    const from = path__default['default'].resolve(String(opts.from || '')); // type of file being read from

    const type = (opts.type || path__default['default'].extname(from).slice(1)).toLowerCase();
    return {
      type,
      from
    };
  }).reduce(async (customMedia, source) => {
    const {
      type,
      from
    } = await source;

    if (type === 'css' || type === 'pcss') {
      return Object.assign(await customMedia, await getCustomMediaFromCSSFile(from));
    }

    if (type === 'js') {
      return Object.assign(await customMedia, await getCustomMediaFromJSFile(from));
    }

    if (type === 'json') {
      return Object.assign(await customMedia, await getCustomMediaFromJSONFile(from));
    }

    return Object.assign(await customMedia, getCustomMediaFromObject(await source));
  }, {});
}
/* Helper utilities
/* ========================================================================== */

const readFile = from => new Promise((resolve, reject) => {
  fs__default['default'].readFile(from, 'utf8', (error, result) => {
    if (error) {
      reject(error);
    } else {
      resolve(result);
    }
  });
});

const readJSON = async from => JSON.parse(await readFile(from));

// return transformed medias, replacing custom pseudo medias with custom medias
function transformMediaList(mediaList, customMedias) {
  let index = mediaList.nodes.length - 1;

  while (index >= 0) {
    const transformedMedias = transformMedia(mediaList.nodes[index], customMedias);

    if (transformedMedias.length) {
      mediaList.nodes.splice(index, 1, ...transformedMedias);
    }

    --index;
  }

  return mediaList;
} // return custom pseudo medias replaced with custom medias

function transformMedia(media, customMedias) {
  const transpiledMedias = [];

  for (const index in media.nodes) {
    const {
      value,
      nodes
    } = media.nodes[index];
    const key = value.replace(customPseudoRegExp, '$1');

    if (key in customMedias) {
      for (const replacementMedia of customMedias[key].nodes) {
        // use the first available modifier unless they cancel each other out
        const modifier = media.modifier !== replacementMedia.modifier ? media.modifier || replacementMedia.modifier : '';
        const mediaClone = media.clone({
          modifier,
          // conditionally use the raws from the first available modifier
          raws: !modifier || media.modifier ? { ...media.raws
          } : { ...replacementMedia.raws
          },
          type: media.type || replacementMedia.type
        }); // conditionally include more replacement raws when the type is present

        if (mediaClone.type === replacementMedia.type) {
          Object.assign(mediaClone.raws, {
            and: replacementMedia.raws.and,
            beforeAnd: replacementMedia.raws.beforeAnd,
            beforeExpression: replacementMedia.raws.beforeExpression
          });
        }

        mediaClone.nodes.splice(index, 1, ...replacementMedia.clone().nodes.map(node => {
          // use raws and spacing from the current usage
          if (media.nodes[index].raws.and) {
            node.raws = { ...media.nodes[index].raws
            };
          }

          node.spaces = { ...media.nodes[index].spaces
          };
          return node;
        })); // remove the currently transformed key to prevent recursion

        const nextCustomMedia = getCustomMediasWithoutKey(customMedias, key);
        const retranspiledMedias = transformMedia(mediaClone, nextCustomMedia);

        if (retranspiledMedias.length) {
          transpiledMedias.push(...retranspiledMedias);
        } else {
          transpiledMedias.push(mediaClone);
        }
      }

      return transpiledMedias;
    } else if (nodes && nodes.length) {
      transformMediaList(media.nodes[index], customMedias);
    }
  }

  return transpiledMedias;
}

const customPseudoRegExp = /\((--[A-z][\w-]*)\)/;

const getCustomMediasWithoutKey = (customMedias, key) => {
  const nextCustomMedias = Object.assign({}, customMedias);
  delete nextCustomMedias[key];
  return nextCustomMedias;
};

var transformAtrules = ((root, customMedia, opts) => {
  root.walkAtRules(mediaAtRuleRegExp, atrule => {
    if (customPseudoRegExp$1.test(atrule.params)) {
      const mediaAST = mediaASTFromString(atrule.params);
      const params = String(transformMediaList(mediaAST, customMedia));

      if (opts.preserve) {
        atrule.cloneBefore({
          params
        });
      } else {
        atrule.params = params;
      }
    }
  });
});
const mediaAtRuleRegExp = /^media$/i;
const customPseudoRegExp$1 = /\(--[A-z][\w-]*\)/;

/* Write Custom Media from CSS File
/* ========================================================================== */

async function writeCustomMediaToCssFile(to, customMedia) {
  const cssContent = Object.keys(customMedia).reduce((cssLines, name) => {
    cssLines.push(`@custom-media ${name} ${customMedia[name]};`);
    return cssLines;
  }, []).join('\n');
  const css = `${cssContent}\n`;
  await writeFile(to, css);
}
/* Write Custom Media from JSON file
/* ========================================================================== */


async function writeCustomMediaToJsonFile(to, customMedia) {
  const jsonContent = JSON.stringify({
    'custom-media': customMedia
  }, null, '  ');
  const json = `${jsonContent}\n`;
  await writeFile(to, json);
}
/* Write Custom Media from Common JS file
/* ========================================================================== */


async function writeCustomMediaToCjsFile(to, customMedia) {
  const jsContents = Object.keys(customMedia).reduce((jsLines, name) => {
    jsLines.push(`\t\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);
    return jsLines;
  }, []).join(',\n');
  const js = `module.exports = {\n\tcustomMedia: {\n${jsContents}\n\t}\n};\n`;
  await writeFile(to, js);
}
/* Write Custom Media from Module JS file
/* ========================================================================== */


async function writeCustomMediaToMjsFile(to, customMedia) {
  const mjsContents = Object.keys(customMedia).reduce((mjsLines, name) => {
    mjsLines.push(`\t'${escapeForJS(name)}': '${escapeForJS(customMedia[name])}'`);
    return mjsLines;
  }, []).join(',\n');
  const mjs = `export const customMedia = {\n${mjsContents}\n};\n`;
  await writeFile(to, mjs);
}
/* Write Custom Media to Exports
/* ========================================================================== */


function writeCustomMediaToExports(customMedia, destinations) {
  return Promise.all(destinations.map(async destination => {
    if (destination instanceof Function) {
      await destination(defaultCustomMediaToJSON(customMedia));
    } else {
      // read the destination as an object
      const opts = destination === Object(destination) ? destination : {
        to: String(destination)
      }; // transformer for custom media into a JSON-compatible object

      const toJSON = opts.toJSON || defaultCustomMediaToJSON;

      if ('customMedia' in opts) {
        // write directly to an object as customMedia
        opts.customMedia = toJSON(customMedia);
      } else if ('custom-media' in opts) {
        // write directly to an object as custom-media
        opts['custom-media'] = toJSON(customMedia);
      } else {
        // destination pathname
        const to = String(opts.to || ''); // type of file being written to

        const type = (opts.type || path__default['default'].extname(to).slice(1)).toLowerCase(); // transformed custom media

        const customMediaJSON = toJSON(customMedia);

        if (type === 'css') {
          await writeCustomMediaToCssFile(to, customMediaJSON);
        }

        if (type === 'js') {
          await writeCustomMediaToCjsFile(to, customMediaJSON);
        }

        if (type === 'json') {
          await writeCustomMediaToJsonFile(to, customMediaJSON);
        }

        if (type === 'mjs') {
          await writeCustomMediaToMjsFile(to, customMediaJSON);
        }
      }
    }
  }));
}
/* Helper utilities
/* ========================================================================== */

const defaultCustomMediaToJSON = customMedia => {
  return Object.keys(customMedia).reduce((customMediaJSON, key) => {
    customMediaJSON[key] = String(customMedia[key]);
    return customMediaJSON;
  }, {});
};

const writeFile = (to, text) => new Promise((resolve, reject) => {
  fs__default['default'].writeFile(to, text, error => {
    if (error) {
      reject(error);
    } else {
      resolve();
    }
  });
});

const escapeForJS = string => string.replace(/\\([\s\S])|(')/g, '\\$1$2').replace(/\n/g, '\\n').replace(/\r/g, '\\r');

const creator = opts => {
  // whether to preserve custom media and at-rules using them
  const preserve = 'preserve' in Object(opts) ? Boolean(opts.preserve) : false; // sources to import custom media from

  const importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom media to

  const exportTo = [].concat(Object(opts).exportTo || []); // promise any custom media are imported

  const customMediaPromise = getCustomMediaFromSources(importFrom);
  return {
    postcssPlugin: 'postcss-custom-media',
    Once: async root => {
      const customMedia = Object.assign(await customMediaPromise, getCustomMediaFromRoot(root, {
        preserve
      }));
      await writeCustomMediaToExports(customMedia, exportTo);
      transformAtrules(root, customMedia, {
        preserve
      });
    }
  };
};

creator.postcss = true;

module.exports = creator;


},{"fs":82,"path":662,"postcss":743}],669:[function(require,module,exports){
"use strict";var e=require("postcss-value-parser"),t=require("fs"),s=require("path"),r=require("postcss");function n(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function o(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(s){if("default"!==s){var r=Object.getOwnPropertyDescriptor(e,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return e[s]}})}})),t.default=e,Object.freeze(t)}var a=n(e),c=n(t),i=n(s);function u(e){var t=e.selector?e:e.parent;return/(!\s*)?postcss-custom-properties:\s*off\b/i.test(t.toString())}function l(e,t){const s={},r={};return e.nodes.slice().forEach((e=>{const n=v(e)?s:d(e)?r:null;n&&(e.nodes.slice().forEach((e=>{if(j(e)&&!u(e)){const{prop:s}=e;n[s]=a.default(e.value),t.preserve||e.remove()}})),t.preserve||!m(e)||u(e)||e.remove())})),{...s,...r}}const p=/^html$/i,f=/^:root$/i,w=/^--[A-z][\w-]*$/,v=e=>"rule"===e.type&&e.selector.split(",").some((e=>p.test(e)))&&Object(e.nodes).length,d=e=>"rule"===e.type&&e.selector.split(",").some((e=>f.test(e)))&&Object(e.nodes).length,j=e=>"decl"===e.type&&w.test(e.prop),m=e=>0===Object(e.nodes).length;function O(e){const t=Object.assign({},Object(e).customProperties,Object(e)["custom-properties"]);for(const e in t)t[e]=a.default(String(t[e]));return t}function b(e){return e.map((e=>{if(e instanceof Promise)return e;if(e instanceof Function)return e();const t=e===Object(e)?e:{from:String(e)};if(t.customProperties||t["custom-properties"])return t;const s=i.default.resolve(String(t.from||""));return{type:(t.type||i.default.extname(s).slice(1)).toLowerCase(),from:s}})).reduce((async(e,t)=>{const{type:s,from:n}=await t;return"css"===s||"pcss"===s?Object.assign(await e,await async function(e){const t=await g(e);return l(r.parse(t,{from:e}),{preserve:!0})}(n)):"js"===s?Object.assign(await e,await async function(e){var t;return O(await(t=e,Promise.resolve().then((function(){return o(require(t))}))))}(n)):"json"===s?Object.assign(await e,await async function(e){return O(await y(e))}(n)):Object.assign(await e,await O(await t))}),{})}const g=e=>new Promise(((t,s)=>{c.default.readFile(e,"utf8",((e,r)=>{e?s(e):t(r)}))})),y=async e=>JSON.parse(await g(e));function $(e,t){return e.nodes&&e.nodes.length&&e.nodes.slice().forEach((s=>{if(P(s)){const[r,...n]=s.nodes.filter((e=>"div"!==e.type)),{value:o}=r,a=e.nodes.indexOf(s);if(o in Object(t)){const s=t[o].nodes;!function(e,t,s){const r=Object.assign({},t);delete r[s],$(e,r)}({nodes:s},t,o),a>-1&&e.nodes.splice(a,1,...s)}else n.length&&(a>-1&&e.nodes.splice(a,1,...n),$(e,t))}else $(s,t)})),e.toString()}const h=/^var$/i,P=e=>"function"===e.type&&h.test(e.value)&&Object(e.nodes).length>0;var S=(e,t,s)=>{if(q(e)&&(n=(r=e).prev(),!Boolean(u(r)||n&&"comment"===n.type&&/(!\s*)?postcss-custom-properties:\s*ignore\s+next\b/i.test(n.text)))){const r=e.value;let n=$(a.default(r),t);const o=new Set;for(;k.test(n)&&!o.has(n);){o.add(n);n=$(a.default(n),t)}if(n!==r)if(s.preserve){const t=e.cloneBefore({value:n});F(t)&&(t.raws.value.value=t.value.replace(E,"$1"),t.raws.value.raw=t.raws.value.value+t.raws.value.raw.replace(E,"$2"))}else e.value=n,F(e)&&(e.raws.value.value=e.value.replace(E,"$1"),e.raws.value.raw=e.raws.value.value+e.raws.value.raw.replace(E,"$2"))}var r,n};const x=/^--[A-z][\w-]*$/,k=/(^|[^\w-])var\([\W\w]+\)/,q=e=>!x.test(e.prop)&&k.test(e.value),F=e=>"value"in Object(Object(e.raws).value)&&"raw"in e.raws.value&&E.test(e.raws.value.raw),E=/^([\W\w]+)(\s*\/\*[\W\w]+?\*\/)$/;function z(e,t){return Promise.all(t.map((async t=>{if(t instanceof Function)await t(B(e));else{const s=t===Object(t)?t:{to:String(t)},r=s.toJSON||B;if("customProperties"in s)s.customProperties=r(e);else if("custom-properties"in s)s["custom-properties"]=r(e);else{const t=String(s.to||""),n=(s.type||i.default.extname(s.to).slice(1)).toLowerCase(),o=r(e);"css"===n&&await async function(e,t){const s=`:root {\n${Object.keys(t).reduce(((e,s)=>(e.push(`\t${s}: ${t[s]};`),e)),[]).join("\n")}\n}\n`;await D(e,s)}(t,o),"scss"===n&&await async function(e,t){const s=`${Object.keys(t).reduce(((e,s)=>{const r=s.replace("--","$");return e.push(`${r}: ${t[s]};`),e}),[]).join("\n")}\n`;await D(e,s)}(t,o),"js"===n&&await async function(e,t){const s=`module.exports = {\n\tcustomProperties: {\n${Object.keys(t).reduce(((e,s)=>(e.push(`\t\t'${J(s)}': '${J(t[s])}'`),e)),[]).join(",\n")}\n\t}\n};\n`;await D(e,s)}(t,o),"json"===n&&await async function(e,t){const s=`${JSON.stringify({"custom-properties":t},null,"  ")}\n`;await D(e,s)}(t,o),"mjs"===n&&await async function(e,t){const s=`export const customProperties = {\n${Object.keys(t).reduce(((e,s)=>(e.push(`\t'${J(s)}': '${J(t[s])}'`),e)),[]).join(",\n")}\n};\n`;await D(e,s)}(t,o)}}})))}const B=e=>Object.keys(e).reduce(((t,s)=>{const r=e[s];return t[s]=r.toString(),t}),{}),D=(e,t)=>new Promise(((s,r)=>{c.default.writeFile(e,t,(e=>{e?r(e):s()}))})),J=e=>e.replace(/\\([\s\S])|(')/g,"\\$1$2").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),N=e=>{const t=!("preserve"in Object(e))||Boolean(e.preserve),s=[].concat(Object(e).importFrom||[]),r=[].concat(Object(e).exportTo||[]),n=b(s);let o;const a=0===s.length&&0===r.length;return{postcssPlugin:"postcss-custom-properties",prepare:({root:e})=>a?(o=l(e,{preserve:t}),{Declaration:e=>S(e,o,{preserve:t})}):{Once:async e=>{o=Object.assign({},l(e,{preserve:t}),await n),await z(o,r)},Declaration:e=>S(e,o,{preserve:t})}}};N.postcss=!0,module.exports=N;


},{"fs":82,"path":662,"postcss":743,"postcss-value-parser":723}],670:[function(require,module,exports){
'use strict';

var parser = require('postcss-selector-parser');
var fs = require('fs');
var path = require('path');
var postcss = require('postcss');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () {
						return e[k];
					}
				});
			}
		});
	}
	n['default'] = e;
	return Object.freeze(n);
}

var parser__default = /*#__PURE__*/_interopDefaultLegacy(parser);
var fs__default = /*#__PURE__*/_interopDefaultLegacy(fs);
var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
var postcss__default = /*#__PURE__*/_interopDefaultLegacy(postcss);

/* Return a Selectors AST from a Selectors String
/* ========================================================================== */

var getSelectorsAstFromSelectorsString = (selectorString => {
  let selectorAST;
  parser__default['default'](selectors => {
    selectorAST = selectors;
  }).processSync(selectorString);
  return selectorAST;
});

var getCustomSelectors = ((root, opts) => {
  // initialize custom selectors
  const customSelectors = {}; // for each custom selector atrule that is a child of the css root

  root.nodes.slice().forEach(node => {
    if (isCustomSelector(node)) {
      // extract the name and selectors from the params of the custom selector
      const [, name, selectors] = node.params.match(customSelectorParamsRegExp); // write the parsed selectors to the custom selector

      customSelectors[name] = getSelectorsAstFromSelectorsString(selectors); // conditionally remove the custom selector atrule

      if (!Object(opts).preserve) {
        node.remove();
      }
    }
  });
  return customSelectors;
}); // match the custom selector name

const customSelectorNameRegExp = /^custom-selector$/i; // match the custom selector params

const customSelectorParamsRegExp = /^(:--[A-z][\w-]*)\s+([\W\w]+)\s*$/; // whether the atrule is a custom selector

const isCustomSelector = node => node.type === 'atrule' && customSelectorNameRegExp.test(node.name) && customSelectorParamsRegExp.test(node.params);

// return transformed selectors, replacing custom pseudo selectors with custom selectors
function transformSelectorList(selectorList, customSelectors) {
  let index = selectorList.nodes.length - 1;

  while (index >= 0) {
    const transformedSelectors = transformSelector(selectorList.nodes[index], customSelectors);

    if (transformedSelectors.length) {
      selectorList.nodes.splice(index, 1, ...transformedSelectors);
    }

    --index;
  }

  return selectorList;
} // return custom pseudo selectors replaced with custom selectors

function transformSelector(selector, customSelectors) {
  const transpiledSelectors = [];

  for (const index in selector.nodes) {
    const {
      value,
      nodes
    } = selector.nodes[index];

    if (value in customSelectors) {
      for (const replacementSelector of customSelectors[value].nodes) {
        const selectorClone = selector.clone();
        selectorClone.nodes.splice(index, 1, ...replacementSelector.clone().nodes.map(node => {
          // use spacing from the current usage
          node.spaces = { ...selector.nodes[index].spaces
          };
          return node;
        }));
        const retranspiledSelectors = transformSelector(selectorClone, customSelectors);
        adjustNodesBySelectorEnds(selectorClone.nodes, Number(index));

        if (retranspiledSelectors.length) {
          transpiledSelectors.push(...retranspiledSelectors);
        } else {
          transpiledSelectors.push(selectorClone);
        }
      }

      return transpiledSelectors;
    } else if (nodes && nodes.length) {
      transformSelectorList(selector.nodes[index], customSelectors);
    }
  }

  return transpiledSelectors;
} // match selectors by difficult-to-separate ends


const withoutSelectorStartMatch = /^(tag|universal)$/;
const withoutSelectorEndMatch = /^(class|id|pseudo|tag|universal)$/;

const isWithoutSelectorStart = node => withoutSelectorStartMatch.test(Object(node).type);

const isWithoutSelectorEnd = node => withoutSelectorEndMatch.test(Object(node).type); // adjust nodes by selector ends (so that .class:--h1 becomes h1.class rather than .classh1)


const adjustNodesBySelectorEnds = (nodes, index) => {
  if (index && isWithoutSelectorStart(nodes[index]) && isWithoutSelectorEnd(nodes[index - 1])) {
    let safeIndex = index - 1;

    while (safeIndex && isWithoutSelectorEnd(nodes[safeIndex])) {
      --safeIndex;
    }

    if (safeIndex < index) {
      const node = nodes.splice(index, 1)[0];
      nodes.splice(safeIndex, 0, node);
      nodes[safeIndex].spaces.before = nodes[safeIndex + 1].spaces.before;
      nodes[safeIndex + 1].spaces.before = '';

      if (nodes[index]) {
        nodes[index].spaces.after = nodes[safeIndex].spaces.after;
        nodes[safeIndex].spaces.after = '';
      }
    }
  }
};

var transformRules = ((root, customSelectors, opts) => {
  root.walkRules(customPseudoRegExp, rule => {
    const selector = parser__default['default'](selectors => {
      transformSelectorList(selectors, customSelectors);
    }).processSync(rule.selector);

    if (opts.preserve) {
      rule.cloneBefore({
        selector
      });
    } else {
      rule.selector = selector;
    }
  });
});
const customPseudoRegExp = /:--[A-z][\w-]*/;

/* Import Custom Selectors from CSS AST
/* ========================================================================== */

function importCustomSelectorsFromCSSAST(root) {
  return getCustomSelectors(root);
}
/* Import Custom Selectors from CSS File
/* ========================================================================== */


async function importCustomSelectorsFromCSSFile(from) {
  const css = await readFile(path__default['default'].resolve(from));
  const root = postcss__default['default'].parse(css, {
    from: path__default['default'].resolve(from)
  });
  return importCustomSelectorsFromCSSAST(root);
}
/* Import Custom Selectors from Object
/* ========================================================================== */


function importCustomSelectorsFromObject(object) {
  const customSelectors = Object.assign({}, Object(object).customSelectors || Object(object)['custom-selectors']);

  for (const key in customSelectors) {
    customSelectors[key] = getSelectorsAstFromSelectorsString(customSelectors[key]);
  }

  return customSelectors;
}
/* Import Custom Selectors from JSON file
/* ========================================================================== */


async function importCustomSelectorsFromJSONFile(from) {
  const object = await readJSON(path__default['default'].resolve(from));
  return importCustomSelectorsFromObject(object);
}
/* Import Custom Selectors from JS file
/* ========================================================================== */


async function importCustomSelectorsFromJSFile(from) {
  const object = await Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require(path__default['default'].resolve(from))); });
  return importCustomSelectorsFromObject(object);
}
/* Import Custom Selectors from Sources
/* ========================================================================== */


function importCustomSelectorsFromSources(sources) {
  return sources.map(source => {
    if (source instanceof Promise) {
      return source;
    } else if (source instanceof Function) {
      return source();
    } // read the source as an object


    const opts = source === Object(source) ? source : {
      from: String(source)
    }; // skip objects with custom selectors

    if (Object(opts).customSelectors || Object(opts)['custom-selectors']) {
      return opts;
    } // source pathname


    const from = String(opts.from || ''); // type of file being read from

    const type = (opts.type || path__default['default'].extname(from).slice(1)).toLowerCase();
    return {
      type,
      from
    };
  }).reduce(async (customSelectorsPromise, source) => {
    const customSelectors = await customSelectorsPromise;
    const {
      type,
      from
    } = await source;

    if (type === 'ast') {
      return Object.assign(customSelectors, importCustomSelectorsFromCSSAST(from));
    }

    if (type === 'css') {
      return Object.assign(customSelectors, await importCustomSelectorsFromCSSFile(from));
    }

    if (type === 'js') {
      return Object.assign(customSelectors, await importCustomSelectorsFromJSFile(from));
    }

    if (type === 'json') {
      return Object.assign(customSelectors, await importCustomSelectorsFromJSONFile(from));
    }

    return Object.assign(customSelectors, importCustomSelectorsFromObject(await source));
  }, Promise.resolve({}));
}
/* Helper utilities
/* ========================================================================== */

const readFile = from => new Promise((resolve, reject) => {
  fs__default['default'].readFile(from, 'utf8', (error, result) => {
    if (error) {
      reject(error);
    } else {
      resolve(result);
    }
  });
});

const readJSON = async from => JSON.parse(await readFile(from));

/* Import Custom Selectors from CSS File
/* ========================================================================== */

async function exportCustomSelectorsToCssFile(to, customSelectors) {
  const cssContent = Object.keys(customSelectors).reduce((cssLines, name) => {
    cssLines.push(`@custom-selector ${name} ${customSelectors[name]};`);
    return cssLines;
  }, []).join('\n');
  const css = `${cssContent}\n`;
  await writeFile(to, css);
}
/* Import Custom Selectors from JSON file
/* ========================================================================== */


async function exportCustomSelectorsToJsonFile(to, customSelectors) {
  const jsonContent = JSON.stringify({
    'custom-selectors': customSelectors
  }, null, '  ');
  const json = `${jsonContent}\n`;
  await writeFile(to, json);
}
/* Import Custom Selectors from Common JS file
/* ========================================================================== */


async function exportCustomSelectorsToCjsFile(to, customSelectors) {
  const jsContents = Object.keys(customSelectors).reduce((jsLines, name) => {
    jsLines.push(`\t\t'${escapeForJS(name)}': '${escapeForJS(customSelectors[name])}'`);
    return jsLines;
  }, []).join(',\n');
  const js = `module.exports = {\n\tcustomSelectors: {\n${jsContents}\n\t}\n};\n`;
  await writeFile(to, js);
}
/* Import Custom Selectors from Module JS file
/* ========================================================================== */


async function exportCustomSelectorsToMjsFile(to, customSelectors) {
  const mjsContents = Object.keys(customSelectors).reduce((mjsLines, name) => {
    mjsLines.push(`\t'${escapeForJS(name)}': '${escapeForJS(customSelectors[name])}'`);
    return mjsLines;
  }, []).join(',\n');
  const mjs = `export const customSelectors = {\n${mjsContents}\n};\n`;
  await writeFile(to, mjs);
}
/* Export Custom Selectors to Destinations
/* ========================================================================== */


function exportCustomSelectorsToDestinations(customSelectors, destinations) {
  return Promise.all(destinations.map(async destination => {
    if (destination instanceof Function) {
      await destination(defaultCustomSelectorsToJSON(customSelectors));
    } else {
      // read the destination as an object
      const opts = destination === Object(destination) ? destination : {
        to: String(destination)
      }; // transformer for custom selectors into a JSON-compatible object

      const toJSON = opts.toJSON || defaultCustomSelectorsToJSON;

      if ('customSelectors' in opts) {
        // write directly to an object as customSelectors
        opts.customSelectors = toJSON(customSelectors);
      } else if ('custom-selectors' in opts) {
        // write directly to an object as custom-selectors
        opts['custom-selectors'] = toJSON(customSelectors);
      } else {
        // destination pathname
        const to = String(opts.to || ''); // type of file being written to

        const type = (opts.type || path__default['default'].extname(opts.to).slice(1)).toLowerCase(); // transformed custom selectors

        const customSelectorsJSON = toJSON(customSelectors);

        if (type === 'css') {
          await exportCustomSelectorsToCssFile(to, customSelectorsJSON);
        }

        if (type === 'js') {
          await exportCustomSelectorsToCjsFile(to, customSelectorsJSON);
        }

        if (type === 'json') {
          await exportCustomSelectorsToJsonFile(to, customSelectorsJSON);
        }

        if (type === 'mjs') {
          await exportCustomSelectorsToMjsFile(to, customSelectorsJSON);
        }
      }
    }
  }));
}
/* Helper utilities
/* ========================================================================== */

const defaultCustomSelectorsToJSON = customSelectors => {
  return Object.keys(customSelectors).reduce((customSelectorsJSON, key) => {
    customSelectorsJSON[key] = String(customSelectors[key]);
    return customSelectorsJSON;
  }, {});
};

const writeFile = (to, text) => new Promise((resolve, reject) => {
  fs__default['default'].writeFile(to, text, error => {
    if (error) {
      reject(error);
    } else {
      resolve();
    }
  });
});

const escapeForJS = string => string.replace(/\\([\s\S])|(')/g, '\\$1$2').replace(/\n/g, '\\n').replace(/\r/g, '\\r');

const postcssCustomSelectors = opts => {
  // whether to preserve custom selectors and rules using them
  const preserve = Boolean(Object(opts).preserve); // sources to import custom selectors from

  const importFrom = [].concat(Object(opts).importFrom || []); // destinations to export custom selectors to

  const exportTo = [].concat(Object(opts).exportTo || []); // promise any custom selectors are imported

  const customSelectorsPromise = importCustomSelectorsFromSources(importFrom);
  return {
    postcssPlugin: 'postcss-custom-selectors',

    async Once(root) {
      const customProperties = Object.assign({}, await customSelectorsPromise, getCustomSelectors(root, {
        preserve
      }));
      await exportCustomSelectorsToDestinations(customProperties, exportTo);
      transformRules(root, customProperties, {
        preserve
      });
    }

  };
};

postcssCustomSelectors.postcss = true;

module.exports = postcssCustomSelectors;


},{"fs":82,"path":662,"postcss":743,"postcss-selector-parser":693}],671:[function(require,module,exports){
"use strict";const e=require("postcss-selector-parser"),t=/:dir\([^)]*\)/;module.exports=function(r){const o=Object(r).dir,s=Boolean(Object(r).preserve),n=Boolean(Object(r).shadow);return{postcssPlugin:"postcss-dir-pseudo-class",Rule(r,{result:a}){let l,c=!1;if(t.test(r.selector)){try{l=e((t=>{t.nodes.forEach((t=>{t.walk((t=>{if("pseudo"!==t.type)return;if(":dir"!==t.value)return;const s=t.nodes.toString();if("rtl"!==s&&"ltr"!==s)return;const l=t.parent;l.nodes.filter((e=>"pseudo"===e.type&&":dir"===e.value)).length>1&&!c&&(c=!0,r.warn(a,`Hierarchical :dir pseudo class usage can't be transformed correctly to [dir] attributes. This will lead to incorrect selectors for "${r.selector}"`));const p=t.prev(),i=t.next(),u=p&&p.type&&"combinator"!==p.type,d=i&&i.type&&"combinator"!==i.type,v=i&&i.type&&("combinator"!==i.type||"combinator"===i.type&&" "===i.value);u||d||0===l.nodes.indexOf(t)&&v||1===l.nodes.length?t.remove():t.replaceWith(e.universal());const b=l.nodes[0],y=b&&"combinator"===b.type&&" "===b.value,f=b&&"tag"===b.type&&"html"===b.value,m=b&&"pseudo"===b.type&&":root"===b.value;!b||f||m||y||l.prepend(e.combinator({value:" "}));const h=o===s,g=e.attribute({attribute:"dir",operator:"=",quoteMark:'"',value:`"${s}"`}),w=e.pseudo({value:":host-context"});w.append(g);const x=e.pseudo({value:(f||m?"":"html")+":not"});x.append(e.attribute({attribute:"dir",operator:"=",quoteMark:'"',value:`"${"ltr"===s?"rtl":"ltr"}"`})),h?f?l.insertAfter(b,x):l.prepend(x):f?l.insertAfter(b,g):n&&!m?l.prepend(w):l.prepend(g)}))}))})).processSync(r.selector)}catch(e){return void r.warn(a,`Failed to parse selector : ${r.selector}`)}void 0!==l&&l!==r.selector&&(s?r.cloneBefore({selector:l}):r.assign({selector:l}))}}}},module.exports.postcss=!0;


},{"postcss-selector-parser":693}],672:[function(require,module,exports){
"use strict";const e=require("postcss-value-parser"),t=/(repeating-)?(conic|linear|radial)-gradient\([\W\w]*\)/i,r=/^(repeating-)?(conic|linear|radial)-gradient$/i,n=e=>"div"===e.type&&","===e.value;function a(t){try{return!1!==e.unit(null==t?void 0:t.value)}catch(e){return!1}}module.exports=function(i){const o=!("preserve"in Object(i))||Boolean(i.preserve);return{postcssPlugin:"postcss-double-position-gradients",Declaration(i,{result:l}){if(!t.test(i.value))return;let c;try{c=e(i.value)}catch(e){i.warn(l,`Failed to parse value '${i.value}' as a CSS gradient. Leaving the original value intact.`)}if(void 0===c)return;c.walk((e=>{if("function"!==e.type||!r.test(e.value))return;return e.nodes.filter((e=>"comment"!==e.type&&"space"!==e.type)).forEach(((t,r,i)=>{const o=Object(i[r-1]),l=Object(i[r-2]),c=Object(i[r+1]);if(l.type&&a(o)&&a(t)){const r={type:l.type,value:l.value},a={type:"div",value:",",before:n(c)?c.before:"",after:n(c)?"":" "};!function(e,t,...r){const n=e.findIndex((e=>e===t));e.splice.apply(e,[n-1,0].concat(Array.prototype.slice.call(...r,0)))}(e.nodes,t,[a,r])}})),!1}));const s=c.toString();if(s!==i.value){if(o)return void i.cloneBefore({value:s});i.value=s}}}},module.exports.postcss=!0;


},{"postcss-value-parser":723}],673:[function(require,module,exports){
"use strict";var e=require("postcss-value-parser"),t=require("fs"),n=require("path");function a(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function r(e){if(e&&e.__esModule)return e;var t=Object.create(null);return e&&Object.keys(e).forEach((function(n){if("default"!==n){var a=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(t,n,a.get?a:{enumerable:!0,get:function(){return e[n]}})}})),t.default=e,Object.freeze(t)}var i=a(e),s=a(t),o=a(n),u=(e,t)=>{const n=i.default(e);return n.walk((e=>{if((e=>e&&"function"===e.type&&"env"===e.value)(e)){const[n]=e.nodes;"word"===n.type&&void 0!==t[n.value]&&(e.nodes=[],e.type="word",e.value=t[n.value])}})),n.toString()};function c(e){return Object.assign({},Object(e).environmentVariables||Object(e)["environment-variables"])}function l(e){return e.map((e=>{if(e instanceof Promise)return e;if(e instanceof Function)return e();const t=e===Object(e)?e:{from:String(e)};if(t.environmentVariables||t["environment-variables"])return t;const n=String(t.from||"");return{type:(t.type||o.default.extname(n).slice(1)).toLowerCase(),from:n}})).reduce((async(e,t)=>{const{type:n,from:a}=await t;return"js"===n||"cjs"===n?Object.assign(e,await async function(e){var t;return c(await(t=o.default.resolve(e),Promise.resolve().then((function(){return r(require(t))}))))}(a)):"json"===n?Object.assign(e,await async function(e){return c(await f(o.default.resolve(e)))}(a)):Object.assign(e,c(await t))}),{})}const f=async e=>JSON.parse(await(e=>new Promise(((t,n)=>{s.default.readFile(e,"utf8",((e,a)=>{e?n(e):t(a)}))})))(e));function v(e){const t=l([].concat(Object(e).importFrom||[]));return{postcssPlugin:"postcss-env-fn",async AtRule(e,{result:n}){let a;try{a=u(e.params,await t)}catch(t){e.warn(n,`Failed to parse params '${e.params}' as an environment value. Leaving the original value intact.`)}void 0!==a&&a!==e.params&&(e.params=a)},async Declaration(e,{result:n}){let a;try{a=u(e.value,await t)}catch(t){e.warn(n,`Failed to parse value '${e.value}' as an environment value. Leaving the original value intact.`)}void 0!==a&&a!==e.value&&(e.value=a)}}}v.postcss=!0,module.exports=v;


},{"fs":82,"path":662,"postcss-value-parser":723}],674:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=e(require("postcss-selector-parser"));const t=e=>{e=Object(e);const t=Boolean(!("preserve"in e)||e.preserve),r=String(e.replaceWith||".focus-visible"),o=s.default().astSync(r);return{postcssPlugin:"postcss-focus-visible",Rule(e,{result:r}){if(!e.selector.includes(":focus-visible"))return;let c;try{const t=s.default((e=>{e.walkPseudos((e=>{":focus-visible"===e.value&&(e.nodes&&e.nodes.length||e.replaceWith(o.clone({})))}))})).processSync(e.selector);c=String(t)}catch(s){return void e.warn(r,`Failed to parse selector : ${e.selector}`)}if(void 0===c)return;if(c===e.selector)return;const l=e.clone({selector:c});t?e.before(l):e.replaceWith(l)}}};t.postcss=!0,module.exports=t;


},{"postcss-selector-parser":693}],675:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-selector-parser"));const s=e=>{const s=String(Object(e).replaceWith||"[focus-within]"),r=Boolean(!("preserve"in Object(e))||e.preserve),o=t.default().astSync(s);return{postcssPlugin:"postcss-focus-within",Rule:(e,{result:s})=>{if(!e.selector.includes(":focus-within"))return;let c;try{const s=t.default((e=>{e.walkPseudos((e=>{":focus-within"===e.value&&(e.nodes&&e.nodes.length||e.replaceWith(o.clone({})))}))})).processSync(e.selector);c=String(s)}catch(t){return void e.warn(s,`Failed to parse selector : ${e.selector}`)}if(void 0===c)return;if(c===e.selector)return;const n=e.clone({selector:c});r?e.before(n):e.replaceWith(n)}}};s.postcss=!0,module.exports=s;


},{"postcss-selector-parser":693}],676:[function(require,module,exports){
/**
 * font variant convertion map
 *
 * @type {Object}
 */
const fontVariantProperties = {
  "font-variant-ligatures": {
    "common-ligatures": "\"liga\", \"clig\"",
    "no-common-ligatures": "\"liga\", \"clig off\"",
    "discretionary-ligatures": "\"dlig\"",
    "no-discretionary-ligatures": "\"dlig\" off",
    "historical-ligatures": "\"hlig\"",
    "no-historical-ligatures": "\"hlig\" off",
    contextual: "\"calt\"",
    "no-contextual": "\"calt\" off"
  },

  "font-variant-position": {
    sub: "\"subs\"",
    "super": "\"sups\"",
    normal: "\"subs\" off, \"sups\" off"
  },

  "font-variant-caps": {
    "small-caps": "\"smcp\"",
    "all-small-caps": "\"smcp\", \"c2sc\"",
    "petite-caps": "\"pcap\"",
    "all-petite-caps": "\"pcap\", \"c2pc\"",
    unicase: "\"unic\"",
    "titling-caps": "\"titl\""
  },

  "font-variant-numeric": {
    "lining-nums": "\"lnum\"",
    "oldstyle-nums": "\"onum\"",
    "proportional-nums": "\"pnum\"",
    "tabular-nums": "\"tnum\"",
    "diagonal-fractions": "\"frac\"",
    "stacked-fractions": "\"afrc\"",
    ordinal: "\"ordn\"",
    "slashed-zero": "\"zero\""
  },

  "font-kerning": {
    normal: "\"kern\"",
    none: "\"kern\" off"
  },

  "font-variant": {
    normal: "normal",
    inherit: "inherit"
  }
}

// The `font-variant` property is a shorthand for all the others.
for (const prop in fontVariantProperties) {
  const keys = fontVariantProperties[prop]
  for (const key in keys) {
    if (!(key in fontVariantProperties["font-variant"])) {
      fontVariantProperties["font-variant"][key] = keys[key]
    }
  }
}

// Find font-feature-settings declaration before given declaration,
// create if does not exist
function getFontFeatureSettingsPrevTo(decl) {
  let fontFeatureSettings = null;
  decl.parent.walkDecls((decl) => {
    if (decl.prop === "font-feature-settings") {
      fontFeatureSettings = decl;
    }
  })

  if (fontFeatureSettings === null) {
    fontFeatureSettings = decl.clone()
    fontFeatureSettings.prop = "font-feature-settings"
    fontFeatureSettings.value = ""
    decl.parent.insertBefore(decl, fontFeatureSettings)
  }
  return fontFeatureSettings
}

function walkRule(rule) {
  let fontFeatureSettings = null
  // read custom media queries
  rule.walkDecls((decl) => {
    if (!fontVariantProperties[decl.prop]) {
      return null
    }

    let newValue = decl.value
    if (decl.prop === "font-variant") {
      newValue = decl.value.split(/\s+/g).map((val) => {
        return fontVariantProperties["font-variant"][val]
      }).join(", ")
    }
    else if (fontVariantProperties[decl.prop][decl.value]) {
      newValue = fontVariantProperties[decl.prop][decl.value]
    }

    if (fontFeatureSettings === null) {
      fontFeatureSettings = getFontFeatureSettingsPrevTo(decl);
    }
    if (fontFeatureSettings.value && fontFeatureSettings.value !== newValue) {
      fontFeatureSettings.value += ", " + newValue;
    }
    else {
      fontFeatureSettings.value = newValue;
    }
  })
}

/**
 * Expose the font-variant plugin.
 */
module.exports = () => {
  return {
    postcssPlugin: "postcss-font-variant",
    Once(root) {
      root.walkRules(walkRule)
    }
  }
}

module.exports.postcss = true

},{}],677:[function(require,module,exports){
"use strict";const e=/^(column-gap|gap|row-gap)$/i,o=e=>"display"===e.prop&&"grid"===e.value;module.exports=function(p){const r=!("preserve"in Object(p))||Boolean(p.preserve);return{postcssPlugin:"postcss-gap-properties",Declaration(p){e.test(p.prop)&&p.parent.some(o)&&(p.cloneBefore({prop:`grid-${p.prop}`}),r||p.remove())}}},module.exports.postcss=!0;


},{}],678:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-value-parser"));const n=/^(cross-fade|image|(repeating-)?(conic|linear|radial)-gradient|url|var)$/i;function r(e){return!(!e||!e.type)&&("string"===e.type?"url("+t.default.stringify(e)+")":!("function"!==e.type||!n.test(e.value))&&t.default.stringify(e))}const i={dpcm:2.54,dpi:1,dppx:96,x:96};function a(e,t){if("boolean"==typeof e)return!1;const n=Math.floor(e/i.x*100)/100;return t.atRule({name:"media",params:`(-webkit-min-device-pixel-ratio: ${n}), (min-resolution: ${e}dpi)`})}function o(e){if(!e)return!1;if("word"!==e.type)return!1;if(!function(e){if(!e||!e.value)return!1;try{return!1!==t.default.unit(e.value)}catch(e){return!1}}(e))return!1;const n=t.default.unit(e.value);return!!n&&(n.unit.toLowerCase()in i&&Number(n.number)*i[n.unit.toLowerCase()])}const s=(e,t,n)=>{if("warn"===e.oninvalid)e.decl.warn(e.result,t,{word:String(n)});else if("throw"===e.oninvalid)throw e.decl.error(t,{word:String(n)})},u=/(^|[^\w-])(-webkit-)?image-set\(/i,l=/^(-webkit-)?image-set$/i,c=e=>{const n=!("preserve"in Object(e))||Boolean(e.preserve),i="oninvalid"in Object(e)?e.oninvalid:"ignore";return{postcssPlugin:"postcss-image-set-function",Declaration(e,{result:c,postcss:f}){const d=e.value;if(!u.test(d))return;let p;try{p=t.default(d)}catch(t){e.warn(c,`Failed to parse value '${d}' as an image-set function. Leaving the original value intact.`)}if(void 0===p)return;const v=[];p.walk((n=>{if("function"!==n.type)return;if(!l.test(n.value))return;let r=!1;if(t.default.walk(n.nodes,(e=>{"function"===e.type&&l.test(e.value)&&(r=!0)})),r)return s({decl:e,oninvalid:i,result:c},"nested image-set functions are not allowed",t.default.stringify(n)),!1;const a=n.nodes.filter((e=>"comment"!==e.type&&"space"!==e.type));v.push({imageSetFunction:n,imageSetOptionNodes:a})})),((e,n,i)=>{const u=n.parent,l=new Map,c=n.value;for(let n=0;n<e.length;n++){const{imageSetFunction:u,imageSetOptionNodes:d}=e[n],p=new Map,v=d.length;let g=-1;for(;g<v;){const e=g<0||(f=d[g],"div"===Object(f).type&&","===Object(f).value),n=r(d[g+1]),v=o(d[g+2]),m=a(v,i.postcss);if(!e)return void s(i,"expected a comma",t.default.stringify(d));if(!n)return void s(i,"unexpected image",t.default.stringify(d));if(!m||!v||p.has(v))return void s(i,"unexpected resolution",t.default.stringify(d));if(p.set(v,m),l.has(v)){const e=l.get(v);e.value=e.value.replace(t.default.stringify(u),n.trim()),l.set(v,e)}else l.set(v,{atRule:m,value:c.replace(t.default.stringify(u),n.trim())});g+=3}}var f;for(const{atRule:e,value:t}of l.values()){const r=u.clone().removeAll(),i=n.clone({value:t});r.append(i),e.append(r)}const d=Array.from(l.keys()).sort(((e,t)=>e-t)).map((e=>l.get(e).atRule));if(!d.length)return;const p=d[0],v=d.slice(1);v.length&&u.after(v);const g=p.nodes[0].nodes[0];n.cloneBefore({value:g.value.trim()}),i.preserve||(n.remove(),u.nodes.length||u.remove())})(v,e,{decl:e,oninvalid:i,preserve:n,result:c,postcss:f})}}};c.postcss=!0,module.exports=c;


},{"postcss-value-parser":723}],679:[function(require,module,exports){
var makeFallbackFunction = require('./lib/rules-fabric');

module.exports = function postcssInitial(opts) {
  opts = opts || {};
  opts.reset = opts.reset || 'all';
  opts.replace = opts.replace || false;
  var getFallback = makeFallbackFunction(opts.reset === 'inherited');
  var getPropPrevTo = function (prop, decl) {
    var foundPrev = false;
    decl.parent.walkDecls(function (child) {
      if (child.prop === decl.prop && child.value !== decl.value) {
        foundPrev = true;
      }
    });
    return foundPrev;
  };

  return {
    postcssPlugin: 'postcss-initial',
    Declaration:   function (decl) {
      if (!/\binitial\b/.test(decl.value)) {
        return;
      }
      var fallBackRules = getFallback(decl.prop, decl.value);
      if (fallBackRules.length === 0) return;
      fallBackRules.forEach(function (rule) {
        if ( !getPropPrevTo(decl.prop, decl) ) {
          decl.cloneBefore(rule);
        }
      });
      if (opts.replace === true) {
        decl.remove();
      }
    }
  };
};

module.exports.postcss = true;

},{"./lib/rules-fabric":681}],680:[function(require,module,exports){
module.exports=[
  {
    "prop": "animation",
    "initial": "${animation-name} ${animation-duration} ${animation-timing-function} ${animation-delay} ${animation-iteration-count} ${animation-direction} ${animation-fill-mode} ${animation-play-state}",
    "combined": true
  },
  {"prop": "animation-delay", "initial": "0s"},
  {"prop": "animation-direction", "initial": "normal"},
  {"prop": "animation-duration", "initial": "0s"},
  {"prop": "animation-fill-mode", "initial": "none"},
  {"prop": "animation-iteration-count", "initial": "1"},
  {"prop": "animation-name", "initial": "none"},
  {"prop": "animation-play-state", "initial": "running"},
  {"prop": "animation-timing-function", "initial": "ease"},
  {
    "prop": "backface-visibility", "initial": "visible",
    "basic": true
  },
  {
    "prop": "background",
    "initial": "${background-color} ${background-image} ${background-repeat} ${background-position} / ${background-size} ${background-origin} ${background-clip} ${background-attachment}",
    "combined": true
  },
  {"prop": "background-attachment", "initial": "scroll"},
  {"prop": "background-clip", "initial": "border-box"},
  {"prop": "background-color", "initial": "transparent"},
  {"prop": "background-image", "initial": "none"},
  {"prop": "background-origin", "initial": "padding-box"},
  {"prop": "background-position", "initial": "0 0"},
  {"prop": "background-position-x", "initial": "0"},
  {"prop": "background-position-y", "initial": "0"},
  {"prop": "background-repeat", "initial": "repeat"},
  {"prop": "background-size", "initial": "auto auto"},
  {
    "prop": "border",
    "initial": "${border-width} ${border-style} ${border-color}",
    "combined": true
  },
  {"prop": "border-style", "initial": "none"},
  {"prop": "border-width", "initial": "medium"},
  {"prop": "border-color", "initial": "currentColor"},
  {"prop": "border-bottom", "initial": "0"},
  {"prop": "border-bottom-color", "initial": "currentColor"},
  {"prop": "border-bottom-left-radius", "initial": "0"},
  {"prop": "border-bottom-right-radius", "initial": "0"},
  {"prop": "border-bottom-style", "initial": "none"},
  {"prop": "border-bottom-width", "initial": "medium"},
  {
    "prop": "border-collapse", "initial": "separate",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "border-image", "initial": "none",
    "basic": true
  },
  {"prop": "border-left", "initial": "0"},
  {"prop": "border-left-color", "initial": "currentColor"},
  {"prop": "border-left-style", "initial": "none"},
  {"prop": "border-left-width", "initial": "medium"},
  {
    "prop": "border-radius", "initial": "0",
    "basic": true
  },
  {"prop": "border-right", "initial": "0"},
  {"prop": "border-right-color", "initial": "currentColor"},
  {"prop": "border-right-style", "initial": "none"},
  {"prop": "border-right-width", "initial": "medium"},
  {
    "prop": "border-spacing", "initial": "0",
    "basic": true,
    "inherited": true
  },
  {"prop": "border-top", "initial": "0"},
  {"prop": "border-top-color", "initial": "currentColor"},
  {"prop": "border-top-left-radius", "initial": "0"},
  {"prop": "border-top-right-radius", "initial": "0"},
  {"prop": "border-top-style", "initial": "none"},
  {"prop": "border-top-width", "initial": "medium"},
  {
    "prop": "bottom", "initial": "auto",
    "basic": true
  },
  {
    "prop": "box-shadow", "initial": "none",
    "basic": true
  },
  {
    "prop": "box-sizing", "initial": "content-box",
    "basic": true
  },
  {
    "prop": "caption-side", "initial": "top",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "clear", "initial": "none",
    "basic": true
  },
  {
    "prop": "clip", "initial": "auto",
    "basic": true
  },
  {
    "prop": "color", "initial": "#000",
    "basic": true
  },
  {
    "prop": "columns", "initial": "auto",
    "basic": true
  },
  {
    "prop": "column-count", "initial": "auto",
    "basic": true
  },
  {
    "prop": "column-fill", "initial": "balance",
    "basic": true
  },
  {
    "prop": "column-gap", "initial": "normal",
    "basic": true
  },
  {
    "prop": "column-rule",
    "initial": "${column-rule-width} ${column-rule-style} ${column-rule-color}",
    "combined": true
  },
  {"prop": "column-rule-color", "initial": "currentColor"},
  {"prop": "column-rule-style", "initial": "none"},
  {"prop": "column-rule-width", "initial": "medium"},
  {
    "prop": "column-span", "initial": "1",
    "basic": true
  },
  {
    "prop": "column-width", "initial": "auto",
    "basic": true
  },
  {
    "prop": "content", "initial": "normal",
    "basic": true
  },
  {
    "prop": "counter-increment", "initial": "none",
    "basic": true
  },
  {
    "prop": "counter-reset", "initial": "none",
    "basic": true
  },
  {
    "prop": "cursor", "initial": "auto",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "direction", "initial": "ltr",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "display", "initial": "inline",
    "basic": true
  },
  {
    "prop": "empty-cells", "initial": "show",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "float", "initial": "none",
    "basic": true
  },
  {
    "prop": "font",
    "contains": [
      "font-style",
      "font-variant",
      "font-weight",
      "font-stretch",
      "font-size",
      "line-height",
      "font-family"
    ],
    "basic": true,
    "inherited": true
  },
  {"prop": "font-family", "initial": "serif"},
  {"prop": "font-size", "initial": "medium"},
  {"prop": "font-style", "initial": "normal"},
  {"prop": "font-variant", "initial": "normal"},
  {"prop": "font-weight", "initial": "normal"},
  {"prop": "font-stretch", "initial": "normal"},
  {
    "prop": "line-height", "initial": "normal",
    "inherited": true
  },
  {
    "prop": "height", "initial": "auto",
    "basic": true
  },
  {
    "prop": "hyphens", "initial": "none",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "left", "initial": "auto",
    "basic": true
  },
  {
    "prop": "letter-spacing", "initial": "normal",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "list-style",
    "initial": "${list-style-type} ${list-style-position} ${list-style-image}",
    "combined": true,
    "inherited": true
  },
  {"prop": "list-style-image", "initial": "none"},
  {"prop": "list-style-position", "initial": "outside"},
  {"prop": "list-style-type", "initial": "disc"},
  {
    "prop": "margin", "initial": "0",
    "basic": true
  },
  {"prop": "margin-bottom", "initial": "0"},
  {"prop": "margin-left", "initial": "0"},
  {"prop": "margin-right", "initial": "0"},
  {"prop": "margin-top", "initial": "0"},
  {
    "prop": "max-height", "initial": "none",
    "basic": true
  },
  {
    "prop": "max-width", "initial": "none",
    "basic": true
  },
  {
    "prop": "min-height", "initial": "0",
    "basic": true
  },
  {
    "prop": "min-width", "initial": "0",
    "basic": true
  },
  {
    "prop": "opacity", "initial": "1",
    "basic": true
  },
  {
    "prop": "orphans", "initial": "2",
    "basic": true
  },
  {
    "prop": "outline",
    "initial": "${outline-width} ${outline-style} ${outline-color}",
    "combined": true
  },
  {"prop": "outline-color", "initial": "invert"},
  {"prop": "outline-style", "initial": "none"},
  {"prop": "outline-width", "initial": "medium"},
  {
    "prop": "overflow", "initial": "visible",
    "basic": true
  },
  {
    "prop": "overflow-x", "initial": "visible",
    "basic": true
  },
  {
    "prop": "overflow-y", "initial": "visible",
    "basic": true
  },
  {
    "prop": "padding", "initial": "0",
    "basic": true
  },
  {"prop": "padding-bottom", "initial": "0"},
  {"prop": "padding-left", "initial": "0"},
  {"prop": "padding-right", "initial": "0"},
  {"prop": "padding-top", "initial": "0"},
  {
    "prop": "page-break-after", "initial": "auto",
    "basic": true
  },
  {
    "prop": "page-break-before", "initial": "auto",
    "basic": true
  },
  {
    "prop": "page-break-inside", "initial": "auto",
    "basic": true
  },
  {
    "prop": "perspective", "initial": "none",
    "basic": true
  },
  {
    "prop": "perspective-origin", "initial": "50% 50%",
    "basic": true
  },
  {
    "prop": "position", "initial": "static",
    "basic": true
  },
  {
    "prop": "quotes",
    "initial": "\u201C \u201D \u2018 \u2019"
  },
  {
    "prop": "right", "initial": "auto",
    "basic": true
  },
  {
    "prop": "tab-size", "initial": "8",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "table-layout", "initial": "auto",
    "basic": true
  },
  {
    "prop": "text-align", "initial": "left",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "text-align-last", "initial": "auto",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "text-decoration",
    "initial": "${text-decoration-line}",
    "combined": true
  },
  {"prop": "text-decoration-color", "initial": "inherited"},
  {"prop": "text-decoration-color", "initial": "currentColor"},
  {"prop": "text-decoration-line", "initial": "none"},
  {"prop": "text-decoration-style", "initial": "solid"},
  {
    "prop": "text-indent", "initial": "0",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "text-shadow", "initial": "none",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "text-transform", "initial": "none",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "top", "initial": "auto",
    "basic": true
  },
  {
    "prop": "transform", "initial": "none",
    "basic": true
  },
  {
    "prop": "transform-origin", "initial": "50% 50% 0",
    "basic": true
  },
  {
    "prop": "transform-style", "initial": "flat",
    "basic": true
  },
  {
    "prop": "transition",
    "initial": "${transition-property} ${transition-duration} ${transition-timing-function} ${transition-delay}",
    "combined": true
  },
  {"prop": "transition-delay", "initial": "0s"},
  {"prop": "transition-duration", "initial": "0s"},
  {"prop": "transition-property", "initial": "none"},
  {"prop": "transition-timing-function", "initial": "ease"},
  {
    "prop": "unicode-bidi", "initial": "normal",
    "basic": true
  },
  {
    "prop": "vertical-align", "initial": "baseline",
    "basic": true
  },
  {
    "prop": "visibility", "initial": "visible",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "white-space", "initial": "normal",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "widows", "initial": "2",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "width", "initial": "auto",
    "basic": true
  },
  {
    "prop": "word-spacing", "initial": "normal",
    "basic": true,
    "inherited": true
  },
  {
    "prop": "z-index", "initial": "auto",
    "basic": true
  }
]
},{}],681:[function(require,module,exports){
var decls =  require('./decls.json');

function template(string, data) {
  return string.replace(/\$\{([\w\-\.]*)\}/g, function (_str, key) {
    var v = data[key];
    return typeof v !== 'undefined' && v !== null ? v : '';
  });
}

/*
  Rules legend:
   - combined - if rule is combined it will be rendered with template
   - combined and basic rules are present in basic reset
   - combined, basic and inherited rules are present in full reset
*/

function _getRulesMap(inputDecls) {
  return inputDecls
    .filter(function (decl) {
      return !decl.combined;
    })
    .reduce(function (map, decl) {
      map[decl.prop.replace(/\-/g, '')] = decl.initial;
      return map;
    }, {});
}

function _compileDecls(inputDecls) {
  var templateVars = _getRulesMap(inputDecls);
  return inputDecls.map(function (decl) {
    if (decl.combined && decl.initial) {
      decl.initial = template(decl.initial.replace(/\-/g, ''), templateVars);
    }
    return decl;
  });
}

function _getRequirements(inputDecls) {
  return inputDecls.reduce(function (map, decl) {
    if (!decl.contains) return map;
    return decl.contains.reduce(function (mapInner, dependency) {
      mapInner[dependency] = decl;
      return mapInner;
    }, map);
  }, {});
}

function _expandContainments(inputDecls) {
  var requiredMap = _getRequirements(inputDecls);
  return inputDecls
    .filter(function (decl) {
      return !decl.contains;
    }).map(function (decl) {
      var dependency = requiredMap[decl.prop];
      if (dependency) {
        decl.requiredBy = dependency.prop;
        decl.basic = decl.basic || dependency.basic;
        decl.inherited = decl.inherited || dependency.inherited;
      }
      return decl;
    });
}

var compiledDecls = _expandContainments(_compileDecls(decls));

function _clearDecls(rules, value) {
  return rules.map(function (rule) {
    return {
      prop:  rule.prop,
      value: value.replace(/\binitial\b/g, rule.initial)
    };
  });
}

function _allDecls(onlyInherited) {
  return compiledDecls.filter(function (decl) {
    var allowed = decl.combined || decl.basic;
    if (onlyInherited) return allowed && decl.inherited;
    return allowed;
  });
}

function _concreteDecl(declName) {
  return compiledDecls.filter(function (decl) {
    return declName === decl.prop || declName === decl.requiredBy;
  });
}

function makeFallbackFunction(onlyInherited) {
  return function (declName, declValue) {
    var result;
    if (declName === 'all') {
      result = _allDecls(onlyInherited);
    } else {
      result = _concreteDecl(declName);
    }
    return _clearDecls(result, declValue);
  };
}

module.exports = makeFallbackFunction;

},{"./decls.json":680}],682:[function(require,module,exports){
"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var e=t(require("postcss-value-parser"));function n(t){return a(u(t,!0))}function r(t){return a(u(function(t){return[t[0],t[1]*Math.cos(t[2]*Math.PI/180),t[1]*Math.sin(t[2]*Math.PI/180)]}(t),!1))}function u(t,e){const[n,r,u]=t,a=Math.min(Math.max(n,0),100);let l=0,p=0;e?(l=Math.min(Math.max(r,-127),128),p=Math.min(Math.max(u,-127),128)):(l=r,p=u);const v=(a+16)/116,h=l/500+v,b=v-p/200,[m,M,g]=[Math.pow(h,3)>s?Math.pow(h,3):(116*h-16)/d,a>d*s?Math.pow((a+16)/116,3):a/d,Math.pow(b,3)>s?Math.pow(b,3):(116*b-16)/d],[w,y,x]=o([m*i,M*c,g*f],[[.9554734527042182,-.023098536874261423,.0632593086610217],[-.028369706963208136,1.0099954580058226,.021041398966943008],[.012314001688319899,-.020507696433477912,1.3303659366080753]]);return[w,y,x]}function a(t){const[e,n,r]=t,[u,a,l]=o([e,n,r],[[3.2409699419045226,-1.537383177570094,-.4986107602930034],[-.9692436362808796,1.8759675015077202,.04155505740717559],[.05563007969699366,-.20397695888897652,1.0569715142428786]]),[i,c,f]=[u,a,l].map((t=>t>.31308?1.055*Math.pow(t/100,1/2.4)*100-5.5:12.92*t));return[i,c,f]}function o(t,e){return e.map((e=>e.reduce(((e,n,r)=>e+t[r]*l*(n*l)/l/l),0)))}const l=1e8,[i,c,f]=[96.422,100,82.521],s=Math.pow(6,3)/Math.pow(29,3),d=Math.pow(29,3)/Math.pow(3,3);function p(t){const u=t.value,a=t.nodes.slice().filter((t=>"comment"!==t.type&&"space"!==t.type));let o=null;if("lab"===u?o=function(t){if(!h(t[0]))return null;if(!v(t[1]))return null;if(!v(t[2]))return null;const n={l:e.default.unit(t[0].value),lNode:t[0],a:e.default.unit(t[1].value),aNode:t[1],b:e.default.unit(t[2].value),bNode:t[2]};M(t[3])&&(n.slash=t[3]);(b(t[4])||m(t[4]))&&(n.alpha=t[4]);return n}(a):"lch"===u&&(o=function(t){if(!h(t[0]))return null;if(!v(t[1]))return null;if(!function(t){if(!t||"word"!==t.type)return!1;if(!y(t))return!1;const n=e.default.unit(t.value);if(!n)return!1;return!!n.number&&("deg"===n.unit||"grad"===n.unit||"rad"===n.unit||"turn"===n.unit||""===n.unit)}(t[2]))return null;const n={l:e.default.unit(t[0].value),lNode:t[0],c:e.default.unit(t[1].value),cNode:t[1],h:e.default.unit(t[2].value),hNode:t[2]};if(function(t){switch(t.unit){case"deg":return void(t.unit="");case"rad":return t.unit="",void(t.number=(180*parseFloat(t.number)/Math.PI).toString());case"grad":return t.unit="",void(t.number=(.9*parseFloat(t.number)).toString());case"turn":t.unit="",t.number=(360*parseFloat(t.number)).toString()}}(n.h),""!==n.h.unit)return null;M(t[3])&&(n.slash=t[3]);(b(t[4])||m(t[4])||function(t){return t&&"function"===t.type&&"var"===t.value}(t[4]))&&(n.alpha=t[4]);return n}(a)),!o)return;if(a.length>3&&(!o.slash||!o.alpha))return;t.value="rgb",function(t,n,r){if(!n||!r)return;if(t.value="rgba",n.value=",",n.before="",!function(t){if(!t||"word"!==t.type)return!1;if(!y(t))return!1;const n=e.default.unit(t.value);if(!n)return!1;return!!n.number}(r))return;const u=e.default.unit(r.value);if(!u)return;"%"===u.unit&&(u.number=String(parseFloat(u.number)/100),r.value=String(u.number))}(t,o.slash,o.alpha);const[l,i,c]=function(t){if(g(t))return[t.lNode,t.aNode,t.bNode];return[t.lNode,t.cNode,t.hNode]}(o),[f,s,d]=function(t){if(g(t))return[t.l,t.a,t.b];return[t.l,t.c,t.h]}(o),p=("lab"===u?n:r)([f.number,s.number,d.number].map((t=>parseFloat(t)))).map((t=>Math.max(Math.min(Math.round(2.55*t),255),0)));t.nodes.splice(t.nodes.indexOf(l)+1,0,{sourceIndex:0,sourceEndIndex:1,value:",",type:"div",before:"",after:""}),t.nodes.splice(t.nodes.indexOf(i)+1,0,{sourceIndex:0,sourceEndIndex:1,value:",",type:"div",before:"",after:""}),w(t.nodes,l,{...l,value:String(p[0])}),w(t.nodes,i,{...i,value:String(p[1])}),w(t.nodes,c,{...c,value:String(p[2])})}function v(t){if(!t||"word"!==t.type)return!1;if(!y(t))return!1;const n=e.default.unit(t.value);return!!n&&(!!n.number&&""===n.unit)}function h(t){if(!t||"word"!==t.type)return!1;if(!y(t))return!1;const n=e.default.unit(t.value);return!!n&&"%"===n.unit}function b(t){if(!t||"word"!==t.type)return!1;if(!y(t))return!1;const n=e.default.unit(t.value);return!!n&&("%"===n.unit||""===n.unit)}function m(t){return t&&"function"===t.type&&"calc"===t.value}function M(t){return t&&"div"===t.type&&"/"===t.value}function g(t){return void 0!==t.a}function w(t,e,n){const r=t.indexOf(e);t[r]=n}function y(t){if(!t||!t.value)return!1;try{return!1!==e.default.unit(t.value)}catch(t){return!1}}const x=t=>{const n="preserve"in Object(t)&&Boolean(t.preserve);return{postcssPlugin:"postcss-lab-function",Declaration:(t,{result:r,postcss:u})=>{if(n&&function(t){let e=t.parent;for(;e;)if("atrule"===e.type){if("supports"===e.name&&-1!==e.params.indexOf("(color: lab(0% 0 0)) and (color: lch(0% 0 0))"))return!0;e=e.parent}else e=e.parent;return!1}(t))return;const a=t.value;if(!/(^|[^\w-])(lab|lch)\(/i.test(a))return;let o;try{o=e.default(a)}catch(e){t.warn(r,`Failed to parse value '${a}' as a lab or hcl function. Leaving the original value intact.`)}if(void 0===o)return;o.walk((t=>{t.type&&"function"===t.type&&("lab"!==t.value&&"lch"!==t.value||p(t))}));const l=String(o);if(l!==a)if(n&&t.variable){const e=t.parent,n="(color: lab(0% 0 0)) and (color: lch(0% 0 0))",r=u.atRule({name:"supports",params:n,source:t.source}),a=e.clone();a.removeAll(),a.append(t.clone()),r.append(a);let o=e,i=e.next();for(;o&&i&&"atrule"===i.type&&"supports"===i.name&&i.params===n;)o=i,i=i.next();o.after(r),t.value=l}else n?t.cloneBefore({value:l}):t.value=l}}};x.postcss=!0,x._labToSRgb=n,x._lchToSRgb=r,module.exports=x;


},{"postcss-value-parser":723}],683:[function(require,module,exports){
"use strict";function r(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var e=r(require("postcss")),t=(r,t)=>{const o="rule"===Object(r.parent).type?r.parent.cloneBefore({raws:{}}).removeAll():e.default.rule({selector:"&"});return o.assign({selectors:o.selectors.map((r=>`${r}:dir(${t})`))}),o};const o=/^border-(block|block-start|block-end|inline|inline-start|inline-end)(-(width|style|color))?$/i;var l=(r,e,t,l)=>{r.cloneBefore({prop:`border-top${r.prop.replace(o,"$2")}`,value:e[0]}),r.cloneBefore({prop:`border-bottom${r.prop.replace(o,"$2")}`,value:e[1]||e[0]}),b(r,l)},n=(r,e,t,l)=>{r.cloneBefore({prop:`border-top${r.prop.replace(o,"$2")}`}),b(r,l)},i=(r,e,t,l)=>{r.cloneBefore({prop:`border-bottom${r.prop.replace(o,"$2")}`}),b(r,l)},d=(r,e,l,n)=>{const i=()=>[r.cloneBefore({prop:`border-left${r.prop.replace(o,"$2")}`,value:e[0]}),r.cloneBefore({prop:`border-right${r.prop.replace(o,"$2")}`,value:e[1]||e[0]})],d=()=>[r.clone({prop:`border-right${r.prop.replace(o,"$2")}`,value:e[0]}),r.clone({prop:`border-left${r.prop.replace(o,"$2")}`,value:e[1]||e[0]})];return 1===e.length||2===e.length&&e[0]===e[1]||"ltr"===l?(i(),void b(r,n)):"rtl"===l?(d(),void b(r,n)):(t(r,"ltr").append(i()),t(r,"rtl").append(d()),void b(r,n))},p=(r,e,l,n)=>{const i=()=>r.cloneBefore({prop:`border-left${r.prop.replace(o,"$2")}`}),d=()=>r.cloneBefore({prop:`border-right${r.prop.replace(o,"$2")}`});return"ltr"===l?(i(),void b(r,n)):"rtl"===l?(d(),void b(r,n)):(t(r,"ltr").append(i()),t(r,"rtl").append(d()),void b(r,n))},a=(r,e,l,n)=>{const i=()=>r.cloneBefore({prop:`border-right${r.prop.replace(o,"$2")}`}),d=()=>r.cloneBefore({prop:`border-left${r.prop.replace(o,"$2")}`});return"ltr"===l?(i(),void b(r,n)):"rtl"===l?(d(),void b(r,n)):(t(r,"ltr").append(i()),t(r,"rtl").append(d()),void b(r,n))};function b(r,e){e||r.remove()}const c=/^(border-)(end-end|end-start|start-end|start-start)(-radius)$/i,s={"end-end":"bottom-right","end-start":"bottom-left","start-end":"top-right","start-start":"top-left"},g={"end-end":"bottom-left","end-start":"bottom-right","start-end":"top-left","start-start":"top-right"};var f=(r,e,o,l)=>"ltr"===o?(u(r),void v(r,l)):"rtl"===o?(h(r),void v(r,l)):(t(r,"ltr").append(u(r)),t(r,"rtl").append(h(r)),void v(r,l));function u(r){return r.cloneBefore({prop:r.prop.replace(c,((r,e,t,o)=>`${e}${s[t]}${o}`))})}function h(r){return r.cloneBefore({prop:r.prop.replace(c,((r,e,t,o)=>`${e}${g[t]}${o}`))})}function v(r,e){e||r.remove()}var m=r=>{const e=r.slice();return 4===e.length&&e[3]===e[1]&&e.pop(),3===e.length&&e[2]===e[0]&&e.pop(),2===e.length&&e[1]===e[0]&&e.pop(),e},k=(r,e,o,l)=>{if("logical"!==e[0])return null;const[,n,i,d,p]=e,a=m([n,p||i||n,d||n,i||n]),b=()=>r.cloneBefore({value:a.join(" ")});if(a.length<4||"ltr"===o)return b(),void $(r,l);const c=m([n,i||n,d||n,p||i||n]),s=()=>r.cloneBefore({value:c.join(" ")});if("rtl"===o)return s(),void $(r,l);t(r,"ltr").append(b()),t(r,"rtl").append(s()),$(r,l)};function $(r,e){e||r.remove()}var B=(r,e,o,l)=>/^inline-start$/i.test(r.value)?"ltr"===o?(y(r),void j(r,l)):"rtl"===o?(w(r),void j(r,l)):(t(r,"ltr").append(y(r)),t(r,"rtl").append(w(r)),void j(r,l)):/^inline-end$/i.test(r.value)?"ltr"===o?(w(r),void j(r,l)):"rtl"===o?(y(r),void j(r,l)):(t(r,"ltr").append(w(r)),t(r,"rtl").append(y(r)),void j(r,l)):void 0;function y(r){return r.cloneBefore({value:"left"})}function w(r){return r.cloneBefore({value:"right"})}function j(r,e){e||r.remove()}var z=(r,e,o,l)=>{if("logical"!==e[0])return r.cloneBefore({prop:"top",value:e[0]}),r.cloneBefore({prop:"right",value:e[1]||e[0]}),r.cloneBefore({prop:"bottom",value:e[2]||e[0]}),r.cloneBefore({prop:"left",value:e[3]||e[1]||e[0]}),void O(r,l);return!e[4]||e[4]===e[2]||"ltr"===o?(x(r,e),void O(r,l)):"rtl"===o?(E(r,e),void O(r,l)):(t(r,"ltr").append(x(r,e)),t(r,"rtl").append(E(r,e)),void O(r,l))};function x(r,e){return[r.cloneBefore({prop:"top",value:e[1]}),r.cloneBefore({prop:"left",value:e[2]||e[1]}),r.cloneBefore({prop:"bottom",value:e[3]||e[1]}),r.cloneBefore({prop:"right",value:e[4]||e[2]||e[1]})]}function E(r,e){return[r.cloneBefore({prop:"top",value:e[1]}),r.cloneBefore({prop:"right",value:e[2]||e[1]}),r.cloneBefore({prop:"bottom",value:e[3]||e[1]}),r.cloneBefore({prop:"left",value:e[4]||e[2]||e[1]})]}function O(r,e){e||r.remove()}var q=(r,e,t,o)=>/^block$/i.test(r.value)?(r.cloneBefore({value:"vertical"}),void A(r,o)):/^inline$/i.test(r.value)?(r.cloneBefore({value:"horizontal"}),void A(r,o)):void 0;function A(r,e){e||r.remove()}var D=/^(inset|margin|padding)(?:-(block|block-start|block-end|inline|inline-start|inline-end|start|end))$/i,P=/^inset-/i,C=(r,e,t)=>r.cloneBefore({prop:`${r.prop.replace(D,"$1")}${e}`.replace(P,""),value:t}),F=(r,e,t,o)=>{C(r,"-top",e[0]),C(r,"-bottom",e[1]||e[0]),L(r,o)},G=(r,e,t,o)=>{r.cloneBefore({prop:r.prop.replace(D,"$1-top").replace(P,"")}),L(r,o)},H=(r,e,t,o)=>{r.cloneBefore({prop:r.prop.replace(D,"$1-bottom").replace(P,"")}),L(r,o)},I=(r,e,o,l)=>{const n=()=>[C(r,"-left",e[0]),C(r,"-right",e[1]||e[0])],i=()=>[C(r,"-right",e[0]),C(r,"-left",e[1]||e[0])];return 1===e.length||2===e.length&&e[0]===e[1]||"ltr"===o?(n(),void L(r,l)):"rtl"===o?(i(),void L(r,l)):(t(r,"ltr").append(n()),t(r,"rtl").append(i()),void L(r,l))},J=(r,e,o,l)=>{const n=()=>C(r,"-left",r.value),i=()=>C(r,"-right",r.value);return"ltr"===o?(n(),void L(r,l)):"rtl"===o?(i(),void L(r,l)):(t(r,"ltr").append(n()),t(r,"rtl").append(i()),void L(r,l))},K=(r,e,o,l)=>{const n=()=>C(r,"-right",r.value),i=()=>C(r,"-left",r.value);return"ltr"===o?(n(),void L(r,l)):"rtl"===o?(i(),void L(r,l)):(t(r,"ltr").append(n()),t(r,"rtl").append(i()),void L(r,l))};function L(r,e){e||r.remove()}var M=/^(min-|max-)?(block|inline)-(size)$/i,N=(r,e,t,o)=>{r.cloneBefore({prop:r.prop.replace(M,((r,e,t)=>`${e||""}${"block"===t?"height":"width"}`))}),o||r.remove()},Q=(r,e,o,l)=>/^start$/i.test(r.value)?"ltr"===o?(R(r),void T(r,l)):"rtl"===o?(S(r),void T(r,l)):(t(r,"ltr").append(R(r)),t(r,"rtl").append(S(r)),void T(r,l)):/^end$/i.test(r.value)?"ltr"===o?(S(r),void T(r,l)):"rtl"===o?(R(r),void T(r,l)):(t(r,"ltr").append(S(r)),t(r,"rtl").append(R(r)),void T(r,l)):void 0;function R(r){return r.cloneBefore({value:"left"})}function S(r){return r.cloneBefore({value:"right"})}function T(r,e){e||r.remove()}function U(r,e){return V(r,/^\s$/,e)}function V(r,e,t){const o=[];let l="",n=!1,i=0,d=-1;for(;++d<r.length;){const p=r[d];"("===p?i+=1:")"===p?i>0&&(i-=1):0===i&&e.test(p)&&(n=!0),n?(t&&!l.trim()||o.push(t?l.trim():l),t||o.push(p),l="",n=!1):l+=p}return""!==l&&o.push(t?l.trim():l),o}var W=(r,e,o,l)=>{const n=[],i=[];var d,p;return(d=r.value,V(d,/^,$/,p)).forEach((r=>{let e=!1;U(r).forEach(((r,t,o)=>{r in X&&(e=!0,X[r].ltr.forEach((r=>{const e=o.slice();e.splice(t,1,r),n.length&&!/^,$/.test(n[n.length-1])&&n.push(","),n.push(e.join(""))})),X[r].rtl.forEach((r=>{const e=o.slice();e.splice(t,1,r),i.length&&!/^,$/.test(i[i.length-1])&&i.push(","),i.push(e.join(""))})))})),e||(n.push(r),i.push(r))})),n.length&&"ltr"===o?(l&&r.cloneBefore({}),void r.assign({value:n.join("")})):i.length&&"rtl"===o?(l&&r.cloneBefore({}),void r.assign({value:i.join("")})):n.join("")!==i.join("")?(t(r,"ltr").append(r.cloneBefore({value:n.join("")})),t(r,"rtl").append(r.cloneBefore({value:i.join("")})),void function(r,e){e||r.remove()}(r,l)):void 0};const X={"block-size":{ltr:["height"],rtl:["height"]},"inline-size":{ltr:["width"],rtl:["width"]},"margin-block-end":{ltr:["margin-bottom"],rtl:["margin-bottom"]},"margin-block-start":{ltr:["margin-top"],rtl:["margin-top"]},"margin-block":{ltr:["margin-top","margin-bottom"],rtl:["margin-top","margin-bottom"]},"margin-inline-end":{ltr:["margin-right"],rtl:["margin-left"]},"margin-inline-start":{ltr:["margin-left"],rtl:["margin-right"]},"margin-inline":{ltr:["margin-left","margin-right"],rtl:["margin-left","margin-right"]},"inset-block-end":{ltr:["bottom"],rtl:["bottom"]},"inset-block-start":{ltr:["top"],rtl:["top"]},"inset-block":{ltr:["top","bottom"],rtl:["top","bottom"]},"inset-inline-end":{ltr:["right"],rtl:["left"]},"inset-inline-start":{ltr:["left"],rtl:["right"]},"inset-inline":{ltr:["left","right"],rtl:["left","right"]},inset:{ltr:["top","right","bottom","left"],rtl:["top","right","bottom","left"]},"padding-block-end":{ltr:["padding-bottom"],rtl:["padding-bottom"]},"padding-block-start":{ltr:["padding-top"],rtl:["padding-top"]},"padding-block":{ltr:["padding-top","padding-bottom"],rtl:["padding-top","padding-bottom"]},"padding-inline-end":{ltr:["padding-right"],rtl:["padding-left"]},"padding-inline-start":{ltr:["padding-left"],rtl:["padding-right"]},"padding-inline":{ltr:["padding-left","padding-right"],rtl:["padding-left","padding-right"]},"border-block-color":{ltr:["border-top-color","border-bottom-color"],rtl:["border-top-color","border-bottom-color"]},"border-block-end-color":{ltr:["border-bottom-color"],rtl:["border-bottom-color"]},"border-block-end-style":{ltr:["border-bottom-style"],rtl:["border-bottom-style"]},"border-block-end-width":{ltr:["border-bottom-width"],rtl:["border-bottom-width"]},"border-block-end":{ltr:["border-bottom"],rtl:["border-bottom"]},"border-block-start-color":{ltr:["border-top-color"],rtl:["border-top-color"]},"border-block-start-style":{ltr:["border-top-style"],rtl:["border-top-style"]},"border-block-start-width":{ltr:["border-top-width"],rtl:["border-top-width"]},"border-block-start":{ltr:["border-top"],rtl:["border-top"]},"border-block-style":{ltr:["border-top-style","border-bottom-style"],rtl:["border-top-style","border-bottom-style"]},"border-block-width":{ltr:["border-top-width","border-bottom-width"],rtl:["border-top-width","border-bottom-width"]},"border-block":{ltr:["border-top","border-bottom"],rtl:["border-top","border-bottom"]},"border-inline-color":{ltr:["border-left-color","border-right-color"],rtl:["border-left-color","border-right-color"]},"border-inline-end-color":{ltr:["border-right-color"],rtl:["border-left-color"]},"border-inline-end-style":{ltr:["border-right-style"],rtl:["border-left-style"]},"border-inline-end-width":{ltr:["border-right-width"],rtl:["border-left-width"]},"border-inline-end":{ltr:["border-right"],rtl:["border-left"]},"border-inline-start-color":{ltr:["border-left-color"],rtl:["border-right-color"]},"border-inline-start-style":{ltr:["border-left-style"],rtl:["border-right-style"]},"border-inline-start-width":{ltr:["border-left-width"],rtl:["border-right-width"]},"border-inline-start":{ltr:["border-left"],rtl:["border-right"]},"border-inline-style":{ltr:["border-left-style","border-right-style"],rtl:["border-left-style","border-right-style"]},"border-inline-width":{ltr:["border-left-width","border-right-width"],rtl:["border-left-width","border-right-width"]},"border-inline":{ltr:["border-left","border-right"],rtl:["border-left","border-right"]},"border-end-end-radius":{ltr:["border-bottom-right-radius"],rtl:["border-bottom-left-radius"]},"border-end-start-radius":{ltr:["border-bottom-left-radius"],rtl:["border-bottom-right-radius"]},"border-start-end-radius":{ltr:["border-top-right-radius"],rtl:["border-top-left-radius"]},"border-start-start-radius":{ltr:["border-top-left-radius"],rtl:["border-top-right-radius"]}};function Y(r){let e=r.parent;for(;e;)if("atrule"===e.type){if("keyframes"===e.name)return!0;e=e.parent}else e=e.parent;return!1}function Z(r){r=Object(r);const e=Boolean(r.preserve),t=!e&&"string"==typeof r.dir&&(/^rtl$/i.test(r.dir)?"rtl":"ltr"),o=r=>o=>{if(Y(o))return;const l=o.parent,n=U(o.value,!0);r(o,n,t,e),l.nodes.length||l.remove()},b=r=>o=>{if(Y(o))return;const l=o.parent,n=[o.value];r(o,n,t,e),l.nodes.length||l.remove()};return{postcssPlugin:"postcss-logical-properties",Declaration:{clear:o(B),float:o(B),resize:o(q),"text-align":o(Q),"block-size":o(N),"max-block-size":o(N),"min-block-size":o(N),"inline-size":o(N),"max-inline-size":o(N),"min-inline-size":o(N),margin:o(k),"margin-inline":o(I),"margin-inline-end":o(K),"margin-inline-start":o(J),"margin-block":o(F),"margin-block-end":o(H),"margin-block-start":o(G),inset:o(z),"inset-inline":o(I),"inset-inline-end":o(K),"inset-inline-start":o(J),"inset-block":o(F),"inset-block-end":o(H),"inset-block-start":o(G),padding:o(k),"padding-inline":o(I),"padding-inline-end":o(K),"padding-inline-start":o(J),"padding-block":o(F),"padding-block-end":o(H),"padding-block-start":o(G),"border-block":b(l),"border-block-color":o(l),"border-block-style":o(l),"border-block-width":o(l),"border-block-end":b(i),"border-block-end-color":o(i),"border-block-end-style":o(i),"border-block-end-width":o(i),"border-block-start":b(n),"border-block-start-color":o(n),"border-block-start-style":o(n),"border-block-start-width":o(n),"border-inline":b(d),"border-inline-color":o(d),"border-inline-style":o(d),"border-inline-width":o(d),"border-inline-end":b(a),"border-inline-end-color":o(a),"border-inline-end-style":o(a),"border-inline-end-width":o(a),"border-inline-start":b(p),"border-inline-start-color":o(p),"border-inline-start-style":o(p),"border-inline-start-width":o(p),"border-end-end-radius":o(f),"border-end-start-radius":o(f),"border-start-end-radius":o(f),"border-start-start-radius":o(f),"border-color":o(k),"border-style":o(k),"border-width":o(k),transition:o(W),"transition-property":o(W)}}}Z.postcss=!0,module.exports=Z;


},{"postcss":743}],684:[function(require,module,exports){
const feature_unit = {
  'width': 'px',
  'height': 'px',
  'device-width': 'px',
  'device-height': 'px',
  'aspect-ratio': '',
  'device-aspect-ratio': '',
  'color': '',
  'color-index': '',
  'monochrome': '',
  'resolution': 'dpi'
};

// Supported min-/max- attributes
const feature_name = Object.keys(feature_unit);

const step = .001; // smallest even number that won’t break complex queries (1in = 96px)

const power = {
  '>': 1,
  '<': -1
};

const minmax = {
  '>': 'min',
  '<': 'max'
};

function create_query(name, gtlt, eq, value) {
  return value.replace(/([-\d\.]+)(.*)/, function (_match, number, unit) {
    const initialNumber = parseFloat(number);

    if (parseFloat(number) || eq) {
      // if eq is true, then number remains same
      if (!eq) {
        // change integer pixels value only on integer pixel
        if (unit === 'px' && initialNumber === parseInt(number, 10)) {
          number = initialNumber + power[gtlt];
        } else {
          number = Number(Math.round(parseFloat(number) + step * power[gtlt] + 'e6')+'e-6');
        }
      }
    } else {
      number = power[gtlt] + feature_unit[name];
    }

    return '(' + minmax[gtlt] + '-' + name + ': ' + number + unit + ')';
  });
}

function transform(rule) {
  /**
   * 转换 <mf-name> <|>= <mf-value>
   *    $1  $2   $3
   * (width >= 300px) => (min-width: 300px)
   * (width <= 900px) => (max-width: 900px)
   */

  if (!rule.params.includes('<') && !rule.params.includes('>')) {
    return
  }

  // The value doesn't support negative values
  // But -0 is always equivalent to 0 in CSS, and so is also accepted as a valid <mq-boolean> value.

  rule.params = rule.params.replace(/\(\s*([a-z-]+?)\s*([<>])(=?)\s*((?:-?\d*\.?(?:\s*\/?\s*)?\d+[a-z]*)?)\s*\)/gi, function($0, $1, $2, $3, $4) {
    if (feature_name.indexOf($1) > -1) {
      return create_query($1, $2, $3, $4);
    }
    // If it is not the specified attribute, don't replace
    return $0;
  })

  /**
   * 转换  <mf-value> <|<= <mf-name> <|<= <mf-value>
   * 转换  <mf-value> >|>= <mf-name> >|>= <mf-value>
   *   $1  $2$3 $4  $5$6  $7
   * (500px <= width <= 1200px) => (min-width: 500px) and (max-width: 1200px)
   * (500px < width <= 1200px) => (min-width: 501px) and (max-width: 1200px)
   * (900px >= width >= 300px)  => (min-width: 300px) and (max-width: 900px)
   */

  rule.params = rule.params.replace(/\(\s*((?:-?\d*\.?(?:\s*\/?\s*)?\d+[a-z]*)?)\s*(<|>)(=?)\s*([a-z-]+)\s*(<|>)(=?)\s*((?:-?\d*\.?(?:\s*\/?\s*)?\d+[a-z]*)?)\s*\)/gi, function($0, $1, $2, $3, $4, $5, $6, $7) {

    if (feature_name.indexOf($4) > -1) {
      if ($2 === '<' && $5 === '<' || $2 === '>' && $5 === '>') {
        const min = ($2 === '<') ? $1 : $7;
        const max = ($2 === '<') ? $7 : $1;

        // output differently depended on expression direction
        // <mf-value> <|<= <mf-name> <|<= <mf-value>
        // or
        // <mf-value> >|>= <mf-name> >|>= <mf-value>
        let equals_for_min = $3;
        let equals_for_max = $6;

        if ($2 === '>') {
          equals_for_min = $6;
          equals_for_max = $3;
        }

        return create_query($4, '>', equals_for_min, min) + ' and ' + create_query($4, '<', equals_for_max, max);
      }
    }
    // If it is not the specified attribute, don't replace
    return $0;
  });
}

module.exports = () => ({
  postcssPlugin: 'postcss-media-minmax',
  AtRule: {
    media: (atRule) => {
      transform(atRule);
    },
    'custom-media': (atRule) => {
      transform(atRule);
    },
  },
});

module.exports.postcss = true

},{}],685:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-selector-parser"));function n(e){const t=e.parent,n=t.index(e);return n&&t.cloneBefore().removeAll().append(t.nodes.slice(0,n)),t.before(e),t}function r(e){e.nodes.length||e.remove()}function o(e,n){let r=!1,o=e.length>1;const s=t.default().astSync(e.join(",")),p=t.default().astSync(`:is(${e.join(",")})`);let a=0;return s.walk((e=>{"root"!==e.type&&a++})),a>2&&(r=!0),n.map((e=>t.default((e=>{e.walkNesting((e=>{if(o)e.replaceWith(p.clone());else{if(e.next()&&"tag"===e.next().type){const n=t.default.pseudo({value:":is"});return n.append(e.next().clone()),e.next().replaceWith(n),r?void e.replaceWith(p.clone()):void e.replaceWith(s.clone())}if(e.prev()&&"combinator"!==e.prev().type&&s.first&&s.first.first&&"tag"===s.first.first.type){if(r)return void e.replaceWith(p.clone());let n=e.prev();for(;n.prev()&&"combinator"!==n.prev().type;)n=n.prev();if("tag"!==n.type)return e.parent.insertBefore(n,s.clone()),void e.remove();const o=t.default.pseudo({value:":is"});return o.append(s.clone()),void e.replaceWith(o)}e.replaceWith(s.clone())}}))})).processSync(e)))}const s=e=>{let t=[],n="",r=!1,o=0,s=!1,p=!1;for(let a of e)p?p=!1:"\\"===a?p=!0:s?a===s&&(s=!1):'"'===a||"'"===a?s=a:"("===a?o+=1:")"===a?o>0&&(o-=1):0===o&&","===a&&(r=!0),r?(""!==n&&t.push(n.trim()),n="",r=!1):n+=a;return t.push(n.trim()),t};var p=["container","document","media","supports"];function a(e){const t=n(e);var o,p;e.params=(o=t.params,p=e.params,s(o).map((e=>s(p).map((t=>`${e} and ${t}`)).join(", "))).join(", ")),r(t)}function l(e){e.each((e=>{(e=>"rule"===e.type&&"rule"===Object(e.parent).type&&e.selectors.every((e=>0===e.trim().indexOf("&")&&-1===e.indexOf("|"))))(e)?function(e){const t=n(e);e.selectors=o(t.selectors,e.selectors),("rule"===e.type&&"rule"===t.type&&e.selector===t.selector||"atrule"===e.type&&"atrule"===t.type&&e.params===t.params)&&e.append(...t.nodes),r(t)}(e):(e=>"atrule"===e.type&&"nest"===e.name&&"rule"===Object(e.parent).type&&s(e.params).every((e=>e.split("&").length>=2&&-1===e.indexOf("|"))))(e)?function(e,t){const p=n(e),a=p.clone().removeAll().append(e.nodes);e.replaceWith(a),a.selectors=o(p.selectors,s(e.params)),r(p),t(a)}(e,l):(e=>"atrule"===e.type&&p.includes(e.name)&&"rule"===Object(e.parent).type)(e)?function(e,t){const o=n(e),s=o.clone().removeAll().append(e.nodes);e.append(s),r(o),t(s)}(e,l):(e=>"atrule"===e.type&&p.includes(e.name)&&"atrule"===Object(e.parent).type&&e.name===e.parent.name)(e)&&a(e),Object(e.nodes).length&&l(e)}))}function c(){return{postcssPlugin:"postcss-nesting",Rule(e){l(e)}}}c.postcss=!0,module.exports=c;


},{"postcss-selector-parser":693}],686:[function(require,module,exports){
"use strict";const e=/^overflow/i;const o=o=>{const s=!("preserve"in Object(o))||Boolean(o.preserve);return{postcssPlugin:"postcss-overflow-shorthand",Declaration:(o,{list:r})=>{e.test(o)&&function(e,o,s){const[r,t,...n]=e.space(o.value);t&&!n.length&&(o.cloneBefore({prop:`${o.prop}-x`,value:r}),o.cloneBefore({prop:`${o.prop}-y`,value:t}),s||o.remove())}(r,o,s)}}};o.postcss=!0,module.exports=o;


},{}],687:[function(require,module,exports){
module.exports = function(options) {
    return {
        postcssPlugin: 'postcss-page-break',
        Declaration(decl) {
            if (decl.prop.startsWith('break-') && /^break-(inside|before|after)/.test(decl.prop)) {
                // do not process column|region related properties
                if (decl.value.search(/column|region/) >= 0) {
                    return;
                }

                let newValue;
                switch (decl.value) {
                    case 'page':
                        newValue = 'always';
                        break;
                    case 'avoid-page':
                        newValue = 'avoid';
                        break;
                    default:
                        newValue = decl.value;
                }

                const newProperty = 'page-' + decl.prop;
                if (decl.parent.every((sibling) => sibling.prop !== newProperty)) {
                    decl.cloneBefore({
                        prop: newProperty,
                        value: newValue,
                    });
                }
            }
        },
    };

};
module.exports.postcss = true;

},{}],688:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var t=e(require("postcss-value-parser")),r={preserve:!0};const s=/^place-(content|items|self)/,l=e=>("preserve"in Object(e)&&(r.preserve=Boolean(e.preserve)),{postcssPlugin:"postcss-place",Declaration:(e,{result:l})=>{s.test(e)&&((e,{result:l})=>{const o=e.prop.match(s)[1];let a;try{a=t.default(e.value)}catch(t){e.warn(l,`Failed to parse value '${e.value}'. Leaving the original value intact.`)}if(void 0===a)return;let n=[];n=a.nodes.length?a.nodes.filter((e=>"word"===e.type||"function"===e.type)).map((e=>t.default.stringify(e))):[t.default.stringify(a)],e.cloneBefore({prop:`align-${o}`,value:n[0]}),e.cloneBefore({prop:`justify-${o}`,value:n[1]||n[0]}),r.preserve||e.remove()})(e,{result:l})}});l.postcss=!0,module.exports=l;


},{"postcss-value-parser":723}],689:[function(require,module,exports){
"use strict";var e=require("autoprefixer"),s=require("browserslist"),t=require("cssdb"),r=require("postcss-attribute-case-insensitive"),o=require("css-blank-pseudo"),i=require("postcss-color-functional-notation"),n=require("postcss-color-hex-alpha"),c=require("postcss-color-rebeccapurple"),u=require("postcss-custom-media"),a=require("postcss-custom-properties"),p=require("postcss-custom-selectors"),l=require("postcss-dir-pseudo-class"),f=require("postcss-double-position-gradients"),d=require("postcss-env-function"),m=require("postcss-focus-visible"),b=require("postcss-focus-within"),g=require("postcss-font-variant"),y=require("postcss-gap-properties"),$=require("css-has-pseudo"),j=require("postcss-image-set-function"),q=require("postcss-initial"),v=require("postcss-lab-function"),O=require("postcss-logical"),w=require("postcss-media-minmax"),h=require("postcss-nesting"),x=require("postcss-overflow-shorthand"),k=require("postcss-page-break"),S=require("postcss-place"),P=require("css-prefers-color-scheme"),M=require("postcss-pseudo-class-any-link"),B=require("postcss-replace-overflow-wrap"),F=require("postcss-selector-not"),T=require("caniuse-lite"),A=require("fs"),U=require("path");function E(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function N(e){if(e&&e.__esModule)return e;var s=Object.create(null);return e&&Object.keys(e).forEach((function(t){if("default"!==t){var r=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(s,t,r.get?r:{enumerable:!0,get:function(){return e[t]}})}})),s.default=e,Object.freeze(s)}var C=E(e),D=E(s),I=E(t),J=E(r),R=E(o),V=E(i),_=E(n),z=E(c),L=E(u),G=E(a),H=E(p),K=E(l),Q=E(f),W=E(d),X=E(m),Y=E(b),Z=E(g),ee=E(y),se=E($),te=E(j),re=E(q),oe=E(v),ie=E(O),ne=E(w),ce=E(h),ue=E(x),ae=E(k),pe=E(S),le=E(P),fe=E(M),de=E(B),me=E(F),be=N(T),ge=E(A),ye=E(U);function $e(){return{postcssPlugin:"postcss-system-ui-font",Declaration(e){je.test(e.prop)&&(e.value.includes(ve.join(", "))||(e.value=e.value.replace(Oe,we)))}}}$e.postcss=!0;const je=/(?:^(?:-|\\002d){2})|(?:^font(?:-family)?$)/i,qe="[\\f\\n\\r\\x09\\x20]",ve=["system-ui","-apple-system","Segoe UI","Roboto","Ubuntu","Cantarell","Noto Sans","sans-serif"],Oe=new RegExp(`(^|,|${qe}+)(?:system-ui${qe}*)(?:,${qe}*(?:${ve.join("|")})${qe}*)?(,|$)`,"i"),we=`$1${ve.join(", ")}$2`;var he={"all-property":re.default,"any-link-pseudo-class":fe.default,"blank-pseudo-class":R.default,"break-properties":ae.default,"case-insensitive-attributes":J.default,"color-functional-notation":V.default,"custom-media-queries":L.default,"custom-properties":G.default,"custom-selectors":H.default,"dir-pseudo-class":K.default,"double-position-gradients":Q.default,"environment-variables":W.default,"focus-visible-pseudo-class":X.default,"focus-within-pseudo-class":Y.default,"font-variant-property":Z.default,"gap-properties":ee.default,"has-pseudo-class":se.default,"hexadecimal-alpha-notation":_.default,"image-set-function":te.default,"lab-function":oe.default,"logical-properties-and-values":ie.default,"media-query-ranges":ne.default,"nesting-rules":ce.default,"not-pseudo-class":me.default,"overflow-property":ue.default,"overflow-wrap-property":de.default,"place-properties":pe.default,"prefers-color-scheme-query":le.default,"rebeccapurple-color":z.default,"system-ui-font-family":$e};function xe(e,s){return Object.keys(e).map((t=>[].concat(e[t]).map((e=>({[s]:!0,plugin:e,id:t}))))).reduce(((e,s)=>e.concat(s)),[])}var ke=["custom-media-queries","custom-properties","environment-variables","image-set-function","media-query-ranges","prefers-color-scheme-query","nesting-rules","custom-selectors","any-link-pseudo-class","case-insensitive-attributes","focus-visible-pseudo-class","focus-within-pseudo-class","matches-pseudo-class","not-pseudo-class","logical-properties-and-values","dir-pseudo-class","all-property","color-functional-notation","double-position-gradients","hexadecimal-alpha-notation","lab-function","rebeccapurple-color","color-mod-function","blank-pseudo-class","break-properties","font-variant-property","has-pseudo-class","gap-properties","overflow-property","overflow-wrap-property","place-properties","system-ui-font-family"];async function Se(e,s,t,r){const o=function(e){return`:root {\n${Object.keys(e).reduce(((s,t)=>(s.push(`\t${t}: ${e[t]};`),s)),[]).join("\n")}\n}\n`}(t),i=function(e){return`${Object.keys(e).reduce(((s,t)=>(s.push(`@custom-media ${t} ${e[t]};`),s)),[]).join("\n")}\n`}(s),n=function(e){return`${Object.keys(e).reduce(((s,t)=>(s.push(`@custom-selector ${t} ${e[t]};`),s)),[]).join("\n")}\n`}(r),c=`${i}\n${n}\n${o}`;await Te(e,c)}function Pe(e,s){return`\n\t${e}: {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t\t'${Ae(t)}': '${Ae(s[t])}'`),e)),[]).join(",\n")}\n\t}`}function Me(e,s){return`export const ${e} = {\n${Object.keys(s).reduce(((e,t)=>(e.push(`\t'${Ae(t)}': '${Ae(s[t])}'`),e)),[]).join(",\n")}\n};\n`}function Be(e,s){return Promise.all([].concat(s).map((async s=>{if(s instanceof Function)await s({customMedia:Fe(e.customMedia),customProperties:Fe(e.customProperties),customSelectors:Fe(e.customSelectors)});else{const t=s===Object(s)?s:{to:String(s)},r=t.toJSON||Fe;if("customMedia"in t||"customProperties"in t||"customSelectors"in t)t.customMedia=r(e.customMedia),t.customProperties=r(e.customProperties),t.customSelectors=r(e.customSelectors);else if("custom-media"in t||"custom-properties"in t||"custom-selectors"in t)t["custom-media"]=r(e.customMedia),t["custom-properties"]=r(e.customProperties),t["custom-selectors"]=r(e.customSelectors);else{const s=String(t.to||""),o=(t.type||ye.default.extname(t.to).slice(1)).toLowerCase(),i=r(e.customMedia),n=r(e.customProperties),c=r(e.customSelectors);"css"===o&&await Se(s,i,n,c),"js"===o&&await async function(e,s,t,r){const o=`module.exports = {${Pe("customMedia",s)},${Pe("customProperties",t)},${Pe("customSelectors",r)}\n};\n`;await Te(e,o)}(s,i,n,c),"json"===o&&await async function(e,s,t,r){const o=`${JSON.stringify({"custom-media":s,"custom-properties":t,"custom-selectors":r},null,"  ")}\n`;await Te(e,o)}(s,i,n,c),"mjs"===o&&await async function(e,s,t,r){const o=`${Me("customMedia",s)}\n${Me("customProperties",t)}\n${Me("customSelectors",r)}`;await Te(e,o)}(s,i,n,c)}}})))}function Fe(e){return Object.keys(e).reduce(((s,t)=>(s[t]=String(e[t]),s)),{})}function Te(e,s){return new Promise(((t,r)=>{ge.default.writeFile(e,s,(e=>{e?r(e):t()}))}))}function Ae(e){return e.replace(/\\([\s\S])|(')/g,"\\$1$2").replace(/\n/g,"\\n").replace(/\r/g,"\\r")}const Ue=e=>{const s=Object(Object(e).features),t=Object(Object(e).insertBefore),r=Object(Object(e).insertAfter),o=Object(e).browsers,i="stage"in Object(e)?!1===e.stage?5:parseInt(e.stage)||0:2,n=Object(e).autoprefixer,c=Ee(Object(e)),u=!1===n?()=>{}:C.default(Object.assign({overrideBrowserslist:o},n)),a=I.default.concat(xe(t,"insertBefore"),xe(r,"insertAfter")).filter((e=>e.insertBefore||e.id in he)).sort(((e,s)=>ke.indexOf(e.id)-ke.indexOf(s.id)||(e.insertBefore?-1:s.insertBefore?1:0)||(e.insertAfter?1:s.insertAfter?-1:0))).map((e=>{const s=function(e){const s=be.features[e];if(s){const e=be.feature(s).stats;return Object.keys(e).reduce(((s,t)=>s.concat(Object.keys(e[t]).filter((s=>0!==e[t][s].indexOf("y"))).map((e=>`${t} ${e}`)))),[])}return["> 0%"]}(e.caniuse);return e.insertBefore||e.insertAfter?{browsers:s,plugin:e.plugin,id:`${e.insertBefore?"before":"after"}-${e.id}`,stage:6}:{browsers:s,plugin:he[e.id],id:e.id,stage:e.stage}})),p=a.filter((e=>e.id in s?s[e.id]:e.stage>=i)).map((e=>{let t,r;return t=!0===s[e.id]?c?Object.assign({},c):void 0:c?Object.assign({},c,s[e.id]):Object.assign({},s[e.id]),r=e.plugin.postcss?e.plugin(t):e.plugin,{browsers:e.browsers,plugin:r,id:e.id}})),l=D.default(o,{ignoreUnknownVersions:!0}),f=p.filter((e=>e.id in s?s[e.id]:l.some((s=>D.default(e.browsers,{ignoreUnknownVersions:!0}).some((e=>e===s)))))).map((e=>e.plugin));return f.push(u),{postcssPlugin:"postcss-preset-env",plugins:f,OnceExit:function(){Object(e).exportTo&&Be(c.exportTo,e.exportTo)}}},Ee=e=>{if("importFrom"in e||"exportTo"in e||"preserve"in e){const s={};return"importFrom"in e&&(s.importFrom=e.importFrom),"exportTo"in e&&(s.exportTo={customMedia:{},customProperties:{},customSelectors:{}}),"preserve"in e&&(s.preserve=e.preserve),s}return!1};Ue.postcss=!0,module.exports=Ue;


},{"autoprefixer":3,"browserslist":85,"caniuse-lite":648,"css-blank-pseudo":650,"css-has-pseudo":651,"css-prefers-color-scheme":652,"cssdb":653,"fs":82,"path":662,"postcss-attribute-case-insensitive":664,"postcss-color-functional-notation":665,"postcss-color-hex-alpha":666,"postcss-color-rebeccapurple":667,"postcss-custom-media":668,"postcss-custom-properties":669,"postcss-custom-selectors":670,"postcss-dir-pseudo-class":671,"postcss-double-position-gradients":672,"postcss-env-function":673,"postcss-focus-visible":674,"postcss-focus-within":675,"postcss-font-variant":676,"postcss-gap-properties":677,"postcss-image-set-function":678,"postcss-initial":679,"postcss-lab-function":682,"postcss-logical":683,"postcss-media-minmax":684,"postcss-nesting":685,"postcss-overflow-shorthand":686,"postcss-page-break":687,"postcss-place":688,"postcss-pseudo-class-any-link":690,"postcss-replace-overflow-wrap":691,"postcss-selector-not":692}],690:[function(require,module,exports){
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var s=e(require("postcss-selector-parser"));const o=/:any-link/;function t(e){const t=!("preserve"in Object(e))||Boolean(e.preserve);return{postcssPlugin:"postcss-pseudo-class-any-link",Rule(e,{result:r}){if(!o.test(e.selector))return;const n=e.raws.selector&&e.raws.selector.raw||e.selector;if(":"===n[n.length-1])return;let l;try{l=s.default((e=>{let s,o,t,r,n,l=-1;for(t=e.nodes[++l];t;){for(o=-1,s=t.nodes[++o];s;){if(!(":any-link"!==s.value||"pseudo"!==s.type||s.nodes&&s.nodes.length)){r=t.clone(),n=t.clone(),r.nodes[o].value=":link",n.nodes[o].value=":visited",e.nodes.splice(l--,1,r,n);break}s=t.nodes[++o]}t=e.nodes[++l]}})).processSync(n)}catch(s){return void e.warn(r,`Failed to parse selector : ${e.selector}`)}void 0!==l&&l!==n&&(t?e.cloneBefore({selector:l}):e.selector=l)}}}t.postcss=!0,module.exports=t;


},{"postcss-selector-parser":693}],691:[function(require,module,exports){
// @ts-check

module.exports = function (opts) {
    opts = opts || {}
    var method = opts.method || 'replace'
    return {
        postcssPlugin: 'postcss-replace-overflow-wrap',
        Declaration: {
            'overflow-wrap': decl => {
                decl.cloneBefore({ prop: 'word-wrap' })
                if (method === 'replace') {
                    decl.remove()
                }
            }
        }
    }
}

module.exports.postcss = true

},{}],692:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _list = _interopRequireDefault(require("postcss/lib/list"));

var _balancedMatch = _interopRequireDefault(require("balanced-match"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function explodeSelector(pseudoClass, selector) {
  const position = locatePseudoClass(selector, pseudoClass);

  if (selector && position > -1) {
    const pre = selector.slice(0, position);
    const matches = (0, _balancedMatch.default)("(", ")", selector.slice(position));

    if (!matches) {
      return selector;
    }

    const bodySelectors = matches.body ? _list.default.comma(matches.body).map(s => explodeSelector(pseudoClass, s)).join(`)${pseudoClass}(`) : "";
    const postSelectors = matches.post ? explodeSelector(pseudoClass, matches.post) : "";
    return `${pre}${pseudoClass}(${bodySelectors})${postSelectors}`;
  }

  return selector;
}

const patternCache = {};

function locatePseudoClass(selector, pseudoClass) {
  patternCache[pseudoClass] = patternCache[pseudoClass] || new RegExp(`([^\\\\]|^)${pseudoClass}`); // The regex is used to ensure that selectors with
  // escaped colons in them are treated properly
  // Ex: .foo\:not-bar is a valid CSS selector
  // But it is not a reference to a pseudo selector

  const pattern = patternCache[pseudoClass];
  const position = selector.search(pattern);

  if (position === -1) {
    return -1;
  } // The offset returned by the regex may be off by one because
  // of it including the negated character match in the position


  return position + selector.slice(position).indexOf(pseudoClass);
}

function explodeSelectors(pseudoClass) {
  return () => {
    return {
      postcssPlugin: "postcss-selector-not",
      Rule: rule => {
        if (rule.selector && rule.selector.indexOf(pseudoClass) > -1) {
          rule.selector = explodeSelector(pseudoClass, rule.selector);
        }
      }
    };
  };
}

const creator = explodeSelectors(":not");
creator.postcss = true;
var _default = creator;
exports.default = _default;
},{"balanced-match":79,"postcss/lib/list":737}],693:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _processor = _interopRequireDefault(require("./processor"));

var selectors = _interopRequireWildcard(require("./selectors"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var parser = function parser(processor) {
  return new _processor["default"](processor);
};

Object.assign(parser, selectors);
delete parser.__esModule;
var _default = parser;
exports["default"] = _default;
module.exports = exports.default;
},{"./processor":695,"./selectors":704}],694:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _root = _interopRequireDefault(require("./selectors/root"));

var _selector = _interopRequireDefault(require("./selectors/selector"));

var _className = _interopRequireDefault(require("./selectors/className"));

var _comment = _interopRequireDefault(require("./selectors/comment"));

var _id = _interopRequireDefault(require("./selectors/id"));

var _tag = _interopRequireDefault(require("./selectors/tag"));

var _string = _interopRequireDefault(require("./selectors/string"));

var _pseudo = _interopRequireDefault(require("./selectors/pseudo"));

var _attribute = _interopRequireWildcard(require("./selectors/attribute"));

var _universal = _interopRequireDefault(require("./selectors/universal"));

var _combinator = _interopRequireDefault(require("./selectors/combinator"));

var _nesting = _interopRequireDefault(require("./selectors/nesting"));

var _sortAscending = _interopRequireDefault(require("./sortAscending"));

var _tokenize = _interopRequireWildcard(require("./tokenize"));

var tokens = _interopRequireWildcard(require("./tokenTypes"));

var types = _interopRequireWildcard(require("./selectors/types"));

var _util = require("./util");

var _WHITESPACE_TOKENS, _Object$assign;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var WHITESPACE_TOKENS = (_WHITESPACE_TOKENS = {}, _WHITESPACE_TOKENS[tokens.space] = true, _WHITESPACE_TOKENS[tokens.cr] = true, _WHITESPACE_TOKENS[tokens.feed] = true, _WHITESPACE_TOKENS[tokens.newline] = true, _WHITESPACE_TOKENS[tokens.tab] = true, _WHITESPACE_TOKENS);
var WHITESPACE_EQUIV_TOKENS = Object.assign({}, WHITESPACE_TOKENS, (_Object$assign = {}, _Object$assign[tokens.comment] = true, _Object$assign));

function tokenStart(token) {
  return {
    line: token[_tokenize.FIELDS.START_LINE],
    column: token[_tokenize.FIELDS.START_COL]
  };
}

function tokenEnd(token) {
  return {
    line: token[_tokenize.FIELDS.END_LINE],
    column: token[_tokenize.FIELDS.END_COL]
  };
}

function getSource(startLine, startColumn, endLine, endColumn) {
  return {
    start: {
      line: startLine,
      column: startColumn
    },
    end: {
      line: endLine,
      column: endColumn
    }
  };
}

function getTokenSource(token) {
  return getSource(token[_tokenize.FIELDS.START_LINE], token[_tokenize.FIELDS.START_COL], token[_tokenize.FIELDS.END_LINE], token[_tokenize.FIELDS.END_COL]);
}

function getTokenSourceSpan(startToken, endToken) {
  if (!startToken) {
    return undefined;
  }

  return getSource(startToken[_tokenize.FIELDS.START_LINE], startToken[_tokenize.FIELDS.START_COL], endToken[_tokenize.FIELDS.END_LINE], endToken[_tokenize.FIELDS.END_COL]);
}

function unescapeProp(node, prop) {
  var value = node[prop];

  if (typeof value !== "string") {
    return;
  }

  if (value.indexOf("\\") !== -1) {
    (0, _util.ensureObject)(node, 'raws');
    node[prop] = (0, _util.unesc)(value);

    if (node.raws[prop] === undefined) {
      node.raws[prop] = value;
    }
  }

  return node;
}

function indexesOf(array, item) {
  var i = -1;
  var indexes = [];

  while ((i = array.indexOf(item, i + 1)) !== -1) {
    indexes.push(i);
  }

  return indexes;
}

function uniqs() {
  var list = Array.prototype.concat.apply([], arguments);
  return list.filter(function (item, i) {
    return i === list.indexOf(item);
  });
}

var Parser = /*#__PURE__*/function () {
  function Parser(rule, options) {
    if (options === void 0) {
      options = {};
    }

    this.rule = rule;
    this.options = Object.assign({
      lossy: false,
      safe: false
    }, options);
    this.position = 0;
    this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;
    this.tokens = (0, _tokenize["default"])({
      css: this.css,
      error: this._errorGenerator(),
      safe: this.options.safe
    });
    var rootSource = getTokenSourceSpan(this.tokens[0], this.tokens[this.tokens.length - 1]);
    this.root = new _root["default"]({
      source: rootSource
    });
    this.root.errorGenerator = this._errorGenerator();
    var selector = new _selector["default"]({
      source: {
        start: {
          line: 1,
          column: 1
        }
      }
    });
    this.root.append(selector);
    this.current = selector;
    this.loop();
  }

  var _proto = Parser.prototype;

  _proto._errorGenerator = function _errorGenerator() {
    var _this = this;

    return function (message, errorOptions) {
      if (typeof _this.rule === 'string') {
        return new Error(message);
      }

      return _this.rule.error(message, errorOptions);
    };
  };

  _proto.attribute = function attribute() {
    var attr = [];
    var startingToken = this.currToken;
    this.position++;

    while (this.position < this.tokens.length && this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
      attr.push(this.currToken);
      this.position++;
    }

    if (this.currToken[_tokenize.FIELDS.TYPE] !== tokens.closeSquare) {
      return this.expected('closing square bracket', this.currToken[_tokenize.FIELDS.START_POS]);
    }

    var len = attr.length;
    var node = {
      source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),
      sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
    };

    if (len === 1 && !~[tokens.word].indexOf(attr[0][_tokenize.FIELDS.TYPE])) {
      return this.expected('attribute', attr[0][_tokenize.FIELDS.START_POS]);
    }

    var pos = 0;
    var spaceBefore = '';
    var commentBefore = '';
    var lastAdded = null;
    var spaceAfterMeaningfulToken = false;

    while (pos < len) {
      var token = attr[pos];
      var content = this.content(token);
      var next = attr[pos + 1];

      switch (token[_tokenize.FIELDS.TYPE]) {
        case tokens.space:
          // if (
          //     len === 1 ||
          //     pos === 0 && this.content(next) === '|'
          // ) {
          //     return this.expected('attribute', token[TOKEN.START_POS], content);
          // }
          spaceAfterMeaningfulToken = true;

          if (this.options.lossy) {
            break;
          }

          if (lastAdded) {
            (0, _util.ensureObject)(node, 'spaces', lastAdded);
            var prevContent = node.spaces[lastAdded].after || '';
            node.spaces[lastAdded].after = prevContent + content;
            var existingComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || null;

            if (existingComment) {
              node.raws.spaces[lastAdded].after = existingComment + content;
            }
          } else {
            spaceBefore = spaceBefore + content;
            commentBefore = commentBefore + content;
          }

          break;

        case tokens.asterisk:
          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
            node.operator = content;
            lastAdded = 'operator';
          } else if ((!node.namespace || lastAdded === "namespace" && !spaceAfterMeaningfulToken) && next) {
            if (spaceBefore) {
              (0, _util.ensureObject)(node, 'spaces', 'attribute');
              node.spaces.attribute.before = spaceBefore;
              spaceBefore = '';
            }

            if (commentBefore) {
              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');
              node.raws.spaces.attribute.before = spaceBefore;
              commentBefore = '';
            }

            node.namespace = (node.namespace || "") + content;
            var rawValue = (0, _util.getProp)(node, 'raws', 'namespace') || null;

            if (rawValue) {
              node.raws.namespace += content;
            }

            lastAdded = 'namespace';
          }

          spaceAfterMeaningfulToken = false;
          break;

        case tokens.dollar:
          if (lastAdded === "value") {
            var oldRawValue = (0, _util.getProp)(node, 'raws', 'value');
            node.value += "$";

            if (oldRawValue) {
              node.raws.value = oldRawValue + "$";
            }

            break;
          }

        // Falls through

        case tokens.caret:
          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
            node.operator = content;
            lastAdded = 'operator';
          }

          spaceAfterMeaningfulToken = false;
          break;

        case tokens.combinator:
          if (content === '~' && next[_tokenize.FIELDS.TYPE] === tokens.equals) {
            node.operator = content;
            lastAdded = 'operator';
          }

          if (content !== '|') {
            spaceAfterMeaningfulToken = false;
            break;
          }

          if (next[_tokenize.FIELDS.TYPE] === tokens.equals) {
            node.operator = content;
            lastAdded = 'operator';
          } else if (!node.namespace && !node.attribute) {
            node.namespace = true;
          }

          spaceAfterMeaningfulToken = false;
          break;

        case tokens.word:
          if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][_tokenize.FIELDS.TYPE] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.
          !node.operator && !node.namespace) {
            node.namespace = content;
            lastAdded = 'namespace';
          } else if (!node.attribute || lastAdded === "attribute" && !spaceAfterMeaningfulToken) {
            if (spaceBefore) {
              (0, _util.ensureObject)(node, 'spaces', 'attribute');
              node.spaces.attribute.before = spaceBefore;
              spaceBefore = '';
            }

            if (commentBefore) {
              (0, _util.ensureObject)(node, 'raws', 'spaces', 'attribute');
              node.raws.spaces.attribute.before = commentBefore;
              commentBefore = '';
            }

            node.attribute = (node.attribute || "") + content;

            var _rawValue = (0, _util.getProp)(node, 'raws', 'attribute') || null;

            if (_rawValue) {
              node.raws.attribute += content;
            }

            lastAdded = 'attribute';
          } else if (!node.value && node.value !== "" || lastAdded === "value" && !spaceAfterMeaningfulToken) {
            var _unescaped = (0, _util.unesc)(content);

            var _oldRawValue = (0, _util.getProp)(node, 'raws', 'value') || '';

            var oldValue = node.value || '';
            node.value = oldValue + _unescaped;
            node.quoteMark = null;

            if (_unescaped !== content || _oldRawValue) {
              (0, _util.ensureObject)(node, 'raws');
              node.raws.value = (_oldRawValue || oldValue) + content;
            }

            lastAdded = 'value';
          } else {
            var insensitive = content === 'i' || content === "I";

            if ((node.value || node.value === '') && (node.quoteMark || spaceAfterMeaningfulToken)) {
              node.insensitive = insensitive;

              if (!insensitive || content === "I") {
                (0, _util.ensureObject)(node, 'raws');
                node.raws.insensitiveFlag = content;
              }

              lastAdded = 'insensitive';

              if (spaceBefore) {
                (0, _util.ensureObject)(node, 'spaces', 'insensitive');
                node.spaces.insensitive.before = spaceBefore;
                spaceBefore = '';
              }

              if (commentBefore) {
                (0, _util.ensureObject)(node, 'raws', 'spaces', 'insensitive');
                node.raws.spaces.insensitive.before = commentBefore;
                commentBefore = '';
              }
            } else if (node.value || node.value === '') {
              lastAdded = 'value';
              node.value += content;

              if (node.raws.value) {
                node.raws.value += content;
              }
            }
          }

          spaceAfterMeaningfulToken = false;
          break;

        case tokens.str:
          if (!node.attribute || !node.operator) {
            return this.error("Expected an attribute followed by an operator preceding the string.", {
              index: token[_tokenize.FIELDS.START_POS]
            });
          }

          var _unescapeValue = (0, _attribute.unescapeValue)(content),
              unescaped = _unescapeValue.unescaped,
              quoteMark = _unescapeValue.quoteMark;

          node.value = unescaped;
          node.quoteMark = quoteMark;
          lastAdded = 'value';
          (0, _util.ensureObject)(node, 'raws');
          node.raws.value = content;
          spaceAfterMeaningfulToken = false;
          break;

        case tokens.equals:
          if (!node.attribute) {
            return this.expected('attribute', token[_tokenize.FIELDS.START_POS], content);
          }

          if (node.value) {
            return this.error('Unexpected "=" found; an operator was already defined.', {
              index: token[_tokenize.FIELDS.START_POS]
            });
          }

          node.operator = node.operator ? node.operator + content : content;
          lastAdded = 'operator';
          spaceAfterMeaningfulToken = false;
          break;

        case tokens.comment:
          if (lastAdded) {
            if (spaceAfterMeaningfulToken || next && next[_tokenize.FIELDS.TYPE] === tokens.space || lastAdded === 'insensitive') {
              var lastComment = (0, _util.getProp)(node, 'spaces', lastAdded, 'after') || '';
              var rawLastComment = (0, _util.getProp)(node, 'raws', 'spaces', lastAdded, 'after') || lastComment;
              (0, _util.ensureObject)(node, 'raws', 'spaces', lastAdded);
              node.raws.spaces[lastAdded].after = rawLastComment + content;
            } else {
              var lastValue = node[lastAdded] || '';
              var rawLastValue = (0, _util.getProp)(node, 'raws', lastAdded) || lastValue;
              (0, _util.ensureObject)(node, 'raws');
              node.raws[lastAdded] = rawLastValue + content;
            }
          } else {
            commentBefore = commentBefore + content;
          }

          break;

        default:
          return this.error("Unexpected \"" + content + "\" found.", {
            index: token[_tokenize.FIELDS.START_POS]
          });
      }

      pos++;
    }

    unescapeProp(node, "attribute");
    unescapeProp(node, "namespace");
    this.newNode(new _attribute["default"](node));
    this.position++;
  }
  /**
   * return a node containing meaningless garbage up to (but not including) the specified token position.
   * if the token position is negative, all remaining tokens are consumed.
   *
   * This returns an array containing a single string node if all whitespace,
   * otherwise an array of comment nodes with space before and after.
   *
   * These tokens are not added to the current selector, the caller can add them or use them to amend
   * a previous node's space metadata.
   *
   * In lossy mode, this returns only comments.
   */
  ;

  _proto.parseWhitespaceEquivalentTokens = function parseWhitespaceEquivalentTokens(stopPosition) {
    if (stopPosition < 0) {
      stopPosition = this.tokens.length;
    }

    var startPosition = this.position;
    var nodes = [];
    var space = "";
    var lastComment = undefined;

    do {
      if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {
        if (!this.options.lossy) {
          space += this.content();
        }
      } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.comment) {
        var spaces = {};

        if (space) {
          spaces.before = space;
          space = "";
        }

        lastComment = new _comment["default"]({
          value: this.content(),
          source: getTokenSource(this.currToken),
          sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
          spaces: spaces
        });
        nodes.push(lastComment);
      }
    } while (++this.position < stopPosition);

    if (space) {
      if (lastComment) {
        lastComment.spaces.after = space;
      } else if (!this.options.lossy) {
        var firstToken = this.tokens[startPosition];
        var lastToken = this.tokens[this.position - 1];
        nodes.push(new _string["default"]({
          value: '',
          source: getSource(firstToken[_tokenize.FIELDS.START_LINE], firstToken[_tokenize.FIELDS.START_COL], lastToken[_tokenize.FIELDS.END_LINE], lastToken[_tokenize.FIELDS.END_COL]),
          sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
          spaces: {
            before: space,
            after: ''
          }
        }));
      }
    }

    return nodes;
  }
  /**
   * 
   * @param {*} nodes 
   */
  ;

  _proto.convertWhitespaceNodesToSpace = function convertWhitespaceNodesToSpace(nodes, requiredSpace) {
    var _this2 = this;

    if (requiredSpace === void 0) {
      requiredSpace = false;
    }

    var space = "";
    var rawSpace = "";
    nodes.forEach(function (n) {
      var spaceBefore = _this2.lossySpace(n.spaces.before, requiredSpace);

      var rawSpaceBefore = _this2.lossySpace(n.rawSpaceBefore, requiredSpace);

      space += spaceBefore + _this2.lossySpace(n.spaces.after, requiredSpace && spaceBefore.length === 0);
      rawSpace += spaceBefore + n.value + _this2.lossySpace(n.rawSpaceAfter, requiredSpace && rawSpaceBefore.length === 0);
    });

    if (rawSpace === space) {
      rawSpace = undefined;
    }

    var result = {
      space: space,
      rawSpace: rawSpace
    };
    return result;
  };

  _proto.isNamedCombinator = function isNamedCombinator(position) {
    if (position === void 0) {
      position = this.position;
    }

    return this.tokens[position + 0] && this.tokens[position + 0][_tokenize.FIELDS.TYPE] === tokens.slash && this.tokens[position + 1] && this.tokens[position + 1][_tokenize.FIELDS.TYPE] === tokens.word && this.tokens[position + 2] && this.tokens[position + 2][_tokenize.FIELDS.TYPE] === tokens.slash;
  };

  _proto.namedCombinator = function namedCombinator() {
    if (this.isNamedCombinator()) {
      var nameRaw = this.content(this.tokens[this.position + 1]);
      var name = (0, _util.unesc)(nameRaw).toLowerCase();
      var raws = {};

      if (name !== nameRaw) {
        raws.value = "/" + nameRaw + "/";
      }

      var node = new _combinator["default"]({
        value: "/" + name + "/",
        source: getSource(this.currToken[_tokenize.FIELDS.START_LINE], this.currToken[_tokenize.FIELDS.START_COL], this.tokens[this.position + 2][_tokenize.FIELDS.END_LINE], this.tokens[this.position + 2][_tokenize.FIELDS.END_COL]),
        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS],
        raws: raws
      });
      this.position = this.position + 3;
      return node;
    } else {
      this.unexpected();
    }
  };

  _proto.combinator = function combinator() {
    var _this3 = this;

    if (this.content() === '|') {
      return this.namespace();
    } // We need to decide between a space that's a descendant combinator and meaningless whitespace at the end of a selector.


    var nextSigTokenPos = this.locateNextMeaningfulToken(this.position);

    if (nextSigTokenPos < 0 || this.tokens[nextSigTokenPos][_tokenize.FIELDS.TYPE] === tokens.comma) {
      var nodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);

      if (nodes.length > 0) {
        var last = this.current.last;

        if (last) {
          var _this$convertWhitespa = this.convertWhitespaceNodesToSpace(nodes),
              space = _this$convertWhitespa.space,
              rawSpace = _this$convertWhitespa.rawSpace;

          if (rawSpace !== undefined) {
            last.rawSpaceAfter += rawSpace;
          }

          last.spaces.after += space;
        } else {
          nodes.forEach(function (n) {
            return _this3.newNode(n);
          });
        }
      }

      return;
    }

    var firstToken = this.currToken;
    var spaceOrDescendantSelectorNodes = undefined;

    if (nextSigTokenPos > this.position) {
      spaceOrDescendantSelectorNodes = this.parseWhitespaceEquivalentTokens(nextSigTokenPos);
    }

    var node;

    if (this.isNamedCombinator()) {
      node = this.namedCombinator();
    } else if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.combinator) {
      node = new _combinator["default"]({
        value: this.content(),
        source: getTokenSource(this.currToken),
        sourceIndex: this.currToken[_tokenize.FIELDS.START_POS]
      });
      this.position++;
    } else if (WHITESPACE_TOKENS[this.currToken[_tokenize.FIELDS.TYPE]]) {// pass
    } else if (!spaceOrDescendantSelectorNodes) {
      this.unexpected();
    }

    if (node) {
      if (spaceOrDescendantSelectorNodes) {
        var _this$convertWhitespa2 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes),
            _space = _this$convertWhitespa2.space,
            _rawSpace = _this$convertWhitespa2.rawSpace;

        node.spaces.before = _space;
        node.rawSpaceBefore = _rawSpace;
      }
    } else {
      // descendant combinator
      var _this$convertWhitespa3 = this.convertWhitespaceNodesToSpace(spaceOrDescendantSelectorNodes, true),
          _space2 = _this$convertWhitespa3.space,
          _rawSpace2 = _this$convertWhitespa3.rawSpace;

      if (!_rawSpace2) {
        _rawSpace2 = _space2;
      }

      var spaces = {};
      var raws = {
        spaces: {}
      };

      if (_space2.endsWith(' ') && _rawSpace2.endsWith(' ')) {
        spaces.before = _space2.slice(0, _space2.length - 1);
        raws.spaces.before = _rawSpace2.slice(0, _rawSpace2.length - 1);
      } else if (_space2.startsWith(' ') && _rawSpace2.startsWith(' ')) {
        spaces.after = _space2.slice(1);
        raws.spaces.after = _rawSpace2.slice(1);
      } else {
        raws.value = _rawSpace2;
      }

      node = new _combinator["default"]({
        value: ' ',
        source: getTokenSourceSpan(firstToken, this.tokens[this.position - 1]),
        sourceIndex: firstToken[_tokenize.FIELDS.START_POS],
        spaces: spaces,
        raws: raws
      });
    }

    if (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.space) {
      node.spaces.after = this.optionalSpace(this.content());
      this.position++;
    }

    return this.newNode(node);
  };

  _proto.comma = function comma() {
    if (this.position === this.tokens.length - 1) {
      this.root.trailingComma = true;
      this.position++;
      return;
    }

    this.current._inferEndPosition();

    var selector = new _selector["default"]({
      source: {
        start: tokenStart(this.tokens[this.position + 1])
      }
    });
    this.current.parent.append(selector);
    this.current = selector;
    this.position++;
  };

  _proto.comment = function comment() {
    var current = this.currToken;
    this.newNode(new _comment["default"]({
      value: this.content(),
      source: getTokenSource(current),
      sourceIndex: current[_tokenize.FIELDS.START_POS]
    }));
    this.position++;
  };

  _proto.error = function error(message, opts) {
    throw this.root.error(message, opts);
  };

  _proto.missingBackslash = function missingBackslash() {
    return this.error('Expected a backslash preceding the semicolon.', {
      index: this.currToken[_tokenize.FIELDS.START_POS]
    });
  };

  _proto.missingParenthesis = function missingParenthesis() {
    return this.expected('opening parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);
  };

  _proto.missingSquareBracket = function missingSquareBracket() {
    return this.expected('opening square bracket', this.currToken[_tokenize.FIELDS.START_POS]);
  };

  _proto.unexpected = function unexpected() {
    return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[_tokenize.FIELDS.START_POS]);
  };

  _proto.namespace = function namespace() {
    var before = this.prevToken && this.content(this.prevToken) || true;

    if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.word) {
      this.position++;
      return this.word(before);
    } else if (this.nextToken[_tokenize.FIELDS.TYPE] === tokens.asterisk) {
      this.position++;
      return this.universal(before);
    }
  };

  _proto.nesting = function nesting() {
    if (this.nextToken) {
      var nextContent = this.content(this.nextToken);

      if (nextContent === "|") {
        this.position++;
        return;
      }
    }

    var current = this.currToken;
    this.newNode(new _nesting["default"]({
      value: this.content(),
      source: getTokenSource(current),
      sourceIndex: current[_tokenize.FIELDS.START_POS]
    }));
    this.position++;
  };

  _proto.parentheses = function parentheses() {
    var last = this.current.last;
    var unbalanced = 1;
    this.position++;

    if (last && last.type === types.PSEUDO) {
      var selector = new _selector["default"]({
        source: {
          start: tokenStart(this.tokens[this.position - 1])
        }
      });
      var cache = this.current;
      last.append(selector);
      this.current = selector;

      while (this.position < this.tokens.length && unbalanced) {
        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
          unbalanced++;
        }

        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
          unbalanced--;
        }

        if (unbalanced) {
          this.parse();
        } else {
          this.current.source.end = tokenEnd(this.currToken);
          this.current.parent.source.end = tokenEnd(this.currToken);
          this.position++;
        }
      }

      this.current = cache;
    } else {
      // I think this case should be an error. It's used to implement a basic parse of media queries
      // but I don't think it's a good idea.
      var parenStart = this.currToken;
      var parenValue = "(";
      var parenEnd;

      while (this.position < this.tokens.length && unbalanced) {
        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
          unbalanced++;
        }

        if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
          unbalanced--;
        }

        parenEnd = this.currToken;
        parenValue += this.parseParenthesisToken(this.currToken);
        this.position++;
      }

      if (last) {
        last.appendToPropertyAndEscape("value", parenValue, parenValue);
      } else {
        this.newNode(new _string["default"]({
          value: parenValue,
          source: getSource(parenStart[_tokenize.FIELDS.START_LINE], parenStart[_tokenize.FIELDS.START_COL], parenEnd[_tokenize.FIELDS.END_LINE], parenEnd[_tokenize.FIELDS.END_COL]),
          sourceIndex: parenStart[_tokenize.FIELDS.START_POS]
        }));
      }
    }

    if (unbalanced) {
      return this.expected('closing parenthesis', this.currToken[_tokenize.FIELDS.START_POS]);
    }
  };

  _proto.pseudo = function pseudo() {
    var _this4 = this;

    var pseudoStr = '';
    var startingToken = this.currToken;

    while (this.currToken && this.currToken[_tokenize.FIELDS.TYPE] === tokens.colon) {
      pseudoStr += this.content();
      this.position++;
    }

    if (!this.currToken) {
      return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);
    }

    if (this.currToken[_tokenize.FIELDS.TYPE] === tokens.word) {
      this.splitWord(false, function (first, length) {
        pseudoStr += first;

        _this4.newNode(new _pseudo["default"]({
          value: pseudoStr,
          source: getTokenSourceSpan(startingToken, _this4.currToken),
          sourceIndex: startingToken[_tokenize.FIELDS.START_POS]
        }));

        if (length > 1 && _this4.nextToken && _this4.nextToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis) {
          _this4.error('Misplaced parenthesis.', {
            index: _this4.nextToken[_tokenize.FIELDS.START_POS]
          });
        }
      });
    } else {
      return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[_tokenize.FIELDS.START_POS]);
    }
  };

  _proto.space = function space() {
    var content = this.content(); // Handle space before and after the selector

    if (this.position === 0 || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.prevToken[_tokenize.FIELDS.TYPE] === tokens.openParenthesis || this.current.nodes.every(function (node) {
      return node.type === 'comment';
    })) {
      this.spaces = this.optionalSpace(content);
      this.position++;
    } else if (this.position === this.tokens.length - 1 || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.comma || this.nextToken[_tokenize.FIELDS.TYPE] === tokens.closeParenthesis) {
      this.current.last.spaces.after = this.optionalSpace(content);
      this.position++;
    } else {
      this.combinator();
    }
  };

  _proto.string = function string() {
    var current = this.currToken;
    this.newNode(new _string["default"]({
      value: this.content(),
      source: getTokenSource(current),
      sourceIndex: current[_tokenize.FIELDS.START_POS]
    }));
    this.position++;
  };

  _proto.universal = function universal(namespace) {
    var nextToken = this.nextToken;

    if (nextToken && this.content(nextToken) === '|') {
      this.position++;
      return this.namespace();
    }

    var current = this.currToken;
    this.newNode(new _universal["default"]({
      value: this.content(),
      source: getTokenSource(current),
      sourceIndex: current[_tokenize.FIELDS.START_POS]
    }), namespace);
    this.position++;
  };

  _proto.splitWord = function splitWord(namespace, firstCallback) {
    var _this5 = this;

    var nextToken = this.nextToken;
    var word = this.content();

    while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[_tokenize.FIELDS.TYPE])) {
      this.position++;
      var current = this.content();
      word += current;

      if (current.lastIndexOf('\\') === current.length - 1) {
        var next = this.nextToken;

        if (next && next[_tokenize.FIELDS.TYPE] === tokens.space) {
          word += this.requiredSpace(this.content(next));
          this.position++;
        }
      }

      nextToken = this.nextToken;
    }

    var hasClass = indexesOf(word, '.').filter(function (i) {
      // Allow escaped dot within class name
      var escapedDot = word[i - 1] === '\\'; // Allow decimal numbers percent in @keyframes

      var isKeyframesPercent = /^\d+\.\d+%$/.test(word);
      return !escapedDot && !isKeyframesPercent;
    });
    var hasId = indexesOf(word, '#').filter(function (i) {
      return word[i - 1] !== '\\';
    }); // Eliminate Sass interpolations from the list of id indexes

    var interpolations = indexesOf(word, '#{');

    if (interpolations.length) {
      hasId = hasId.filter(function (hashIndex) {
        return !~interpolations.indexOf(hashIndex);
      });
    }

    var indices = (0, _sortAscending["default"])(uniqs([0].concat(hasClass, hasId)));
    indices.forEach(function (ind, i) {
      var index = indices[i + 1] || word.length;
      var value = word.slice(ind, index);

      if (i === 0 && firstCallback) {
        return firstCallback.call(_this5, value, indices.length);
      }

      var node;
      var current = _this5.currToken;
      var sourceIndex = current[_tokenize.FIELDS.START_POS] + indices[i];
      var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));

      if (~hasClass.indexOf(ind)) {
        var classNameOpts = {
          value: value.slice(1),
          source: source,
          sourceIndex: sourceIndex
        };
        node = new _className["default"](unescapeProp(classNameOpts, "value"));
      } else if (~hasId.indexOf(ind)) {
        var idOpts = {
          value: value.slice(1),
          source: source,
          sourceIndex: sourceIndex
        };
        node = new _id["default"](unescapeProp(idOpts, "value"));
      } else {
        var tagOpts = {
          value: value,
          source: source,
          sourceIndex: sourceIndex
        };
        unescapeProp(tagOpts, "value");
        node = new _tag["default"](tagOpts);
      }

      _this5.newNode(node, namespace); // Ensure that the namespace is used only once


      namespace = null;
    });
    this.position++;
  };

  _proto.word = function word(namespace) {
    var nextToken = this.nextToken;

    if (nextToken && this.content(nextToken) === '|') {
      this.position++;
      return this.namespace();
    }

    return this.splitWord(namespace);
  };

  _proto.loop = function loop() {
    while (this.position < this.tokens.length) {
      this.parse(true);
    }

    this.current._inferEndPosition();

    return this.root;
  };

  _proto.parse = function parse(throwOnParenthesis) {
    switch (this.currToken[_tokenize.FIELDS.TYPE]) {
      case tokens.space:
        this.space();
        break;

      case tokens.comment:
        this.comment();
        break;

      case tokens.openParenthesis:
        this.parentheses();
        break;

      case tokens.closeParenthesis:
        if (throwOnParenthesis) {
          this.missingParenthesis();
        }

        break;

      case tokens.openSquare:
        this.attribute();
        break;

      case tokens.dollar:
      case tokens.caret:
      case tokens.equals:
      case tokens.word:
        this.word();
        break;

      case tokens.colon:
        this.pseudo();
        break;

      case tokens.comma:
        this.comma();
        break;

      case tokens.asterisk:
        this.universal();
        break;

      case tokens.ampersand:
        this.nesting();
        break;

      case tokens.slash:
      case tokens.combinator:
        this.combinator();
        break;

      case tokens.str:
        this.string();
        break;
      // These cases throw; no break needed.

      case tokens.closeSquare:
        this.missingSquareBracket();

      case tokens.semicolon:
        this.missingBackslash();

      default:
        this.unexpected();
    }
  }
  /**
   * Helpers
   */
  ;

  _proto.expected = function expected(description, index, found) {
    if (Array.isArray(description)) {
      var last = description.pop();
      description = description.join(', ') + " or " + last;
    }

    var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';

    if (!found) {
      return this.error("Expected " + an + " " + description + ".", {
        index: index
      });
    }

    return this.error("Expected " + an + " " + description + ", found \"" + found + "\" instead.", {
      index: index
    });
  };

  _proto.requiredSpace = function requiredSpace(space) {
    return this.options.lossy ? ' ' : space;
  };

  _proto.optionalSpace = function optionalSpace(space) {
    return this.options.lossy ? '' : space;
  };

  _proto.lossySpace = function lossySpace(space, required) {
    if (this.options.lossy) {
      return required ? ' ' : '';
    } else {
      return space;
    }
  };

  _proto.parseParenthesisToken = function parseParenthesisToken(token) {
    var content = this.content(token);

    if (token[_tokenize.FIELDS.TYPE] === tokens.space) {
      return this.requiredSpace(content);
    } else {
      return content;
    }
  };

  _proto.newNode = function newNode(node, namespace) {
    if (namespace) {
      if (/^ +$/.test(namespace)) {
        if (!this.options.lossy) {
          this.spaces = (this.spaces || '') + namespace;
        }

        namespace = true;
      }

      node.namespace = namespace;
      unescapeProp(node, "namespace");
    }

    if (this.spaces) {
      node.spaces.before = this.spaces;
      this.spaces = '';
    }

    return this.current.append(node);
  };

  _proto.content = function content(token) {
    if (token === void 0) {
      token = this.currToken;
    }

    return this.css.slice(token[_tokenize.FIELDS.START_POS], token[_tokenize.FIELDS.END_POS]);
  };

  /**
   * returns the index of the next non-whitespace, non-comment token.
   * returns -1 if no meaningful token is found.
   */
  _proto.locateNextMeaningfulToken = function locateNextMeaningfulToken(startPosition) {
    if (startPosition === void 0) {
      startPosition = this.position + 1;
    }

    var searchPosition = startPosition;

    while (searchPosition < this.tokens.length) {
      if (WHITESPACE_EQUIV_TOKENS[this.tokens[searchPosition][_tokenize.FIELDS.TYPE]]) {
        searchPosition++;
        continue;
      } else {
        return searchPosition;
      }
    }

    return -1;
  };

  _createClass(Parser, [{
    key: "currToken",
    get: function get() {
      return this.tokens[this.position];
    }
  }, {
    key: "nextToken",
    get: function get() {
      return this.tokens[this.position + 1];
    }
  }, {
    key: "prevToken",
    get: function get() {
      return this.tokens[this.position - 1];
    }
  }]);

  return Parser;
}();

exports["default"] = Parser;
module.exports = exports.default;
},{"./selectors/attribute":696,"./selectors/className":697,"./selectors/combinator":698,"./selectors/comment":699,"./selectors/id":703,"./selectors/nesting":706,"./selectors/pseudo":708,"./selectors/root":709,"./selectors/selector":710,"./selectors/string":711,"./selectors/tag":712,"./selectors/types":713,"./selectors/universal":714,"./sortAscending":715,"./tokenTypes":716,"./tokenize":717,"./util":720}],695:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _parser = _interopRequireDefault(require("./parser"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var Processor = /*#__PURE__*/function () {
  function Processor(func, options) {
    this.func = func || function noop() {};

    this.funcRes = null;
    this.options = options;
  }

  var _proto = Processor.prototype;

  _proto._shouldUpdateSelector = function _shouldUpdateSelector(rule, options) {
    if (options === void 0) {
      options = {};
    }

    var merged = Object.assign({}, this.options, options);

    if (merged.updateSelector === false) {
      return false;
    } else {
      return typeof rule !== "string";
    }
  };

  _proto._isLossy = function _isLossy(options) {
    if (options === void 0) {
      options = {};
    }

    var merged = Object.assign({}, this.options, options);

    if (merged.lossless === false) {
      return true;
    } else {
      return false;
    }
  };

  _proto._root = function _root(rule, options) {
    if (options === void 0) {
      options = {};
    }

    var parser = new _parser["default"](rule, this._parseOptions(options));
    return parser.root;
  };

  _proto._parseOptions = function _parseOptions(options) {
    return {
      lossy: this._isLossy(options)
    };
  };

  _proto._run = function _run(rule, options) {
    var _this = this;

    if (options === void 0) {
      options = {};
    }

    return new Promise(function (resolve, reject) {
      try {
        var root = _this._root(rule, options);

        Promise.resolve(_this.func(root)).then(function (transform) {
          var string = undefined;

          if (_this._shouldUpdateSelector(rule, options)) {
            string = root.toString();
            rule.selector = string;
          }

          return {
            transform: transform,
            root: root,
            string: string
          };
        }).then(resolve, reject);
      } catch (e) {
        reject(e);
        return;
      }
    });
  };

  _proto._runSync = function _runSync(rule, options) {
    if (options === void 0) {
      options = {};
    }

    var root = this._root(rule, options);

    var transform = this.func(root);

    if (transform && typeof transform.then === "function") {
      throw new Error("Selector processor returned a promise to a synchronous call.");
    }

    var string = undefined;

    if (options.updateSelector && typeof rule !== "string") {
      string = root.toString();
      rule.selector = string;
    }

    return {
      transform: transform,
      root: root,
      string: string
    };
  }
  /**
   * Process rule into a selector AST.
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {Promise<parser.Root>} The AST of the selector after processing it.
   */
  ;

  _proto.ast = function ast(rule, options) {
    return this._run(rule, options).then(function (result) {
      return result.root;
    });
  }
  /**
   * Process rule into a selector AST synchronously.
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {parser.Root} The AST of the selector after processing it.
   */
  ;

  _proto.astSync = function astSync(rule, options) {
    return this._runSync(rule, options).root;
  }
  /**
   * Process a selector into a transformed value asynchronously
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {Promise<any>} The value returned by the processor.
   */
  ;

  _proto.transform = function transform(rule, options) {
    return this._run(rule, options).then(function (result) {
      return result.transform;
    });
  }
  /**
   * Process a selector into a transformed value synchronously.
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {any} The value returned by the processor.
   */
  ;

  _proto.transformSync = function transformSync(rule, options) {
    return this._runSync(rule, options).transform;
  }
  /**
   * Process a selector into a new selector string asynchronously.
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {string} the selector after processing.
   */
  ;

  _proto.process = function process(rule, options) {
    return this._run(rule, options).then(function (result) {
      return result.string || result.root.toString();
    });
  }
  /**
   * Process a selector into a new selector string synchronously.
   *
   * @param rule {postcss.Rule | string} The css selector to be processed
   * @param options The options for processing
   * @returns {string} the selector after processing.
   */
  ;

  _proto.processSync = function processSync(rule, options) {
    var result = this._runSync(rule, options);

    return result.string || result.root.toString();
  };

  return Processor;
}();

exports["default"] = Processor;
module.exports = exports.default;
},{"./parser":694}],696:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.unescapeValue = unescapeValue;
exports["default"] = void 0;

var _cssesc = _interopRequireDefault(require("cssesc"));

var _unesc = _interopRequireDefault(require("../util/unesc"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _types = require("./types");

var _CSSESC_QUOTE_OPTIONS;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var deprecate = require("util-deprecate");

var WRAPPED_IN_QUOTES = /^('|")([^]*)\1$/;
var warnOfDeprecatedValueAssignment = deprecate(function () {}, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. " + "Call attribute.setValue() instead.");
var warnOfDeprecatedQuotedAssignment = deprecate(function () {}, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead.");
var warnOfDeprecatedConstructor = deprecate(function () {}, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");

function unescapeValue(value) {
  var deprecatedUsage = false;
  var quoteMark = null;
  var unescaped = value;
  var m = unescaped.match(WRAPPED_IN_QUOTES);

  if (m) {
    quoteMark = m[1];
    unescaped = m[2];
  }

  unescaped = (0, _unesc["default"])(unescaped);

  if (unescaped !== value) {
    deprecatedUsage = true;
  }

  return {
    deprecatedUsage: deprecatedUsage,
    unescaped: unescaped,
    quoteMark: quoteMark
  };
}

function handleDeprecatedContructorOpts(opts) {
  if (opts.quoteMark !== undefined) {
    return opts;
  }

  if (opts.value === undefined) {
    return opts;
  }

  warnOfDeprecatedConstructor();

  var _unescapeValue = unescapeValue(opts.value),
      quoteMark = _unescapeValue.quoteMark,
      unescaped = _unescapeValue.unescaped;

  if (!opts.raws) {
    opts.raws = {};
  }

  if (opts.raws.value === undefined) {
    opts.raws.value = opts.value;
  }

  opts.value = unescaped;
  opts.quoteMark = quoteMark;
  return opts;
}

var Attribute = /*#__PURE__*/function (_Namespace) {
  _inheritsLoose(Attribute, _Namespace);

  function Attribute(opts) {
    var _this;

    if (opts === void 0) {
      opts = {};
    }

    _this = _Namespace.call(this, handleDeprecatedContructorOpts(opts)) || this;
    _this.type = _types.ATTRIBUTE;
    _this.raws = _this.raws || {};
    Object.defineProperty(_this.raws, 'unquoted', {
      get: deprecate(function () {
        return _this.value;
      }, "attr.raws.unquoted is deprecated. Call attr.value instead."),
      set: deprecate(function () {
        return _this.value;
      }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.")
    });
    _this._constructed = true;
    return _this;
  }
  /**
   * Returns the Attribute's value quoted such that it would be legal to use
   * in the value of a css file. The original value's quotation setting
   * used for stringification is left unchanged. See `setValue(value, options)`
   * if you want to control the quote settings of a new value for the attribute.
   *
   * You can also change the quotation used for the current value by setting quoteMark.
   *
   * Options:
   *   * quoteMark {'"' | "'" | null} - Use this value to quote the value. If this
   *     option is not set, the original value for quoteMark will be used. If
   *     indeterminate, a double quote is used. The legal values are:
   *     * `null` - the value will be unquoted and characters will be escaped as necessary.
   *     * `'` - the value will be quoted with a single quote and single quotes are escaped.
   *     * `"` - the value will be quoted with a double quote and double quotes are escaped.
   *   * preferCurrentQuoteMark {boolean} - if true, prefer the source quote mark
   *     over the quoteMark option value.
   *   * smart {boolean} - if true, will select a quote mark based on the value
   *     and the other options specified here. See the `smartQuoteMark()`
   *     method.
   **/


  var _proto = Attribute.prototype;

  _proto.getQuotedValue = function getQuotedValue(options) {
    if (options === void 0) {
      options = {};
    }

    var quoteMark = this._determineQuoteMark(options);

    var cssescopts = CSSESC_QUOTE_OPTIONS[quoteMark];
    var escaped = (0, _cssesc["default"])(this._value, cssescopts);
    return escaped;
  };

  _proto._determineQuoteMark = function _determineQuoteMark(options) {
    return options.smart ? this.smartQuoteMark(options) : this.preferredQuoteMark(options);
  }
  /**
   * Set the unescaped value with the specified quotation options. The value
   * provided must not include any wrapping quote marks -- those quotes will
   * be interpreted as part of the value and escaped accordingly.
   */
  ;

  _proto.setValue = function setValue(value, options) {
    if (options === void 0) {
      options = {};
    }

    this._value = value;
    this._quoteMark = this._determineQuoteMark(options);

    this._syncRawValue();
  }
  /**
   * Intelligently select a quoteMark value based on the value's contents. If
   * the value is a legal CSS ident, it will not be quoted. Otherwise a quote
   * mark will be picked that minimizes the number of escapes.
   *
   * If there's no clear winner, the quote mark from these options is used,
   * then the source quote mark (this is inverted if `preferCurrentQuoteMark` is
   * true). If the quoteMark is unspecified, a double quote is used.
   *
   * @param options This takes the quoteMark and preferCurrentQuoteMark options
   * from the quoteValue method.
   */
  ;

  _proto.smartQuoteMark = function smartQuoteMark(options) {
    var v = this.value;
    var numSingleQuotes = v.replace(/[^']/g, '').length;
    var numDoubleQuotes = v.replace(/[^"]/g, '').length;

    if (numSingleQuotes + numDoubleQuotes === 0) {
      var escaped = (0, _cssesc["default"])(v, {
        isIdentifier: true
      });

      if (escaped === v) {
        return Attribute.NO_QUOTE;
      } else {
        var pref = this.preferredQuoteMark(options);

        if (pref === Attribute.NO_QUOTE) {
          // pick a quote mark that isn't none and see if it's smaller
          var quote = this.quoteMark || options.quoteMark || Attribute.DOUBLE_QUOTE;
          var opts = CSSESC_QUOTE_OPTIONS[quote];
          var quoteValue = (0, _cssesc["default"])(v, opts);

          if (quoteValue.length < escaped.length) {
            return quote;
          }
        }

        return pref;
      }
    } else if (numDoubleQuotes === numSingleQuotes) {
      return this.preferredQuoteMark(options);
    } else if (numDoubleQuotes < numSingleQuotes) {
      return Attribute.DOUBLE_QUOTE;
    } else {
      return Attribute.SINGLE_QUOTE;
    }
  }
  /**
   * Selects the preferred quote mark based on the options and the current quote mark value.
   * If you want the quote mark to depend on the attribute value, call `smartQuoteMark(opts)`
   * instead.
   */
  ;

  _proto.preferredQuoteMark = function preferredQuoteMark(options) {
    var quoteMark = options.preferCurrentQuoteMark ? this.quoteMark : options.quoteMark;

    if (quoteMark === undefined) {
      quoteMark = options.preferCurrentQuoteMark ? options.quoteMark : this.quoteMark;
    }

    if (quoteMark === undefined) {
      quoteMark = Attribute.DOUBLE_QUOTE;
    }

    return quoteMark;
  };

  _proto._syncRawValue = function _syncRawValue() {
    var rawValue = (0, _cssesc["default"])(this._value, CSSESC_QUOTE_OPTIONS[this.quoteMark]);

    if (rawValue === this._value) {
      if (this.raws) {
        delete this.raws.value;
      }
    } else {
      this.raws.value = rawValue;
    }
  };

  _proto._handleEscapes = function _handleEscapes(prop, value) {
    if (this._constructed) {
      var escaped = (0, _cssesc["default"])(value, {
        isIdentifier: true
      });

      if (escaped !== value) {
        this.raws[prop] = escaped;
      } else {
        delete this.raws[prop];
      }
    }
  };

  _proto._spacesFor = function _spacesFor(name) {
    var attrSpaces = {
      before: '',
      after: ''
    };
    var spaces = this.spaces[name] || {};
    var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};
    return Object.assign(attrSpaces, spaces, rawSpaces);
  };

  _proto._stringFor = function _stringFor(name, spaceName, concat) {
    if (spaceName === void 0) {
      spaceName = name;
    }

    if (concat === void 0) {
      concat = defaultAttrConcat;
    }

    var attrSpaces = this._spacesFor(spaceName);

    return concat(this.stringifyProperty(name), attrSpaces);
  }
  /**
   * returns the offset of the attribute part specified relative to the
   * start of the node of the output string.
   *
   * * "ns" - alias for "namespace"
   * * "namespace" - the namespace if it exists.
   * * "attribute" - the attribute name
   * * "attributeNS" - the start of the attribute or its namespace
   * * "operator" - the match operator of the attribute
   * * "value" - The value (string or identifier)
   * * "insensitive" - the case insensitivity flag;
   * @param part One of the possible values inside an attribute.
   * @returns -1 if the name is invalid or the value doesn't exist in this attribute.
   */
  ;

  _proto.offsetOf = function offsetOf(name) {
    var count = 1;

    var attributeSpaces = this._spacesFor("attribute");

    count += attributeSpaces.before.length;

    if (name === "namespace" || name === "ns") {
      return this.namespace ? count : -1;
    }

    if (name === "attributeNS") {
      return count;
    }

    count += this.namespaceString.length;

    if (this.namespace) {
      count += 1;
    }

    if (name === "attribute") {
      return count;
    }

    count += this.stringifyProperty("attribute").length;
    count += attributeSpaces.after.length;

    var operatorSpaces = this._spacesFor("operator");

    count += operatorSpaces.before.length;
    var operator = this.stringifyProperty("operator");

    if (name === "operator") {
      return operator ? count : -1;
    }

    count += operator.length;
    count += operatorSpaces.after.length;

    var valueSpaces = this._spacesFor("value");

    count += valueSpaces.before.length;
    var value = this.stringifyProperty("value");

    if (name === "value") {
      return value ? count : -1;
    }

    count += value.length;
    count += valueSpaces.after.length;

    var insensitiveSpaces = this._spacesFor("insensitive");

    count += insensitiveSpaces.before.length;

    if (name === "insensitive") {
      return this.insensitive ? count : -1;
    }

    return -1;
  };

  _proto.toString = function toString() {
    var _this2 = this;

    var selector = [this.rawSpaceBefore, '['];
    selector.push(this._stringFor('qualifiedAttribute', 'attribute'));

    if (this.operator && (this.value || this.value === '')) {
      selector.push(this._stringFor('operator'));
      selector.push(this._stringFor('value'));
      selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {
        if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {
          attrSpaces.before = " ";
        }

        return defaultAttrConcat(attrValue, attrSpaces);
      }));
    }

    selector.push(']');
    selector.push(this.rawSpaceAfter);
    return selector.join('');
  };

  _createClass(Attribute, [{
    key: "quoted",
    get: function get() {
      var qm = this.quoteMark;
      return qm === "'" || qm === '"';
    },
    set: function set(value) {
      warnOfDeprecatedQuotedAssignment();
    }
    /**
     * returns a single (`'`) or double (`"`) quote character if the value is quoted.
     * returns `null` if the value is not quoted.
     * returns `undefined` if the quotation state is unknown (this can happen when
     * the attribute is constructed without specifying a quote mark.)
     */

  }, {
    key: "quoteMark",
    get: function get() {
      return this._quoteMark;
    }
    /**
     * Set the quote mark to be used by this attribute's value.
     * If the quote mark changes, the raw (escaped) value at `attr.raws.value` of the attribute
     * value is updated accordingly.
     *
     * @param {"'" | '"' | null} quoteMark The quote mark or `null` if the value should be unquoted.
     */
    ,
    set: function set(quoteMark) {
      if (!this._constructed) {
        this._quoteMark = quoteMark;
        return;
      }

      if (this._quoteMark !== quoteMark) {
        this._quoteMark = quoteMark;

        this._syncRawValue();
      }
    }
  }, {
    key: "qualifiedAttribute",
    get: function get() {
      return this.qualifiedName(this.raws.attribute || this.attribute);
    }
  }, {
    key: "insensitiveFlag",
    get: function get() {
      return this.insensitive ? 'i' : '';
    }
  }, {
    key: "value",
    get: function get() {
      return this._value;
    }
    /**
     * Before 3.0, the value had to be set to an escaped value including any wrapped
     * quote marks. In 3.0, the semantics of `Attribute.value` changed so that the value
     * is unescaped during parsing and any quote marks are removed.
     *
     * Because the ambiguity of this semantic change, if you set `attr.value = newValue`,
     * a deprecation warning is raised when the new value contains any characters that would
     * require escaping (including if it contains wrapped quotes).
     *
     * Instead, you should call `attr.setValue(newValue, opts)` and pass options that describe
     * how the new value is quoted.
     */
    ,
    set: function set(v) {
      if (this._constructed) {
        var _unescapeValue2 = unescapeValue(v),
            deprecatedUsage = _unescapeValue2.deprecatedUsage,
            unescaped = _unescapeValue2.unescaped,
            quoteMark = _unescapeValue2.quoteMark;

        if (deprecatedUsage) {
          warnOfDeprecatedValueAssignment();
        }

        if (unescaped === this._value && quoteMark === this._quoteMark) {
          return;
        }

        this._value = unescaped;
        this._quoteMark = quoteMark;

        this._syncRawValue();
      } else {
        this._value = v;
      }
    }
  }, {
    key: "attribute",
    get: function get() {
      return this._attribute;
    },
    set: function set(name) {
      this._handleEscapes("attribute", name);

      this._attribute = name;
    }
  }]);

  return Attribute;
}(_namespace["default"]);

exports["default"] = Attribute;
Attribute.NO_QUOTE = null;
Attribute.SINGLE_QUOTE = "'";
Attribute.DOUBLE_QUOTE = '"';
var CSSESC_QUOTE_OPTIONS = (_CSSESC_QUOTE_OPTIONS = {
  "'": {
    quotes: 'single',
    wrap: true
  },
  '"': {
    quotes: 'double',
    wrap: true
  }
}, _CSSESC_QUOTE_OPTIONS[null] = {
  isIdentifier: true
}, _CSSESC_QUOTE_OPTIONS);

function defaultAttrConcat(attrValue, attrSpaces) {
  return "" + attrSpaces.before + attrValue + attrSpaces.after;
}
},{"../util/unesc":722,"./namespace":705,"./types":713,"cssesc":654,"util-deprecate":756}],697:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _cssesc = _interopRequireDefault(require("cssesc"));

var _util = require("../util");

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ClassName = /*#__PURE__*/function (_Node) {
  _inheritsLoose(ClassName, _Node);

  function ClassName(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.CLASS;
    _this._constructed = true;
    return _this;
  }

  var _proto = ClassName.prototype;

  _proto.valueToString = function valueToString() {
    return '.' + _Node.prototype.valueToString.call(this);
  };

  _createClass(ClassName, [{
    key: "value",
    get: function get() {
      return this._value;
    },
    set: function set(v) {
      if (this._constructed) {
        var escaped = (0, _cssesc["default"])(v, {
          isIdentifier: true
        });

        if (escaped !== v) {
          (0, _util.ensureObject)(this, "raws");
          this.raws.value = escaped;
        } else if (this.raws) {
          delete this.raws.value;
        }
      }

      this._value = v;
    }
  }]);

  return ClassName;
}(_node["default"]);

exports["default"] = ClassName;
module.exports = exports.default;
},{"../util":720,"./node":707,"./types":713,"cssesc":654}],698:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Combinator = /*#__PURE__*/function (_Node) {
  _inheritsLoose(Combinator, _Node);

  function Combinator(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.COMBINATOR;
    return _this;
  }

  return Combinator;
}(_node["default"]);

exports["default"] = Combinator;
module.exports = exports.default;
},{"./node":707,"./types":713}],699:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Comment = /*#__PURE__*/function (_Node) {
  _inheritsLoose(Comment, _Node);

  function Comment(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.COMMENT;
    return _this;
  }

  return Comment;
}(_node["default"]);

exports["default"] = Comment;
module.exports = exports.default;
},{"./node":707,"./types":713}],700:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = void 0;

var _attribute = _interopRequireDefault(require("./attribute"));

var _className = _interopRequireDefault(require("./className"));

var _combinator = _interopRequireDefault(require("./combinator"));

var _comment = _interopRequireDefault(require("./comment"));

var _id = _interopRequireDefault(require("./id"));

var _nesting = _interopRequireDefault(require("./nesting"));

var _pseudo = _interopRequireDefault(require("./pseudo"));

var _root = _interopRequireDefault(require("./root"));

var _selector = _interopRequireDefault(require("./selector"));

var _string = _interopRequireDefault(require("./string"));

var _tag = _interopRequireDefault(require("./tag"));

var _universal = _interopRequireDefault(require("./universal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var attribute = function attribute(opts) {
  return new _attribute["default"](opts);
};

exports.attribute = attribute;

var className = function className(opts) {
  return new _className["default"](opts);
};

exports.className = className;

var combinator = function combinator(opts) {
  return new _combinator["default"](opts);
};

exports.combinator = combinator;

var comment = function comment(opts) {
  return new _comment["default"](opts);
};

exports.comment = comment;

var id = function id(opts) {
  return new _id["default"](opts);
};

exports.id = id;

var nesting = function nesting(opts) {
  return new _nesting["default"](opts);
};

exports.nesting = nesting;

var pseudo = function pseudo(opts) {
  return new _pseudo["default"](opts);
};

exports.pseudo = pseudo;

var root = function root(opts) {
  return new _root["default"](opts);
};

exports.root = root;

var selector = function selector(opts) {
  return new _selector["default"](opts);
};

exports.selector = selector;

var string = function string(opts) {
  return new _string["default"](opts);
};

exports.string = string;

var tag = function tag(opts) {
  return new _tag["default"](opts);
};

exports.tag = tag;

var universal = function universal(opts) {
  return new _universal["default"](opts);
};

exports.universal = universal;
},{"./attribute":696,"./className":697,"./combinator":698,"./comment":699,"./id":703,"./nesting":706,"./pseudo":708,"./root":709,"./selector":710,"./string":711,"./tag":712,"./universal":714}],701:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var types = _interopRequireWildcard(require("./types"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } it = o[Symbol.iterator](); return it.next.bind(it); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Container = /*#__PURE__*/function (_Node) {
  _inheritsLoose(Container, _Node);

  function Container(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;

    if (!_this.nodes) {
      _this.nodes = [];
    }

    return _this;
  }

  var _proto = Container.prototype;

  _proto.append = function append(selector) {
    selector.parent = this;
    this.nodes.push(selector);
    return this;
  };

  _proto.prepend = function prepend(selector) {
    selector.parent = this;
    this.nodes.unshift(selector);
    return this;
  };

  _proto.at = function at(index) {
    return this.nodes[index];
  };

  _proto.index = function index(child) {
    if (typeof child === 'number') {
      return child;
    }

    return this.nodes.indexOf(child);
  };

  _proto.removeChild = function removeChild(child) {
    child = this.index(child);
    this.at(child).parent = undefined;
    this.nodes.splice(child, 1);
    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (index >= child) {
        this.indexes[id] = index - 1;
      }
    }

    return this;
  };

  _proto.removeAll = function removeAll() {
    for (var _iterator = _createForOfIteratorHelperLoose(this.nodes), _step; !(_step = _iterator()).done;) {
      var node = _step.value;
      node.parent = undefined;
    }

    this.nodes = [];
    return this;
  };

  _proto.empty = function empty() {
    return this.removeAll();
  };

  _proto.insertAfter = function insertAfter(oldNode, newNode) {
    newNode.parent = this;
    var oldIndex = this.index(oldNode);
    this.nodes.splice(oldIndex + 1, 0, newNode);
    newNode.parent = this;
    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (oldIndex <= index) {
        this.indexes[id] = index + 1;
      }
    }

    return this;
  };

  _proto.insertBefore = function insertBefore(oldNode, newNode) {
    newNode.parent = this;
    var oldIndex = this.index(oldNode);
    this.nodes.splice(oldIndex, 0, newNode);
    newNode.parent = this;
    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (index <= oldIndex) {
        this.indexes[id] = index + 1;
      }
    }

    return this;
  };

  _proto._findChildAtPosition = function _findChildAtPosition(line, col) {
    var found = undefined;
    this.each(function (node) {
      if (node.atPosition) {
        var foundChild = node.atPosition(line, col);

        if (foundChild) {
          found = foundChild;
          return false;
        }
      } else if (node.isAtPosition(line, col)) {
        found = node;
        return false;
      }
    });
    return found;
  }
  /**
   * Return the most specific node at the line and column number given.
   * The source location is based on the original parsed location, locations aren't
   * updated as selector nodes are mutated.
   * 
   * Note that this location is relative to the location of the first character
   * of the selector, and not the location of the selector in the overall document
   * when used in conjunction with postcss.
   *
   * If not found, returns undefined.
   * @param {number} line The line number of the node to find. (1-based index)
   * @param {number} col  The column number of the node to find. (1-based index)
   */
  ;

  _proto.atPosition = function atPosition(line, col) {
    if (this.isAtPosition(line, col)) {
      return this._findChildAtPosition(line, col) || this;
    } else {
      return undefined;
    }
  };

  _proto._inferEndPosition = function _inferEndPosition() {
    if (this.last && this.last.source && this.last.source.end) {
      this.source = this.source || {};
      this.source.end = this.source.end || {};
      Object.assign(this.source.end, this.last.source.end);
    }
  };

  _proto.each = function each(callback) {
    if (!this.lastEach) {
      this.lastEach = 0;
    }

    if (!this.indexes) {
      this.indexes = {};
    }

    this.lastEach++;
    var id = this.lastEach;
    this.indexes[id] = 0;

    if (!this.length) {
      return undefined;
    }

    var index, result;

    while (this.indexes[id] < this.length) {
      index = this.indexes[id];
      result = callback(this.at(index), index);

      if (result === false) {
        break;
      }

      this.indexes[id] += 1;
    }

    delete this.indexes[id];

    if (result === false) {
      return false;
    }
  };

  _proto.walk = function walk(callback) {
    return this.each(function (node, i) {
      var result = callback(node, i);

      if (result !== false && node.length) {
        result = node.walk(callback);
      }

      if (result === false) {
        return false;
      }
    });
  };

  _proto.walkAttributes = function walkAttributes(callback) {
    var _this2 = this;

    return this.walk(function (selector) {
      if (selector.type === types.ATTRIBUTE) {
        return callback.call(_this2, selector);
      }
    });
  };

  _proto.walkClasses = function walkClasses(callback) {
    var _this3 = this;

    return this.walk(function (selector) {
      if (selector.type === types.CLASS) {
        return callback.call(_this3, selector);
      }
    });
  };

  _proto.walkCombinators = function walkCombinators(callback) {
    var _this4 = this;

    return this.walk(function (selector) {
      if (selector.type === types.COMBINATOR) {
        return callback.call(_this4, selector);
      }
    });
  };

  _proto.walkComments = function walkComments(callback) {
    var _this5 = this;

    return this.walk(function (selector) {
      if (selector.type === types.COMMENT) {
        return callback.call(_this5, selector);
      }
    });
  };

  _proto.walkIds = function walkIds(callback) {
    var _this6 = this;

    return this.walk(function (selector) {
      if (selector.type === types.ID) {
        return callback.call(_this6, selector);
      }
    });
  };

  _proto.walkNesting = function walkNesting(callback) {
    var _this7 = this;

    return this.walk(function (selector) {
      if (selector.type === types.NESTING) {
        return callback.call(_this7, selector);
      }
    });
  };

  _proto.walkPseudos = function walkPseudos(callback) {
    var _this8 = this;

    return this.walk(function (selector) {
      if (selector.type === types.PSEUDO) {
        return callback.call(_this8, selector);
      }
    });
  };

  _proto.walkTags = function walkTags(callback) {
    var _this9 = this;

    return this.walk(function (selector) {
      if (selector.type === types.TAG) {
        return callback.call(_this9, selector);
      }
    });
  };

  _proto.walkUniversals = function walkUniversals(callback) {
    var _this10 = this;

    return this.walk(function (selector) {
      if (selector.type === types.UNIVERSAL) {
        return callback.call(_this10, selector);
      }
    });
  };

  _proto.split = function split(callback) {
    var _this11 = this;

    var current = [];
    return this.reduce(function (memo, node, index) {
      var split = callback.call(_this11, node);
      current.push(node);

      if (split) {
        memo.push(current);
        current = [];
      } else if (index === _this11.length - 1) {
        memo.push(current);
      }

      return memo;
    }, []);
  };

  _proto.map = function map(callback) {
    return this.nodes.map(callback);
  };

  _proto.reduce = function reduce(callback, memo) {
    return this.nodes.reduce(callback, memo);
  };

  _proto.every = function every(callback) {
    return this.nodes.every(callback);
  };

  _proto.some = function some(callback) {
    return this.nodes.some(callback);
  };

  _proto.filter = function filter(callback) {
    return this.nodes.filter(callback);
  };

  _proto.sort = function sort(callback) {
    return this.nodes.sort(callback);
  };

  _proto.toString = function toString() {
    return this.map(String).join('');
  };

  _createClass(Container, [{
    key: "first",
    get: function get() {
      return this.at(0);
    }
  }, {
    key: "last",
    get: function get() {
      return this.at(this.length - 1);
    }
  }, {
    key: "length",
    get: function get() {
      return this.nodes.length;
    }
  }]);

  return Container;
}(_node["default"]);

exports["default"] = Container;
module.exports = exports.default;
},{"./node":707,"./types":713}],702:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.isNode = isNode;
exports.isPseudoElement = isPseudoElement;
exports.isPseudoClass = isPseudoClass;
exports.isContainer = isContainer;
exports.isNamespace = isNamespace;
exports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = void 0;

var _types = require("./types");

var _IS_TYPE;

var IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);

function isNode(node) {
  return typeof node === "object" && IS_TYPE[node.type];
}

function isNodeType(type, node) {
  return isNode(node) && node.type === type;
}

var isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);
exports.isAttribute = isAttribute;
var isClassName = isNodeType.bind(null, _types.CLASS);
exports.isClassName = isClassName;
var isCombinator = isNodeType.bind(null, _types.COMBINATOR);
exports.isCombinator = isCombinator;
var isComment = isNodeType.bind(null, _types.COMMENT);
exports.isComment = isComment;
var isIdentifier = isNodeType.bind(null, _types.ID);
exports.isIdentifier = isIdentifier;
var isNesting = isNodeType.bind(null, _types.NESTING);
exports.isNesting = isNesting;
var isPseudo = isNodeType.bind(null, _types.PSEUDO);
exports.isPseudo = isPseudo;
var isRoot = isNodeType.bind(null, _types.ROOT);
exports.isRoot = isRoot;
var isSelector = isNodeType.bind(null, _types.SELECTOR);
exports.isSelector = isSelector;
var isString = isNodeType.bind(null, _types.STRING);
exports.isString = isString;
var isTag = isNodeType.bind(null, _types.TAG);
exports.isTag = isTag;
var isUniversal = isNodeType.bind(null, _types.UNIVERSAL);
exports.isUniversal = isUniversal;

function isPseudoElement(node) {
  return isPseudo(node) && node.value && (node.value.startsWith("::") || node.value.toLowerCase() === ":before" || node.value.toLowerCase() === ":after");
}

function isPseudoClass(node) {
  return isPseudo(node) && !isPseudoElement(node);
}

function isContainer(node) {
  return !!(isNode(node) && node.walk);
}

function isNamespace(node) {
  return isAttribute(node) || isTag(node);
}
},{"./types":713}],703:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var ID = /*#__PURE__*/function (_Node) {
  _inheritsLoose(ID, _Node);

  function ID(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.ID;
    return _this;
  }

  var _proto = ID.prototype;

  _proto.valueToString = function valueToString() {
    return '#' + _Node.prototype.valueToString.call(this);
  };

  return ID;
}(_node["default"]);

exports["default"] = ID;
module.exports = exports.default;
},{"./node":707,"./types":713}],704:[function(require,module,exports){
"use strict";

exports.__esModule = true;

var _types = require("./types");

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _types[key]) return;
  exports[key] = _types[key];
});

var _constructors = require("./constructors");

Object.keys(_constructors).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _constructors[key]) return;
  exports[key] = _constructors[key];
});

var _guards = require("./guards");

Object.keys(_guards).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (key in exports && exports[key] === _guards[key]) return;
  exports[key] = _guards[key];
});
},{"./constructors":700,"./guards":702,"./types":713}],705:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _cssesc = _interopRequireDefault(require("cssesc"));

var _util = require("../util");

var _node = _interopRequireDefault(require("./node"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Namespace = /*#__PURE__*/function (_Node) {
  _inheritsLoose(Namespace, _Node);

  function Namespace() {
    return _Node.apply(this, arguments) || this;
  }

  var _proto = Namespace.prototype;

  _proto.qualifiedName = function qualifiedName(value) {
    if (this.namespace) {
      return this.namespaceString + "|" + value;
    } else {
      return value;
    }
  };

  _proto.valueToString = function valueToString() {
    return this.qualifiedName(_Node.prototype.valueToString.call(this));
  };

  _createClass(Namespace, [{
    key: "namespace",
    get: function get() {
      return this._namespace;
    },
    set: function set(namespace) {
      if (namespace === true || namespace === "*" || namespace === "&") {
        this._namespace = namespace;

        if (this.raws) {
          delete this.raws.namespace;
        }

        return;
      }

      var escaped = (0, _cssesc["default"])(namespace, {
        isIdentifier: true
      });
      this._namespace = namespace;

      if (escaped !== namespace) {
        (0, _util.ensureObject)(this, "raws");
        this.raws.namespace = escaped;
      } else if (this.raws) {
        delete this.raws.namespace;
      }
    }
  }, {
    key: "ns",
    get: function get() {
      return this._namespace;
    },
    set: function set(namespace) {
      this.namespace = namespace;
    }
  }, {
    key: "namespaceString",
    get: function get() {
      if (this.namespace) {
        var ns = this.stringifyProperty("namespace");

        if (ns === true) {
          return '';
        } else {
          return ns;
        }
      } else {
        return '';
      }
    }
  }]);

  return Namespace;
}(_node["default"]);

exports["default"] = Namespace;
;
module.exports = exports.default;
},{"../util":720,"./node":707,"cssesc":654}],706:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Nesting = /*#__PURE__*/function (_Node) {
  _inheritsLoose(Nesting, _Node);

  function Nesting(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.NESTING;
    _this.value = '&';
    return _this;
  }

  return Nesting;
}(_node["default"]);

exports["default"] = Nesting;
module.exports = exports.default;
},{"./node":707,"./types":713}],707:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _util = require("../util");

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var cloneNode = function cloneNode(obj, parent) {
  if (typeof obj !== 'object' || obj === null) {
    return obj;
  }

  var cloned = new obj.constructor();

  for (var i in obj) {
    if (!obj.hasOwnProperty(i)) {
      continue;
    }

    var value = obj[i];
    var type = typeof value;

    if (i === 'parent' && type === 'object') {
      if (parent) {
        cloned[i] = parent;
      }
    } else if (value instanceof Array) {
      cloned[i] = value.map(function (j) {
        return cloneNode(j, cloned);
      });
    } else {
      cloned[i] = cloneNode(value, cloned);
    }
  }

  return cloned;
};

var Node = /*#__PURE__*/function () {
  function Node(opts) {
    if (opts === void 0) {
      opts = {};
    }

    Object.assign(this, opts);
    this.spaces = this.spaces || {};
    this.spaces.before = this.spaces.before || '';
    this.spaces.after = this.spaces.after || '';
  }

  var _proto = Node.prototype;

  _proto.remove = function remove() {
    if (this.parent) {
      this.parent.removeChild(this);
    }

    this.parent = undefined;
    return this;
  };

  _proto.replaceWith = function replaceWith() {
    if (this.parent) {
      for (var index in arguments) {
        this.parent.insertBefore(this, arguments[index]);
      }

      this.remove();
    }

    return this;
  };

  _proto.next = function next() {
    return this.parent.at(this.parent.index(this) + 1);
  };

  _proto.prev = function prev() {
    return this.parent.at(this.parent.index(this) - 1);
  };

  _proto.clone = function clone(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = cloneNode(this);

    for (var name in overrides) {
      cloned[name] = overrides[name];
    }

    return cloned;
  }
  /**
   * Some non-standard syntax doesn't follow normal escaping rules for css.
   * This allows non standard syntax to be appended to an existing property
   * by specifying the escaped value. By specifying the escaped value,
   * illegal characters are allowed to be directly inserted into css output.
   * @param {string} name the property to set
   * @param {any} value the unescaped value of the property
   * @param {string} valueEscaped optional. the escaped value of the property.
   */
  ;

  _proto.appendToPropertyAndEscape = function appendToPropertyAndEscape(name, value, valueEscaped) {
    if (!this.raws) {
      this.raws = {};
    }

    var originalValue = this[name];
    var originalEscaped = this.raws[name];
    this[name] = originalValue + value; // this may trigger a setter that updates raws, so it has to be set first.

    if (originalEscaped || valueEscaped !== value) {
      this.raws[name] = (originalEscaped || originalValue) + valueEscaped;
    } else {
      delete this.raws[name]; // delete any escaped value that was created by the setter.
    }
  }
  /**
   * Some non-standard syntax doesn't follow normal escaping rules for css.
   * This allows the escaped value to be specified directly, allowing illegal
   * characters to be directly inserted into css output.
   * @param {string} name the property to set
   * @param {any} value the unescaped value of the property
   * @param {string} valueEscaped the escaped value of the property.
   */
  ;

  _proto.setPropertyAndEscape = function setPropertyAndEscape(name, value, valueEscaped) {
    if (!this.raws) {
      this.raws = {};
    }

    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.

    this.raws[name] = valueEscaped;
  }
  /**
   * When you want a value to passed through to CSS directly. This method
   * deletes the corresponding raw value causing the stringifier to fallback
   * to the unescaped value.
   * @param {string} name the property to set.
   * @param {any} value The value that is both escaped and unescaped.
   */
  ;

  _proto.setPropertyWithoutEscape = function setPropertyWithoutEscape(name, value) {
    this[name] = value; // this may trigger a setter that updates raws, so it has to be set first.

    if (this.raws) {
      delete this.raws[name];
    }
  }
  /**
   *
   * @param {number} line The number (starting with 1)
   * @param {number} column The column number (starting with 1)
   */
  ;

  _proto.isAtPosition = function isAtPosition(line, column) {
    if (this.source && this.source.start && this.source.end) {
      if (this.source.start.line > line) {
        return false;
      }

      if (this.source.end.line < line) {
        return false;
      }

      if (this.source.start.line === line && this.source.start.column > column) {
        return false;
      }

      if (this.source.end.line === line && this.source.end.column < column) {
        return false;
      }

      return true;
    }

    return undefined;
  };

  _proto.stringifyProperty = function stringifyProperty(name) {
    return this.raws && this.raws[name] || this[name];
  };

  _proto.valueToString = function valueToString() {
    return String(this.stringifyProperty("value"));
  };

  _proto.toString = function toString() {
    return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join('');
  };

  _createClass(Node, [{
    key: "rawSpaceBefore",
    get: function get() {
      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.before;

      if (rawSpace === undefined) {
        rawSpace = this.spaces && this.spaces.before;
      }

      return rawSpace || "";
    },
    set: function set(raw) {
      (0, _util.ensureObject)(this, "raws", "spaces");
      this.raws.spaces.before = raw;
    }
  }, {
    key: "rawSpaceAfter",
    get: function get() {
      var rawSpace = this.raws && this.raws.spaces && this.raws.spaces.after;

      if (rawSpace === undefined) {
        rawSpace = this.spaces.after;
      }

      return rawSpace || "";
    },
    set: function set(raw) {
      (0, _util.ensureObject)(this, "raws", "spaces");
      this.raws.spaces.after = raw;
    }
  }]);

  return Node;
}();

exports["default"] = Node;
module.exports = exports.default;
},{"../util":720}],708:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _container = _interopRequireDefault(require("./container"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Pseudo = /*#__PURE__*/function (_Container) {
  _inheritsLoose(Pseudo, _Container);

  function Pseudo(opts) {
    var _this;

    _this = _Container.call(this, opts) || this;
    _this.type = _types.PSEUDO;
    return _this;
  }

  var _proto = Pseudo.prototype;

  _proto.toString = function toString() {
    var params = this.length ? '(' + this.map(String).join(',') + ')' : '';
    return [this.rawSpaceBefore, this.stringifyProperty("value"), params, this.rawSpaceAfter].join('');
  };

  return Pseudo;
}(_container["default"]);

exports["default"] = Pseudo;
module.exports = exports.default;
},{"./container":701,"./types":713}],709:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _container = _interopRequireDefault(require("./container"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Root = /*#__PURE__*/function (_Container) {
  _inheritsLoose(Root, _Container);

  function Root(opts) {
    var _this;

    _this = _Container.call(this, opts) || this;
    _this.type = _types.ROOT;
    return _this;
  }

  var _proto = Root.prototype;

  _proto.toString = function toString() {
    var str = this.reduce(function (memo, selector) {
      memo.push(String(selector));
      return memo;
    }, []).join(',');
    return this.trailingComma ? str + ',' : str;
  };

  _proto.error = function error(message, options) {
    if (this._error) {
      return this._error(message, options);
    } else {
      return new Error(message);
    }
  };

  _createClass(Root, [{
    key: "errorGenerator",
    set: function set(handler) {
      this._error = handler;
    }
  }]);

  return Root;
}(_container["default"]);

exports["default"] = Root;
module.exports = exports.default;
},{"./container":701,"./types":713}],710:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _container = _interopRequireDefault(require("./container"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Selector = /*#__PURE__*/function (_Container) {
  _inheritsLoose(Selector, _Container);

  function Selector(opts) {
    var _this;

    _this = _Container.call(this, opts) || this;
    _this.type = _types.SELECTOR;
    return _this;
  }

  return Selector;
}(_container["default"]);

exports["default"] = Selector;
module.exports = exports.default;
},{"./container":701,"./types":713}],711:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _node = _interopRequireDefault(require("./node"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var String = /*#__PURE__*/function (_Node) {
  _inheritsLoose(String, _Node);

  function String(opts) {
    var _this;

    _this = _Node.call(this, opts) || this;
    _this.type = _types.STRING;
    return _this;
  }

  return String;
}(_node["default"]);

exports["default"] = String;
module.exports = exports.default;
},{"./node":707,"./types":713}],712:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _namespace = _interopRequireDefault(require("./namespace"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Tag = /*#__PURE__*/function (_Namespace) {
  _inheritsLoose(Tag, _Namespace);

  function Tag(opts) {
    var _this;

    _this = _Namespace.call(this, opts) || this;
    _this.type = _types.TAG;
    return _this;
  }

  return Tag;
}(_namespace["default"]);

exports["default"] = Tag;
module.exports = exports.default;
},{"./namespace":705,"./types":713}],713:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.UNIVERSAL = exports.ATTRIBUTE = exports.CLASS = exports.COMBINATOR = exports.COMMENT = exports.ID = exports.NESTING = exports.PSEUDO = exports.ROOT = exports.SELECTOR = exports.STRING = exports.TAG = void 0;
var TAG = 'tag';
exports.TAG = TAG;
var STRING = 'string';
exports.STRING = STRING;
var SELECTOR = 'selector';
exports.SELECTOR = SELECTOR;
var ROOT = 'root';
exports.ROOT = ROOT;
var PSEUDO = 'pseudo';
exports.PSEUDO = PSEUDO;
var NESTING = 'nesting';
exports.NESTING = NESTING;
var ID = 'id';
exports.ID = ID;
var COMMENT = 'comment';
exports.COMMENT = COMMENT;
var COMBINATOR = 'combinator';
exports.COMBINATOR = COMBINATOR;
var CLASS = 'class';
exports.CLASS = CLASS;
var ATTRIBUTE = 'attribute';
exports.ATTRIBUTE = ATTRIBUTE;
var UNIVERSAL = 'universal';
exports.UNIVERSAL = UNIVERSAL;
},{}],714:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _namespace = _interopRequireDefault(require("./namespace"));

var _types = require("./types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Universal = /*#__PURE__*/function (_Namespace) {
  _inheritsLoose(Universal, _Namespace);

  function Universal(opts) {
    var _this;

    _this = _Namespace.call(this, opts) || this;
    _this.type = _types.UNIVERSAL;
    _this.value = '*';
    return _this;
  }

  return Universal;
}(_namespace["default"]);

exports["default"] = Universal;
module.exports = exports.default;
},{"./namespace":705,"./types":713}],715:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = sortAscending;

function sortAscending(list) {
  return list.sort(function (a, b) {
    return a - b;
  });
}

;
module.exports = exports.default;
},{}],716:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.combinator = exports.word = exports.comment = exports.str = exports.tab = exports.newline = exports.feed = exports.cr = exports.backslash = exports.bang = exports.slash = exports.doubleQuote = exports.singleQuote = exports.space = exports.greaterThan = exports.pipe = exports.equals = exports.plus = exports.caret = exports.tilde = exports.dollar = exports.closeSquare = exports.openSquare = exports.closeParenthesis = exports.openParenthesis = exports.semicolon = exports.colon = exports.comma = exports.at = exports.asterisk = exports.ampersand = void 0;
var ampersand = 38; // `&`.charCodeAt(0);

exports.ampersand = ampersand;
var asterisk = 42; // `*`.charCodeAt(0);

exports.asterisk = asterisk;
var at = 64; // `@`.charCodeAt(0);

exports.at = at;
var comma = 44; // `,`.charCodeAt(0);

exports.comma = comma;
var colon = 58; // `:`.charCodeAt(0);

exports.colon = colon;
var semicolon = 59; // `;`.charCodeAt(0);

exports.semicolon = semicolon;
var openParenthesis = 40; // `(`.charCodeAt(0);

exports.openParenthesis = openParenthesis;
var closeParenthesis = 41; // `)`.charCodeAt(0);

exports.closeParenthesis = closeParenthesis;
var openSquare = 91; // `[`.charCodeAt(0);

exports.openSquare = openSquare;
var closeSquare = 93; // `]`.charCodeAt(0);

exports.closeSquare = closeSquare;
var dollar = 36; // `$`.charCodeAt(0);

exports.dollar = dollar;
var tilde = 126; // `~`.charCodeAt(0);

exports.tilde = tilde;
var caret = 94; // `^`.charCodeAt(0);

exports.caret = caret;
var plus = 43; // `+`.charCodeAt(0);

exports.plus = plus;
var equals = 61; // `=`.charCodeAt(0);

exports.equals = equals;
var pipe = 124; // `|`.charCodeAt(0);

exports.pipe = pipe;
var greaterThan = 62; // `>`.charCodeAt(0);

exports.greaterThan = greaterThan;
var space = 32; // ` `.charCodeAt(0);

exports.space = space;
var singleQuote = 39; // `'`.charCodeAt(0);

exports.singleQuote = singleQuote;
var doubleQuote = 34; // `"`.charCodeAt(0);

exports.doubleQuote = doubleQuote;
var slash = 47; // `/`.charCodeAt(0);

exports.slash = slash;
var bang = 33; // `!`.charCodeAt(0);

exports.bang = bang;
var backslash = 92; // '\\'.charCodeAt(0);

exports.backslash = backslash;
var cr = 13; // '\r'.charCodeAt(0);

exports.cr = cr;
var feed = 12; // '\f'.charCodeAt(0);

exports.feed = feed;
var newline = 10; // '\n'.charCodeAt(0);

exports.newline = newline;
var tab = 9; // '\t'.charCodeAt(0);
// Expose aliases primarily for readability.

exports.tab = tab;
var str = singleQuote; // No good single character representation!

exports.str = str;
var comment = -1;
exports.comment = comment;
var word = -2;
exports.word = word;
var combinator = -3;
exports.combinator = combinator;
},{}],717:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = tokenize;
exports.FIELDS = void 0;

var t = _interopRequireWildcard(require("./tokenTypes"));

var _unescapable, _wordDelimiters;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var unescapable = (_unescapable = {}, _unescapable[t.tab] = true, _unescapable[t.newline] = true, _unescapable[t.cr] = true, _unescapable[t.feed] = true, _unescapable);
var wordDelimiters = (_wordDelimiters = {}, _wordDelimiters[t.space] = true, _wordDelimiters[t.tab] = true, _wordDelimiters[t.newline] = true, _wordDelimiters[t.cr] = true, _wordDelimiters[t.feed] = true, _wordDelimiters[t.ampersand] = true, _wordDelimiters[t.asterisk] = true, _wordDelimiters[t.bang] = true, _wordDelimiters[t.comma] = true, _wordDelimiters[t.colon] = true, _wordDelimiters[t.semicolon] = true, _wordDelimiters[t.openParenthesis] = true, _wordDelimiters[t.closeParenthesis] = true, _wordDelimiters[t.openSquare] = true, _wordDelimiters[t.closeSquare] = true, _wordDelimiters[t.singleQuote] = true, _wordDelimiters[t.doubleQuote] = true, _wordDelimiters[t.plus] = true, _wordDelimiters[t.pipe] = true, _wordDelimiters[t.tilde] = true, _wordDelimiters[t.greaterThan] = true, _wordDelimiters[t.equals] = true, _wordDelimiters[t.dollar] = true, _wordDelimiters[t.caret] = true, _wordDelimiters[t.slash] = true, _wordDelimiters);
var hex = {};
var hexChars = "0123456789abcdefABCDEF";

for (var i = 0; i < hexChars.length; i++) {
  hex[hexChars.charCodeAt(i)] = true;
}
/**
 *  Returns the last index of the bar css word
 * @param {string} css The string in which the word begins
 * @param {number} start The index into the string where word's first letter occurs
 */


function consumeWord(css, start) {
  var next = start;
  var code;

  do {
    code = css.charCodeAt(next);

    if (wordDelimiters[code]) {
      return next - 1;
    } else if (code === t.backslash) {
      next = consumeEscape(css, next) + 1;
    } else {
      // All other characters are part of the word
      next++;
    }
  } while (next < css.length);

  return next - 1;
}
/**
 *  Returns the last index of the escape sequence
 * @param {string} css The string in which the sequence begins
 * @param {number} start The index into the string where escape character (`\`) occurs.
 */


function consumeEscape(css, start) {
  var next = start;
  var code = css.charCodeAt(next + 1);

  if (unescapable[code]) {// just consume the escape char
  } else if (hex[code]) {
    var hexDigits = 0; // consume up to 6 hex chars

    do {
      next++;
      hexDigits++;
      code = css.charCodeAt(next + 1);
    } while (hex[code] && hexDigits < 6); // if fewer than 6 hex chars, a trailing space ends the escape


    if (hexDigits < 6 && code === t.space) {
      next++;
    }
  } else {
    // the next char is part of the current word
    next++;
  }

  return next;
}

var FIELDS = {
  TYPE: 0,
  START_LINE: 1,
  START_COL: 2,
  END_LINE: 3,
  END_COL: 4,
  START_POS: 5,
  END_POS: 6
};
exports.FIELDS = FIELDS;

function tokenize(input) {
  var tokens = [];
  var css = input.css.valueOf();
  var _css = css,
      length = _css.length;
  var offset = -1;
  var line = 1;
  var start = 0;
  var end = 0;
  var code, content, endColumn, endLine, escaped, escapePos, last, lines, next, nextLine, nextOffset, quote, tokenType;

  function unclosed(what, fix) {
    if (input.safe) {
      // fyi: this is never set to true.
      css += fix;
      next = css.length - 1;
    } else {
      throw input.error('Unclosed ' + what, line, start - offset, start);
    }
  }

  while (start < length) {
    code = css.charCodeAt(start);

    if (code === t.newline) {
      offset = start;
      line += 1;
    }

    switch (code) {
      case t.space:
      case t.tab:
      case t.newline:
      case t.cr:
      case t.feed:
        next = start;

        do {
          next += 1;
          code = css.charCodeAt(next);

          if (code === t.newline) {
            offset = next;
            line += 1;
          }
        } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);

        tokenType = t.space;
        endLine = line;
        endColumn = next - offset - 1;
        end = next;
        break;

      case t.plus:
      case t.greaterThan:
      case t.tilde:
      case t.pipe:
        next = start;

        do {
          next += 1;
          code = css.charCodeAt(next);
        } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);

        tokenType = t.combinator;
        endLine = line;
        endColumn = start - offset;
        end = next;
        break;
      // Consume these characters as single tokens.

      case t.asterisk:
      case t.ampersand:
      case t.bang:
      case t.comma:
      case t.equals:
      case t.dollar:
      case t.caret:
      case t.openSquare:
      case t.closeSquare:
      case t.colon:
      case t.semicolon:
      case t.openParenthesis:
      case t.closeParenthesis:
        next = start;
        tokenType = code;
        endLine = line;
        endColumn = start - offset;
        end = next + 1;
        break;

      case t.singleQuote:
      case t.doubleQuote:
        quote = code === t.singleQuote ? "'" : '"';
        next = start;

        do {
          escaped = false;
          next = css.indexOf(quote, next + 1);

          if (next === -1) {
            unclosed('quote', quote);
          }

          escapePos = next;

          while (css.charCodeAt(escapePos - 1) === t.backslash) {
            escapePos -= 1;
            escaped = !escaped;
          }
        } while (escaped);

        tokenType = t.str;
        endLine = line;
        endColumn = start - offset;
        end = next + 1;
        break;

      default:
        if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {
          next = css.indexOf('*/', start + 2) + 1;

          if (next === 0) {
            unclosed('comment', '*/');
          }

          content = css.slice(start, next + 1);
          lines = content.split('\n');
          last = lines.length - 1;

          if (last > 0) {
            nextLine = line + last;
            nextOffset = next - lines[last].length;
          } else {
            nextLine = line;
            nextOffset = offset;
          }

          tokenType = t.comment;
          line = nextLine;
          endLine = nextLine;
          endColumn = next - nextOffset;
        } else if (code === t.slash) {
          next = start;
          tokenType = code;
          endLine = line;
          endColumn = start - offset;
          end = next + 1;
        } else {
          next = consumeWord(css, start);
          tokenType = t.word;
          endLine = line;
          endColumn = next - offset;
        }

        end = next + 1;
        break;
    } // Ensure that the token structure remains consistent


    tokens.push([tokenType, // [0] Token type
    line, // [1] Starting line
    start - offset, // [2] Starting column
    endLine, // [3] Ending line
    endColumn, // [4] Ending column
    start, // [5] Start position / Source index
    end // [6] End position
    ]); // Reset offset for the next token

    if (nextOffset) {
      offset = nextOffset;
      nextOffset = null;
    }

    start = end;
  }

  return tokens;
}
},{"./tokenTypes":716}],718:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = ensureObject;

function ensureObject(obj) {
  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    props[_key - 1] = arguments[_key];
  }

  while (props.length > 0) {
    var prop = props.shift();

    if (!obj[prop]) {
      obj[prop] = {};
    }

    obj = obj[prop];
  }
}

module.exports = exports.default;
},{}],719:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = getProp;

function getProp(obj) {
  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    props[_key - 1] = arguments[_key];
  }

  while (props.length > 0) {
    var prop = props.shift();

    if (!obj[prop]) {
      return undefined;
    }

    obj = obj[prop];
  }

  return obj;
}

module.exports = exports.default;
},{}],720:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports.stripComments = exports.ensureObject = exports.getProp = exports.unesc = void 0;

var _unesc = _interopRequireDefault(require("./unesc"));

exports.unesc = _unesc["default"];

var _getProp = _interopRequireDefault(require("./getProp"));

exports.getProp = _getProp["default"];

var _ensureObject = _interopRequireDefault(require("./ensureObject"));

exports.ensureObject = _ensureObject["default"];

var _stripComments = _interopRequireDefault(require("./stripComments"));

exports.stripComments = _stripComments["default"];

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
},{"./ensureObject":718,"./getProp":719,"./stripComments":721,"./unesc":722}],721:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = stripComments;

function stripComments(str) {
  var s = "";
  var commentStart = str.indexOf("/*");
  var lastEnd = 0;

  while (commentStart >= 0) {
    s = s + str.slice(lastEnd, commentStart);
    var commentEnd = str.indexOf("*/", commentStart + 2);

    if (commentEnd < 0) {
      return s;
    }

    lastEnd = commentEnd + 2;
    commentStart = str.indexOf("/*", lastEnd);
  }

  s = s + str.slice(lastEnd);
  return s;
}

module.exports = exports.default;
},{}],722:[function(require,module,exports){
"use strict";

exports.__esModule = true;
exports["default"] = unesc;

// Many thanks for this post which made this migration much easier.
// https://mathiasbynens.be/notes/css-escapes

/**
 * 
 * @param {string} str 
 * @returns {[string, number]|undefined}
 */
function gobbleHex(str) {
  var lower = str.toLowerCase();
  var hex = '';
  var spaceTerminated = false;

  for (var i = 0; i < 6 && lower[i] !== undefined; i++) {
    var code = lower.charCodeAt(i); // check to see if we are dealing with a valid hex char [a-f|0-9]

    var valid = code >= 97 && code <= 102 || code >= 48 && code <= 57; // https://drafts.csswg.org/css-syntax/#consume-escaped-code-point

    spaceTerminated = code === 32;

    if (!valid) {
      break;
    }

    hex += lower[i];
  }

  if (hex.length === 0) {
    return undefined;
  }

  var codePoint = parseInt(hex, 16);
  var isSurrogate = codePoint >= 0xD800 && codePoint <= 0xDFFF; // Add special case for
  // "If this number is zero, or is for a surrogate, or is greater than the maximum allowed code point"
  // https://drafts.csswg.org/css-syntax/#maximum-allowed-code-point

  if (isSurrogate || codePoint === 0x0000 || codePoint > 0x10FFFF) {
    return ["\uFFFD", hex.length + (spaceTerminated ? 1 : 0)];
  }

  return [String.fromCodePoint(codePoint), hex.length + (spaceTerminated ? 1 : 0)];
}

var CONTAINS_ESCAPE = /\\/;

function unesc(str) {
  var needToProcess = CONTAINS_ESCAPE.test(str);

  if (!needToProcess) {
    return str;
  }

  var ret = "";

  for (var i = 0; i < str.length; i++) {
    if (str[i] === "\\") {
      var gobbled = gobbleHex(str.slice(i + 1, i + 7));

      if (gobbled !== undefined) {
        ret += gobbled[0];
        i += gobbled[1];
        continue;
      } // Retain a pair of \\ if double escaped `\\\\`
      // https://github.com/postcss/postcss-selector-parser/commit/268c9a7656fb53f543dc620aa5b73a30ec3ff20e


      if (str[i + 1] === "\\") {
        ret += "\\";
        i++;
        continue;
      } // if \\ is at the end of the string retain it
      // https://github.com/postcss/postcss-selector-parser/commit/01a6b346e3612ce1ab20219acc26abdc259ccefb


      if (str.length === i + 1) {
        ret += str[i];
      }

      continue;
    }

    ret += str[i];
  }

  return ret;
}

module.exports = exports.default;
},{}],723:[function(require,module,exports){
var parse = require("./parse");
var walk = require("./walk");
var stringify = require("./stringify");

function ValueParser(value) {
  if (this instanceof ValueParser) {
    this.nodes = parse(value);
    return this;
  }
  return new ValueParser(value);
}

ValueParser.prototype.toString = function() {
  return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
};

ValueParser.prototype.walk = function(cb, bubble) {
  walk(this.nodes, cb, bubble);
  return this;
};

ValueParser.unit = require("./unit");

ValueParser.walk = walk;

ValueParser.stringify = stringify;

module.exports = ValueParser;

},{"./parse":724,"./stringify":725,"./unit":726,"./walk":727}],724:[function(require,module,exports){
var openParentheses = "(".charCodeAt(0);
var closeParentheses = ")".charCodeAt(0);
var singleQuote = "'".charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = "\\".charCodeAt(0);
var slash = "/".charCodeAt(0);
var comma = ",".charCodeAt(0);
var colon = ":".charCodeAt(0);
var star = "*".charCodeAt(0);
var uLower = "u".charCodeAt(0);
var uUpper = "U".charCodeAt(0);
var plus = "+".charCodeAt(0);
var isUnicodeRange = /^[a-f0-9?-]+$/i;

module.exports = function(input) {
  var tokens = [];
  var value = input;

  var next,
    quote,
    prev,
    token,
    escape,
    escapePos,
    whitespacePos,
    parenthesesOpenPos;
  var pos = 0;
  var code = value.charCodeAt(pos);
  var max = value.length;
  var stack = [{ nodes: tokens }];
  var balanced = 0;
  var parent;

  var name = "";
  var before = "";
  var after = "";

  while (pos < max) {
    // Whitespaces
    if (code <= 32) {
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      token = value.slice(pos, next);

      prev = tokens[tokens.length - 1];
      if (code === closeParentheses && balanced) {
        after = token;
      } else if (prev && prev.type === "div") {
        prev.after = token;
        prev.sourceEndIndex += token.length;
      } else if (
        code === comma ||
        code === colon ||
        (code === slash &&
          value.charCodeAt(next + 1) !== star &&
          (!parent ||
            (parent && parent.type === "function" && parent.value !== "calc")))
      ) {
        before = token;
      } else {
        tokens.push({
          type: "space",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      }

      pos = next;

      // Quotes
    } else if (code === singleQuote || code === doubleQuote) {
      next = pos;
      quote = code === singleQuote ? "'" : '"';
      token = {
        type: "string",
        sourceIndex: pos,
        quote: quote
      };
      do {
        escape = false;
        next = value.indexOf(quote, next + 1);
        if (~next) {
          escapePos = next;
          while (value.charCodeAt(escapePos - 1) === backslash) {
            escapePos -= 1;
            escape = !escape;
          }
        } else {
          value += quote;
          next = value.length - 1;
          token.unclosed = true;
        }
      } while (escape);
      token.value = value.slice(pos + 1, next);
      token.sourceEndIndex = token.unclosed ? next : next + 1;
      tokens.push(token);
      pos = next + 1;
      code = value.charCodeAt(pos);

      // Comments
    } else if (code === slash && value.charCodeAt(pos + 1) === star) {
      next = value.indexOf("*/", pos);

      token = {
        type: "comment",
        sourceIndex: pos,
        sourceEndIndex: next + 2
      };

      if (next === -1) {
        token.unclosed = true;
        next = value.length;
        token.sourceEndIndex = next;
      }

      token.value = value.slice(pos + 2, next);
      tokens.push(token);

      pos = next + 2;
      code = value.charCodeAt(pos);

      // Operation within calc
    } else if (
      (code === slash || code === star) &&
      parent &&
      parent.type === "function" &&
      parent.value === "calc"
    ) {
      token = value[pos];
      tokens.push({
        type: "word",
        sourceIndex: pos - before.length,
        sourceEndIndex: pos + token.length,
        value: token
      });
      pos += 1;
      code = value.charCodeAt(pos);

      // Dividers
    } else if (code === slash || code === comma || code === colon) {
      token = value[pos];

      tokens.push({
        type: "div",
        sourceIndex: pos - before.length,
        sourceEndIndex: pos + token.length,
        value: token,
        before: before,
        after: ""
      });
      before = "";

      pos += 1;
      code = value.charCodeAt(pos);

      // Open parentheses
    } else if (openParentheses === code) {
      // Whitespaces after open parentheses
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      parenthesesOpenPos = pos;
      token = {
        type: "function",
        sourceIndex: pos - name.length,
        value: name,
        before: value.slice(parenthesesOpenPos + 1, next)
      };
      pos = next;

      if (name === "url" && code !== singleQuote && code !== doubleQuote) {
        next -= 1;
        do {
          escape = false;
          next = value.indexOf(")", next + 1);
          if (~next) {
            escapePos = next;
            while (value.charCodeAt(escapePos - 1) === backslash) {
              escapePos -= 1;
              escape = !escape;
            }
          } else {
            value += ")";
            next = value.length - 1;
            token.unclosed = true;
          }
        } while (escape);
        // Whitespaces before closed
        whitespacePos = next;
        do {
          whitespacePos -= 1;
          code = value.charCodeAt(whitespacePos);
        } while (code <= 32);
        if (parenthesesOpenPos < whitespacePos) {
          if (pos !== whitespacePos + 1) {
            token.nodes = [
              {
                type: "word",
                sourceIndex: pos,
                sourceEndIndex: whitespacePos + 1,
                value: value.slice(pos, whitespacePos + 1)
              }
            ];
          } else {
            token.nodes = [];
          }
          if (token.unclosed && whitespacePos + 1 !== next) {
            token.after = "";
            token.nodes.push({
              type: "space",
              sourceIndex: whitespacePos + 1,
              sourceEndIndex: next,
              value: value.slice(whitespacePos + 1, next)
            });
          } else {
            token.after = value.slice(whitespacePos + 1, next);
            token.sourceEndIndex = next;
          }
        } else {
          token.after = "";
          token.nodes = [];
        }
        pos = next + 1;
        token.sourceEndIndex = token.unclosed ? next : pos;
        code = value.charCodeAt(pos);
        tokens.push(token);
      } else {
        balanced += 1;
        token.after = "";
        token.sourceEndIndex = pos + 1;
        tokens.push(token);
        stack.push(token);
        tokens = token.nodes = [];
        parent = token;
      }
      name = "";

      // Close parentheses
    } else if (closeParentheses === code && balanced) {
      pos += 1;
      code = value.charCodeAt(pos);

      parent.after = after;
      parent.sourceEndIndex += after.length;
      after = "";
      balanced -= 1;
      stack[stack.length - 1].sourceEndIndex = pos;
      stack.pop();
      parent = stack[balanced];
      tokens = parent.nodes;

      // Words
    } else {
      next = pos;
      do {
        if (code === backslash) {
          next += 1;
        }
        next += 1;
        code = value.charCodeAt(next);
      } while (
        next < max &&
        !(
          code <= 32 ||
          code === singleQuote ||
          code === doubleQuote ||
          code === comma ||
          code === colon ||
          code === slash ||
          code === openParentheses ||
          (code === star &&
            parent &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === slash &&
            parent.type === "function" &&
            parent.value === "calc") ||
          (code === closeParentheses && balanced)
        )
      );
      token = value.slice(pos, next);

      if (openParentheses === code) {
        name = token;
      } else if (
        (uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) &&
        plus === token.charCodeAt(1) &&
        isUnicodeRange.test(token.slice(2))
      ) {
        tokens.push({
          type: "unicode-range",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      } else {
        tokens.push({
          type: "word",
          sourceIndex: pos,
          sourceEndIndex: next,
          value: token
        });
      }

      pos = next;
    }
  }

  for (pos = stack.length - 1; pos; pos -= 1) {
    stack[pos].unclosed = true;
    stack[pos].sourceEndIndex = value.length;
  }

  return stack[0].nodes;
};

},{}],725:[function(require,module,exports){
function stringifyNode(node, custom) {
  var type = node.type;
  var value = node.value;
  var buf;
  var customResult;

  if (custom && (customResult = custom(node)) !== undefined) {
    return customResult;
  } else if (type === "word" || type === "space") {
    return value;
  } else if (type === "string") {
    buf = node.quote || "";
    return buf + value + (node.unclosed ? "" : buf);
  } else if (type === "comment") {
    return "/*" + value + (node.unclosed ? "" : "*/");
  } else if (type === "div") {
    return (node.before || "") + value + (node.after || "");
  } else if (Array.isArray(node.nodes)) {
    buf = stringify(node.nodes, custom);
    if (type !== "function") {
      return buf;
    }
    return (
      value +
      "(" +
      (node.before || "") +
      buf +
      (node.after || "") +
      (node.unclosed ? "" : ")")
    );
  }
  return value;
}

function stringify(nodes, custom) {
  var result, i;

  if (Array.isArray(nodes)) {
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) {
      result = stringifyNode(nodes[i], custom) + result;
    }
    return result;
  }
  return stringifyNode(nodes, custom);
}

module.exports = stringify;

},{}],726:[function(require,module,exports){
var minus = "-".charCodeAt(0);
var plus = "+".charCodeAt(0);
var dot = ".".charCodeAt(0);
var exp = "e".charCodeAt(0);
var EXP = "E".charCodeAt(0);

// Check if three code points would start a number
// https://www.w3.org/TR/css-syntax-3/#starts-with-a-number
function likeNumber(value) {
  var code = value.charCodeAt(0);
  var nextCode;

  if (code === plus || code === minus) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    var nextNextCode = value.charCodeAt(2);

    if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code === dot) {
    nextCode = value.charCodeAt(1);

    if (nextCode >= 48 && nextCode <= 57) {
      return true;
    }

    return false;
  }

  if (code >= 48 && code <= 57) {
    return true;
  }

  return false;
}

// Consume a number
// https://www.w3.org/TR/css-syntax-3/#consume-number
module.exports = function(value) {
  var pos = 0;
  var length = value.length;
  var code;
  var nextCode;
  var nextNextCode;

  if (length === 0 || !likeNumber(value)) {
    return false;
  }

  code = value.charCodeAt(pos);

  if (code === plus || code === minus) {
    pos++;
  }

  while (pos < length) {
    code = value.charCodeAt(pos);

    if (code < 48 || code > 57) {
      break;
    }

    pos += 1;
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);

  if (code === dot && nextCode >= 48 && nextCode <= 57) {
    pos += 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  code = value.charCodeAt(pos);
  nextCode = value.charCodeAt(pos + 1);
  nextNextCode = value.charCodeAt(pos + 2);

  if (
    (code === exp || code === EXP) &&
    ((nextCode >= 48 && nextCode <= 57) ||
      ((nextCode === plus || nextCode === minus) &&
        nextNextCode >= 48 &&
        nextNextCode <= 57))
  ) {
    pos += nextCode === plus || nextCode === minus ? 3 : 2;

    while (pos < length) {
      code = value.charCodeAt(pos);

      if (code < 48 || code > 57) {
        break;
      }

      pos += 1;
    }
  }

  return {
    number: value.slice(0, pos),
    unit: value.slice(pos)
  };
};

},{}],727:[function(require,module,exports){
module.exports = function walk(nodes, cb, bubble) {
  var i, max, node, result;

  for (i = 0, max = nodes.length; i < max; i += 1) {
    node = nodes[i];
    if (!bubble) {
      result = cb(node, i, nodes);
    }

    if (
      result !== false &&
      node.type === "function" &&
      Array.isArray(node.nodes)
    ) {
      walk(node.nodes, cb, bubble);
    }

    if (bubble) {
      cb(node, i, nodes);
    }
  }
};

},{}],728:[function(require,module,exports){
'use strict'

let Container = require('./container')

class AtRule extends Container {
  constructor(defaults) {
    super(defaults)
    this.type = 'atrule'
  }

  append(...children) {
    if (!this.proxyOf.nodes) this.nodes = []
    return super.append(...children)
  }

  prepend(...children) {
    if (!this.proxyOf.nodes) this.nodes = []
    return super.prepend(...children)
  }
}

module.exports = AtRule
AtRule.default = AtRule

Container.registerAtRule(AtRule)

},{"./container":730}],729:[function(require,module,exports){
'use strict'

let Node = require('./node')

class Comment extends Node {
  constructor(defaults) {
    super(defaults)
    this.type = 'comment'
  }
}

module.exports = Comment
Comment.default = Comment

},{"./node":740}],730:[function(require,module,exports){
'use strict'

let { isClean, my } = require('./symbols')
let Declaration = require('./declaration')
let Comment = require('./comment')
let Node = require('./node')

let parse, Rule, AtRule

function cleanSource(nodes) {
  return nodes.map(i => {
    if (i.nodes) i.nodes = cleanSource(i.nodes)
    delete i.source
    return i
  })
}

function markDirtyUp(node) {
  node[isClean] = false
  if (node.proxyOf.nodes) {
    for (let i of node.proxyOf.nodes) {
      markDirtyUp(i)
    }
  }
}

class Container extends Node {
  push(child) {
    child.parent = this
    this.proxyOf.nodes.push(child)
    return this
  }

  each(callback) {
    if (!this.proxyOf.nodes) return undefined
    let iterator = this.getIterator()

    let index, result
    while (this.indexes[iterator] < this.proxyOf.nodes.length) {
      index = this.indexes[iterator]
      result = callback(this.proxyOf.nodes[index], index)
      if (result === false) break

      this.indexes[iterator] += 1
    }

    delete this.indexes[iterator]
    return result
  }

  walk(callback) {
    return this.each((child, i) => {
      let result
      try {
        result = callback(child, i)
      } catch (e) {
        throw child.addToError(e)
      }
      if (result !== false && child.walk) {
        result = child.walk(callback)
      }

      return result
    })
  }

  walkDecls(prop, callback) {
    if (!callback) {
      callback = prop
      return this.walk((child, i) => {
        if (child.type === 'decl') {
          return callback(child, i)
        }
      })
    }
    if (prop instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'decl' && prop.test(child.prop)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'decl' && child.prop === prop) {
        return callback(child, i)
      }
    })
  }

  walkRules(selector, callback) {
    if (!callback) {
      callback = selector

      return this.walk((child, i) => {
        if (child.type === 'rule') {
          return callback(child, i)
        }
      })
    }
    if (selector instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'rule' && selector.test(child.selector)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'rule' && child.selector === selector) {
        return callback(child, i)
      }
    })
  }

  walkAtRules(name, callback) {
    if (!callback) {
      callback = name
      return this.walk((child, i) => {
        if (child.type === 'atrule') {
          return callback(child, i)
        }
      })
    }
    if (name instanceof RegExp) {
      return this.walk((child, i) => {
        if (child.type === 'atrule' && name.test(child.name)) {
          return callback(child, i)
        }
      })
    }
    return this.walk((child, i) => {
      if (child.type === 'atrule' && child.name === name) {
        return callback(child, i)
      }
    })
  }

  walkComments(callback) {
    return this.walk((child, i) => {
      if (child.type === 'comment') {
        return callback(child, i)
      }
    })
  }

  append(...children) {
    for (let child of children) {
      let nodes = this.normalize(child, this.last)
      for (let node of nodes) this.proxyOf.nodes.push(node)
    }

    this.markDirty()

    return this
  }

  prepend(...children) {
    children = children.reverse()
    for (let child of children) {
      let nodes = this.normalize(child, this.first, 'prepend').reverse()
      for (let node of nodes) this.proxyOf.nodes.unshift(node)
      for (let id in this.indexes) {
        this.indexes[id] = this.indexes[id] + nodes.length
      }
    }

    this.markDirty()

    return this
  }

  cleanRaws(keepBetween) {
    super.cleanRaws(keepBetween)
    if (this.nodes) {
      for (let node of this.nodes) node.cleanRaws(keepBetween)
    }
  }

  insertBefore(exist, add) {
    exist = this.index(exist)

    let type = exist === 0 ? 'prepend' : false
    let nodes = this.normalize(add, this.proxyOf.nodes[exist], type).reverse()
    for (let node of nodes) this.proxyOf.nodes.splice(exist, 0, node)

    let index
    for (let id in this.indexes) {
      index = this.indexes[id]
      if (exist <= index) {
        this.indexes[id] = index + nodes.length
      }
    }

    this.markDirty()

    return this
  }

  insertAfter(exist, add) {
    exist = this.index(exist)

    let nodes = this.normalize(add, this.proxyOf.nodes[exist]).reverse()
    for (let node of nodes) this.proxyOf.nodes.splice(exist + 1, 0, node)

    let index
    for (let id in this.indexes) {
      index = this.indexes[id]
      if (exist < index) {
        this.indexes[id] = index + nodes.length
      }
    }

    this.markDirty()

    return this
  }

  removeChild(child) {
    child = this.index(child)
    this.proxyOf.nodes[child].parent = undefined
    this.proxyOf.nodes.splice(child, 1)

    let index
    for (let id in this.indexes) {
      index = this.indexes[id]
      if (index >= child) {
        this.indexes[id] = index - 1
      }
    }

    this.markDirty()

    return this
  }

  removeAll() {
    for (let node of this.proxyOf.nodes) node.parent = undefined
    this.proxyOf.nodes = []

    this.markDirty()

    return this
  }

  replaceValues(pattern, opts, callback) {
    if (!callback) {
      callback = opts
      opts = {}
    }

    this.walkDecls(decl => {
      if (opts.props && !opts.props.includes(decl.prop)) return
      if (opts.fast && !decl.value.includes(opts.fast)) return

      decl.value = decl.value.replace(pattern, callback)
    })

    this.markDirty()

    return this
  }

  every(condition) {
    return this.nodes.every(condition)
  }

  some(condition) {
    return this.nodes.some(condition)
  }

  index(child) {
    if (typeof child === 'number') return child
    if (child.proxyOf) child = child.proxyOf
    return this.proxyOf.nodes.indexOf(child)
  }

  get first() {
    if (!this.proxyOf.nodes) return undefined
    return this.proxyOf.nodes[0]
  }

  get last() {
    if (!this.proxyOf.nodes) return undefined
    return this.proxyOf.nodes[this.proxyOf.nodes.length - 1]
  }

  normalize(nodes, sample) {
    if (typeof nodes === 'string') {
      nodes = cleanSource(parse(nodes).nodes)
    } else if (Array.isArray(nodes)) {
      nodes = nodes.slice(0)
      for (let i of nodes) {
        if (i.parent) i.parent.removeChild(i, 'ignore')
      }
    } else if (nodes.type === 'root' && this.type !== 'document') {
      nodes = nodes.nodes.slice(0)
      for (let i of nodes) {
        if (i.parent) i.parent.removeChild(i, 'ignore')
      }
    } else if (nodes.type) {
      nodes = [nodes]
    } else if (nodes.prop) {
      if (typeof nodes.value === 'undefined') {
        throw new Error('Value field is missed in node creation')
      } else if (typeof nodes.value !== 'string') {
        nodes.value = String(nodes.value)
      }
      nodes = [new Declaration(nodes)]
    } else if (nodes.selector) {
      nodes = [new Rule(nodes)]
    } else if (nodes.name) {
      nodes = [new AtRule(nodes)]
    } else if (nodes.text) {
      nodes = [new Comment(nodes)]
    } else {
      throw new Error('Unknown node type in node creation')
    }

    let processed = nodes.map(i => {
      /* c8 ignore next */
      if (!i[my]) Container.rebuild(i)
      i = i.proxyOf
      if (i.parent) i.parent.removeChild(i)
      if (i[isClean]) markDirtyUp(i)
      if (typeof i.raws.before === 'undefined') {
        if (sample && typeof sample.raws.before !== 'undefined') {
          i.raws.before = sample.raws.before.replace(/\S/g, '')
        }
      }
      i.parent = this
      return i
    })

    return processed
  }

  getProxyProcessor() {
    return {
      set(node, prop, value) {
        if (node[prop] === value) return true
        node[prop] = value
        if (prop === 'name' || prop === 'params' || prop === 'selector') {
          node.markDirty()
        }
        return true
      },

      get(node, prop) {
        if (prop === 'proxyOf') {
          return node
        } else if (!node[prop]) {
          return node[prop]
        } else if (
          prop === 'each' ||
          (typeof prop === 'string' && prop.startsWith('walk'))
        ) {
          return (...args) => {
            return node[prop](
              ...args.map(i => {
                if (typeof i === 'function') {
                  return (child, index) => i(child.toProxy(), index)
                } else {
                  return i
                }
              })
            )
          }
        } else if (prop === 'every' || prop === 'some') {
          return cb => {
            return node[prop]((child, ...other) =>
              cb(child.toProxy(), ...other)
            )
          }
        } else if (prop === 'root') {
          return () => node.root().toProxy()
        } else if (prop === 'nodes') {
          return node.nodes.map(i => i.toProxy())
        } else if (prop === 'first' || prop === 'last') {
          return node[prop].toProxy()
        } else {
          return node[prop]
        }
      }
    }
  }

  getIterator() {
    if (!this.lastEach) this.lastEach = 0
    if (!this.indexes) this.indexes = {}

    this.lastEach += 1
    let iterator = this.lastEach
    this.indexes[iterator] = 0

    return iterator
  }
}

Container.registerParse = dependant => {
  parse = dependant
}

Container.registerRule = dependant => {
  Rule = dependant
}

Container.registerAtRule = dependant => {
  AtRule = dependant
}

module.exports = Container
Container.default = Container

/* c8 ignore start */
Container.rebuild = node => {
  if (node.type === 'atrule') {
    Object.setPrototypeOf(node, AtRule.prototype)
  } else if (node.type === 'rule') {
    Object.setPrototypeOf(node, Rule.prototype)
  } else if (node.type === 'decl') {
    Object.setPrototypeOf(node, Declaration.prototype)
  } else if (node.type === 'comment') {
    Object.setPrototypeOf(node, Comment.prototype)
  }

  node[my] = true

  if (node.nodes) {
    node.nodes.forEach(child => {
      Container.rebuild(child)
    })
  }
}
/* c8 ignore stop */

},{"./comment":729,"./declaration":732,"./node":740,"./symbols":751}],731:[function(require,module,exports){
'use strict'

let pico = require('picocolors')

let terminalHighlight = require('./terminal-highlight')

class CssSyntaxError extends Error {
  constructor(message, line, column, source, file, plugin) {
    super(message)
    this.name = 'CssSyntaxError'
    this.reason = message

    if (file) {
      this.file = file
    }
    if (source) {
      this.source = source
    }
    if (plugin) {
      this.plugin = plugin
    }
    if (typeof line !== 'undefined' && typeof column !== 'undefined') {
      if (typeof line === 'number') {
        this.line = line
        this.column = column
      } else {
        this.line = line.line
        this.column = line.column
        this.endLine = column.line
        this.endColumn = column.column
      }
    }

    this.setMessage()

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, CssSyntaxError)
    }
  }

  setMessage() {
    this.message = this.plugin ? this.plugin + ': ' : ''
    this.message += this.file ? this.file : '<css input>'
    if (typeof this.line !== 'undefined') {
      this.message += ':' + this.line + ':' + this.column
    }
    this.message += ': ' + this.reason
  }

  showSourceCode(color) {
    if (!this.source) return ''

    let css = this.source
    if (color == null) color = pico.isColorSupported
    if (terminalHighlight) {
      if (color) css = terminalHighlight(css)
    }

    let lines = css.split(/\r?\n/)
    let start = Math.max(this.line - 3, 0)
    let end = Math.min(this.line + 2, lines.length)

    let maxWidth = String(end).length

    let mark, aside
    if (color) {
      let { bold, red, gray } = pico.createColors(true)
      mark = text => bold(red(text))
      aside = text => gray(text)
    } else {
      mark = aside = str => str
    }

    return lines
      .slice(start, end)
      .map((line, index) => {
        let number = start + 1 + index
        let gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | '
        if (number === this.line) {
          let spacing =
            aside(gutter.replace(/\d/g, ' ')) +
            line.slice(0, this.column - 1).replace(/[^\t]/g, ' ')
          return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^')
        }
        return ' ' + aside(gutter) + line
      })
      .join('\n')
  }

  toString() {
    let code = this.showSourceCode()
    if (code) {
      code = '\n\n' + code + '\n'
    }
    return this.name + ': ' + this.message + code
  }
}

module.exports = CssSyntaxError
CssSyntaxError.default = CssSyntaxError

},{"./terminal-highlight":81,"picocolors":663}],732:[function(require,module,exports){
'use strict'

let Node = require('./node')

class Declaration extends Node {
  constructor(defaults) {
    if (
      defaults &&
      typeof defaults.value !== 'undefined' &&
      typeof defaults.value !== 'string'
    ) {
      defaults = { ...defaults, value: String(defaults.value) }
    }
    super(defaults)
    this.type = 'decl'
  }

  get variable() {
    return this.prop.startsWith('--') || this.prop[0] === '$'
  }
}

module.exports = Declaration
Declaration.default = Declaration

},{"./node":740}],733:[function(require,module,exports){
'use strict'

let Container = require('./container')

let LazyResult, Processor

class Document extends Container {
  constructor(defaults) {
    // type needs to be passed to super, otherwise child roots won't be normalized correctly
    super({ type: 'document', ...defaults })

    if (!this.nodes) {
      this.nodes = []
    }
  }

  toResult(opts = {}) {
    let lazy = new LazyResult(new Processor(), this, opts)

    return lazy.stringify()
  }
}

Document.registerLazyResult = dependant => {
  LazyResult = dependant
}

Document.registerProcessor = dependant => {
  Processor = dependant
}

module.exports = Document
Document.default = Document

},{"./container":730}],734:[function(require,module,exports){
'use strict'

let Declaration = require('./declaration')
let PreviousMap = require('./previous-map')
let Comment = require('./comment')
let AtRule = require('./at-rule')
let Input = require('./input')
let Root = require('./root')
let Rule = require('./rule')

function fromJSON(json, inputs) {
  if (Array.isArray(json)) return json.map(n => fromJSON(n))

  let { inputs: ownInputs, ...defaults } = json
  if (ownInputs) {
    inputs = []
    for (let input of ownInputs) {
      let inputHydrated = { ...input, __proto__: Input.prototype }
      if (inputHydrated.map) {
        inputHydrated.map = {
          ...inputHydrated.map,
          __proto__: PreviousMap.prototype
        }
      }
      inputs.push(inputHydrated)
    }
  }
  if (defaults.nodes) {
    defaults.nodes = json.nodes.map(n => fromJSON(n, inputs))
  }
  if (defaults.source) {
    let { inputId, ...source } = defaults.source
    defaults.source = source
    if (inputId != null) {
      defaults.source.input = inputs[inputId]
    }
  }
  if (defaults.type === 'root') {
    return new Root(defaults)
  } else if (defaults.type === 'decl') {
    return new Declaration(defaults)
  } else if (defaults.type === 'rule') {
    return new Rule(defaults)
  } else if (defaults.type === 'comment') {
    return new Comment(defaults)
  } else if (defaults.type === 'atrule') {
    return new AtRule(defaults)
  } else {
    throw new Error('Unknown node type: ' + json.type)
  }
}

module.exports = fromJSON
fromJSON.default = fromJSON

},{"./at-rule":728,"./comment":729,"./declaration":732,"./input":735,"./previous-map":744,"./root":747,"./rule":748}],735:[function(require,module,exports){
'use strict'

let { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')
let { fileURLToPath, pathToFileURL } = require('url')
let { resolve, isAbsolute } = require('path')
let { nanoid } = require('nanoid/non-secure')

let terminalHighlight = require('./terminal-highlight')
let CssSyntaxError = require('./css-syntax-error')
let PreviousMap = require('./previous-map')

let fromOffsetCache = Symbol('fromOffsetCache')

let sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)
let pathAvailable = Boolean(resolve && isAbsolute)

class Input {
  constructor(css, opts = {}) {
    if (
      css === null ||
      typeof css === 'undefined' ||
      (typeof css === 'object' && !css.toString)
    ) {
      throw new Error(`PostCSS received ${css} instead of CSS string`)
    }

    this.css = css.toString()

    if (this.css[0] === '\uFEFF' || this.css[0] === '\uFFFE') {
      this.hasBOM = true
      this.css = this.css.slice(1)
    } else {
      this.hasBOM = false
    }

    if (opts.from) {
      if (
        !pathAvailable ||
        /^\w+:\/\//.test(opts.from) ||
        isAbsolute(opts.from)
      ) {
        this.file = opts.from
      } else {
        this.file = resolve(opts.from)
      }
    }

    if (pathAvailable && sourceMapAvailable) {
      let map = new PreviousMap(this.css, opts)
      if (map.text) {
        this.map = map
        let file = map.consumer().file
        if (!this.file && file) this.file = this.mapResolve(file)
      }
    }

    if (!this.file) {
      this.id = '<input css ' + nanoid(6) + '>'
    }
    if (this.map) this.map.file = this.from
  }

  fromOffset(offset) {
    let lastLine, lineToIndex
    if (!this[fromOffsetCache]) {
      let lines = this.css.split('\n')
      lineToIndex = new Array(lines.length)
      let prevIndex = 0

      for (let i = 0, l = lines.length; i < l; i++) {
        lineToIndex[i] = prevIndex
        prevIndex += lines[i].length + 1
      }

      this[fromOffsetCache] = lineToIndex
    } else {
      lineToIndex = this[fromOffsetCache]
    }
    lastLine = lineToIndex[lineToIndex.length - 1]

    let min = 0
    if (offset >= lastLine) {
      min = lineToIndex.length - 1
    } else {
      let max = lineToIndex.length - 2
      let mid
      while (min < max) {
        mid = min + ((max - min) >> 1)
        if (offset < lineToIndex[mid]) {
          max = mid - 1
        } else if (offset >= lineToIndex[mid + 1]) {
          min = mid + 1
        } else {
          min = mid
          break
        }
      }
    }
    return {
      line: min + 1,
      col: offset - lineToIndex[min] + 1
    }
  }

  error(message, line, column, opts = {}) {
    let result, endLine, endColumn

    if (line && typeof line === 'object') {
      let start = line
      let end = column
      if (typeof line.offset === 'number') {
        let pos = this.fromOffset(start.offset)
        line = pos.line
        column = pos.col
      } else {
        line = start.line
        column = start.column
      }
      if (typeof end.offset === 'number') {
        let pos = this.fromOffset(end.offset)
        endLine = pos.line
        endColumn = pos.col
      } else {
        endLine = end.line
        endColumn = end.column
      }
    } else if (!column) {
      let pos = this.fromOffset(line)
      line = pos.line
      column = pos.col
    }

    let origin = this.origin(line, column, endLine, endColumn)
    if (origin) {
      result = new CssSyntaxError(
        message,
        origin.endLine === undefined
          ? origin.line
          : { line: origin.line, column: origin.column },
        origin.endLine === undefined
          ? origin.column
          : { line: origin.endLine, column: origin.endColumn },
        origin.source,
        origin.file,
        opts.plugin
      )
    } else {
      result = new CssSyntaxError(
        message,
        endLine === undefined ? line : { line, column },
        endLine === undefined ? column : { line: endLine, column: endColumn },
        this.css,
        this.file,
        opts.plugin
      )
    }

    result.input = { line, column, endLine, endColumn, source: this.css }
    if (this.file) {
      if (pathToFileURL) {
        result.input.url = pathToFileURL(this.file).toString()
      }
      result.input.file = this.file
    }

    return result
  }

  origin(line, column, endLine, endColumn) {
    if (!this.map) return false
    let consumer = this.map.consumer()

    let from = consumer.originalPositionFor({ line, column })
    if (!from.source) return false

    let to
    if (typeof endLine === 'number') {
      to = consumer.originalPositionFor({ line: endLine, column: endColumn })
    }

    let fromUrl

    if (isAbsolute(from.source)) {
      fromUrl = pathToFileURL(from.source)
    } else {
      fromUrl = new URL(
        from.source,
        this.map.consumer().sourceRoot || pathToFileURL(this.map.mapFile)
      )
    }

    let result = {
      url: fromUrl.toString(),
      line: from.line,
      column: from.column,
      endLine: to && to.line,
      endColumn: to && to.column
    }

    if (fromUrl.protocol === 'file:') {
      if (fileURLToPath) {
        result.file = fileURLToPath(fromUrl)
      } else {
        /* c8 ignore next 2 */
        throw new Error(`file: protocol is not available in this PostCSS build`)
      }
    }

    let source = consumer.sourceContentFor(from.source)
    if (source) result.source = source

    return result
  }

  mapResolve(file) {
    if (/^\w+:\/\//.test(file)) {
      return file
    }
    return resolve(this.map.consumer().sourceRoot || this.map.root || '.', file)
  }

  get from() {
    return this.file || this.id
  }

  toJSON() {
    let json = {}
    for (let name of ['hasBOM', 'css', 'file', 'id']) {
      if (this[name] != null) {
        json[name] = this[name]
      }
    }
    if (this.map) {
      json.map = { ...this.map }
      if (json.map.consumerCache) {
        json.map.consumerCache = undefined
      }
    }
    return json
  }
}

module.exports = Input
Input.default = Input

if (terminalHighlight && terminalHighlight.registerInput) {
  terminalHighlight.registerInput(Input)
}

},{"./css-syntax-error":731,"./previous-map":744,"./terminal-highlight":81,"nanoid/non-secure":658,"path":81,"source-map-js":81,"url":81}],736:[function(require,module,exports){
(function (process){(function (){
'use strict'

let { isClean, my } = require('./symbols')
let MapGenerator = require('./map-generator')
let stringify = require('./stringify')
let Container = require('./container')
let Document = require('./document')
let warnOnce = require('./warn-once')
let Result = require('./result')
let parse = require('./parse')
let Root = require('./root')

const TYPE_TO_CLASS_NAME = {
  document: 'Document',
  root: 'Root',
  atrule: 'AtRule',
  rule: 'Rule',
  decl: 'Declaration',
  comment: 'Comment'
}

const PLUGIN_PROPS = {
  postcssPlugin: true,
  prepare: true,
  Once: true,
  Document: true,
  Root: true,
  Declaration: true,
  Rule: true,
  AtRule: true,
  Comment: true,
  DeclarationExit: true,
  RuleExit: true,
  AtRuleExit: true,
  CommentExit: true,
  RootExit: true,
  DocumentExit: true,
  OnceExit: true
}

const NOT_VISITORS = {
  postcssPlugin: true,
  prepare: true,
  Once: true
}

const CHILDREN = 0

function isPromise(obj) {
  return typeof obj === 'object' && typeof obj.then === 'function'
}

function getEvents(node) {
  let key = false
  let type = TYPE_TO_CLASS_NAME[node.type]
  if (node.type === 'decl') {
    key = node.prop.toLowerCase()
  } else if (node.type === 'atrule') {
    key = node.name.toLowerCase()
  }

  if (key && node.append) {
    return [
      type,
      type + '-' + key,
      CHILDREN,
      type + 'Exit',
      type + 'Exit-' + key
    ]
  } else if (key) {
    return [type, type + '-' + key, type + 'Exit', type + 'Exit-' + key]
  } else if (node.append) {
    return [type, CHILDREN, type + 'Exit']
  } else {
    return [type, type + 'Exit']
  }
}

function toStack(node) {
  let events
  if (node.type === 'document') {
    events = ['Document', CHILDREN, 'DocumentExit']
  } else if (node.type === 'root') {
    events = ['Root', CHILDREN, 'RootExit']
  } else {
    events = getEvents(node)
  }

  return {
    node,
    events,
    eventIndex: 0,
    visitors: [],
    visitorIndex: 0,
    iterator: 0
  }
}

function cleanMarks(node) {
  node[isClean] = false
  if (node.nodes) node.nodes.forEach(i => cleanMarks(i))
  return node
}

let postcss = {}

class LazyResult {
  constructor(processor, css, opts) {
    this.stringified = false
    this.processed = false

    let root
    if (
      typeof css === 'object' &&
      css !== null &&
      (css.type === 'root' || css.type === 'document')
    ) {
      root = cleanMarks(css)
    } else if (css instanceof LazyResult || css instanceof Result) {
      root = cleanMarks(css.root)
      if (css.map) {
        if (typeof opts.map === 'undefined') opts.map = {}
        if (!opts.map.inline) opts.map.inline = false
        opts.map.prev = css.map
      }
    } else {
      let parser = parse
      if (opts.syntax) parser = opts.syntax.parse
      if (opts.parser) parser = opts.parser
      if (parser.parse) parser = parser.parse

      try {
        root = parser(css, opts)
      } catch (error) {
        this.processed = true
        this.error = error
      }

      if (root && !root[my]) {
        /* c8 ignore next 2 */
        Container.rebuild(root)
      }
    }

    this.result = new Result(processor, root, opts)
    this.helpers = { ...postcss, result: this.result, postcss }
    this.plugins = this.processor.plugins.map(plugin => {
      if (typeof plugin === 'object' && plugin.prepare) {
        return { ...plugin, ...plugin.prepare(this.result) }
      } else {
        return plugin
      }
    })
  }

  get [Symbol.toStringTag]() {
    return 'LazyResult'
  }

  get processor() {
    return this.result.processor
  }

  get opts() {
    return this.result.opts
  }

  get css() {
    return this.stringify().css
  }

  get content() {
    return this.stringify().content
  }

  get map() {
    return this.stringify().map
  }

  get root() {
    return this.sync().root
  }

  get messages() {
    return this.sync().messages
  }

  warnings() {
    return this.sync().warnings()
  }

  toString() {
    return this.css
  }

  then(onFulfilled, onRejected) {
    if (process.env.NODE_ENV !== 'production') {
      if (!('from' in this.opts)) {
        warnOnce(
          'Without `from` option PostCSS could generate wrong source map ' +
            'and will not find Browserslist config. Set it to CSS file path ' +
            'or to `undefined` to prevent this warning.'
        )
      }
    }
    return this.async().then(onFulfilled, onRejected)
  }

  catch(onRejected) {
    return this.async().catch(onRejected)
  }

  finally(onFinally) {
    return this.async().then(onFinally, onFinally)
  }

  async() {
    if (this.error) return Promise.reject(this.error)
    if (this.processed) return Promise.resolve(this.result)
    if (!this.processing) {
      this.processing = this.runAsync()
    }
    return this.processing
  }

  sync() {
    if (this.error) throw this.error
    if (this.processed) return this.result
    this.processed = true

    if (this.processing) {
      throw this.getAsyncError()
    }

    for (let plugin of this.plugins) {
      let promise = this.runOnRoot(plugin)
      if (isPromise(promise)) {
        throw this.getAsyncError()
      }
    }

    this.prepareVisitors()
    if (this.hasListener) {
      let root = this.result.root
      while (!root[isClean]) {
        root[isClean] = true
        this.walkSync(root)
      }
      if (this.listeners.OnceExit) {
        if (root.type === 'document') {
          for (let subRoot of root.nodes) {
            this.visitSync(this.listeners.OnceExit, subRoot)
          }
        } else {
          this.visitSync(this.listeners.OnceExit, root)
        }
      }
    }

    return this.result
  }

  stringify() {
    if (this.error) throw this.error
    if (this.stringified) return this.result
    this.stringified = true

    this.sync()

    let opts = this.result.opts
    let str = stringify
    if (opts.syntax) str = opts.syntax.stringify
    if (opts.stringifier) str = opts.stringifier
    if (str.stringify) str = str.stringify

    let map = new MapGenerator(str, this.result.root, this.result.opts)
    let data = map.generate()
    this.result.css = data[0]
    this.result.map = data[1]

    return this.result
  }

  walkSync(node) {
    node[isClean] = true
    let events = getEvents(node)
    for (let event of events) {
      if (event === CHILDREN) {
        if (node.nodes) {
          node.each(child => {
            if (!child[isClean]) this.walkSync(child)
          })
        }
      } else {
        let visitors = this.listeners[event]
        if (visitors) {
          if (this.visitSync(visitors, node.toProxy())) return
        }
      }
    }
  }

  visitSync(visitors, node) {
    for (let [plugin, visitor] of visitors) {
      this.result.lastPlugin = plugin
      let promise
      try {
        promise = visitor(node, this.helpers)
      } catch (e) {
        throw this.handleError(e, node.proxyOf)
      }
      if (node.type !== 'root' && node.type !== 'document' && !node.parent) {
        return true
      }
      if (isPromise(promise)) {
        throw this.getAsyncError()
      }
    }
  }

  runOnRoot(plugin) {
    this.result.lastPlugin = plugin
    try {
      if (typeof plugin === 'object' && plugin.Once) {
        if (this.result.root.type === 'document') {
          let roots = this.result.root.nodes.map(root =>
            plugin.Once(root, this.helpers)
          )

          if (isPromise(roots[0])) {
            return Promise.all(roots)
          }

          return roots
        }

        return plugin.Once(this.result.root, this.helpers)
      } else if (typeof plugin === 'function') {
        return plugin(this.result.root, this.result)
      }
    } catch (error) {
      throw this.handleError(error)
    }
  }

  getAsyncError() {
    throw new Error('Use process(css).then(cb) to work with async plugins')
  }

  handleError(error, node) {
    let plugin = this.result.lastPlugin
    try {
      if (node) node.addToError(error)
      this.error = error
      if (error.name === 'CssSyntaxError' && !error.plugin) {
        error.plugin = plugin.postcssPlugin
        error.setMessage()
      } else if (plugin.postcssVersion) {
        if (process.env.NODE_ENV !== 'production') {
          let pluginName = plugin.postcssPlugin
          let pluginVer = plugin.postcssVersion
          let runtimeVer = this.result.processor.version
          let a = pluginVer.split('.')
          let b = runtimeVer.split('.')

          if (a[0] !== b[0] || parseInt(a[1]) > parseInt(b[1])) {
            // eslint-disable-next-line no-console
            console.error(
              'Unknown error from PostCSS plugin. Your current PostCSS ' +
                'version is ' +
                runtimeVer +
                ', but ' +
                pluginName +
                ' uses ' +
                pluginVer +
                '. Perhaps this is the source of the error below.'
            )
          }
        }
      }
    } catch (err) {
      /* c8 ignore next 3 */
      // eslint-disable-next-line no-console
      if (console && console.error) console.error(err)
    }
    return error
  }

  async runAsync() {
    this.plugin = 0
    for (let i = 0; i < this.plugins.length; i++) {
      let plugin = this.plugins[i]
      let promise = this.runOnRoot(plugin)
      if (isPromise(promise)) {
        try {
          await promise
        } catch (error) {
          throw this.handleError(error)
        }
      }
    }

    this.prepareVisitors()
    if (this.hasListener) {
      let root = this.result.root
      while (!root[isClean]) {
        root[isClean] = true
        let stack = [toStack(root)]
        while (stack.length > 0) {
          let promise = this.visitTick(stack)
          if (isPromise(promise)) {
            try {
              await promise
            } catch (e) {
              let node = stack[stack.length - 1].node
              throw this.handleError(e, node)
            }
          }
        }
      }

      if (this.listeners.OnceExit) {
        for (let [plugin, visitor] of this.listeners.OnceExit) {
          this.result.lastPlugin = plugin
          try {
            if (root.type === 'document') {
              let roots = root.nodes.map(subRoot =>
                visitor(subRoot, this.helpers)
              )

              await Promise.all(roots)
            } else {
              await visitor(root, this.helpers)
            }
          } catch (e) {
            throw this.handleError(e)
          }
        }
      }
    }

    this.processed = true
    return this.stringify()
  }

  prepareVisitors() {
    this.listeners = {}
    let add = (plugin, type, cb) => {
      if (!this.listeners[type]) this.listeners[type] = []
      this.listeners[type].push([plugin, cb])
    }
    for (let plugin of this.plugins) {
      if (typeof plugin === 'object') {
        for (let event in plugin) {
          if (!PLUGIN_PROPS[event] && /^[A-Z]/.test(event)) {
            throw new Error(
              `Unknown event ${event} in ${plugin.postcssPlugin}. ` +
                `Try to update PostCSS (${this.processor.version} now).`
            )
          }
          if (!NOT_VISITORS[event]) {
            if (typeof plugin[event] === 'object') {
              for (let filter in plugin[event]) {
                if (filter === '*') {
                  add(plugin, event, plugin[event][filter])
                } else {
                  add(
                    plugin,
                    event + '-' + filter.toLowerCase(),
                    plugin[event][filter]
                  )
                }
              }
            } else if (typeof plugin[event] === 'function') {
              add(plugin, event, plugin[event])
            }
          }
        }
      }
    }
    this.hasListener = Object.keys(this.listeners).length > 0
  }

  visitTick(stack) {
    let visit = stack[stack.length - 1]
    let { node, visitors } = visit

    if (node.type !== 'root' && node.type !== 'document' && !node.parent) {
      stack.pop()
      return
    }

    if (visitors.length > 0 && visit.visitorIndex < visitors.length) {
      let [plugin, visitor] = visitors[visit.visitorIndex]
      visit.visitorIndex += 1
      if (visit.visitorIndex === visitors.length) {
        visit.visitors = []
        visit.visitorIndex = 0
      }
      this.result.lastPlugin = plugin
      try {
        return visitor(node.toProxy(), this.helpers)
      } catch (e) {
        throw this.handleError(e, node)
      }
    }

    if (visit.iterator !== 0) {
      let iterator = visit.iterator
      let child
      while ((child = node.nodes[node.indexes[iterator]])) {
        node.indexes[iterator] += 1
        if (!child[isClean]) {
          child[isClean] = true
          stack.push(toStack(child))
          return
        }
      }
      visit.iterator = 0
      delete node.indexes[iterator]
    }

    let events = visit.events
    while (visit.eventIndex < events.length) {
      let event = events[visit.eventIndex]
      visit.eventIndex += 1
      if (event === CHILDREN) {
        if (node.nodes && node.nodes.length) {
          node[isClean] = true
          visit.iterator = node.getIterator()
        }
        return
      } else if (this.listeners[event]) {
        visit.visitors = this.listeners[event]
        return
      }
    }
    stack.pop()
  }
}

LazyResult.registerPostcss = dependant => {
  postcss = dependant
}

module.exports = LazyResult
LazyResult.default = LazyResult

Root.registerLazyResult(LazyResult)
Document.registerLazyResult(LazyResult)

}).call(this)}).call(this,require('_process'))
},{"./container":730,"./document":733,"./map-generator":738,"./parse":741,"./result":746,"./root":747,"./stringify":750,"./symbols":751,"./warn-once":753,"_process":755}],737:[function(require,module,exports){
'use strict'

let list = {
  split(string, separators, last) {
    let array = []
    let current = ''
    let split = false

    let func = 0
    let quote = false
    let escape = false

    for (let letter of string) {
      if (escape) {
        escape = false
      } else if (letter === '\\') {
        escape = true
      } else if (quote) {
        if (letter === quote) {
          quote = false
        }
      } else if (letter === '"' || letter === "'") {
        quote = letter
      } else if (letter === '(') {
        func += 1
      } else if (letter === ')') {
        if (func > 0) func -= 1
      } else if (func === 0) {
        if (separators.includes(letter)) split = true
      }

      if (split) {
        if (current !== '') array.push(current.trim())
        current = ''
        split = false
      } else {
        current += letter
      }
    }

    if (last || current !== '') array.push(current.trim())
    return array
  },

  space(string) {
    let spaces = [' ', '\n', '\t']
    return list.split(string, spaces)
  },

  comma(string) {
    return list.split(string, [','], true)
  }
}

module.exports = list
list.default = list

},{}],738:[function(require,module,exports){
(function (Buffer){(function (){
'use strict'

let { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')
let { dirname, resolve, relative, sep } = require('path')
let { pathToFileURL } = require('url')

let Input = require('./input')

let sourceMapAvailable = Boolean(SourceMapConsumer && SourceMapGenerator)
let pathAvailable = Boolean(dirname && resolve && relative && sep)

class MapGenerator {
  constructor(stringify, root, opts, cssString) {
    this.stringify = stringify
    this.mapOpts = opts.map || {}
    this.root = root
    this.opts = opts
    this.css = cssString
  }

  isMap() {
    if (typeof this.opts.map !== 'undefined') {
      return !!this.opts.map
    }
    return this.previous().length > 0
  }

  previous() {
    if (!this.previousMaps) {
      this.previousMaps = []
      if (this.root) {
        this.root.walk(node => {
          if (node.source && node.source.input.map) {
            let map = node.source.input.map
            if (!this.previousMaps.includes(map)) {
              this.previousMaps.push(map)
            }
          }
        })
      } else {
        let input = new Input(this.css, this.opts)
        if (input.map) this.previousMaps.push(input.map)
      }
    }

    return this.previousMaps
  }

  isInline() {
    if (typeof this.mapOpts.inline !== 'undefined') {
      return this.mapOpts.inline
    }

    let annotation = this.mapOpts.annotation
    if (typeof annotation !== 'undefined' && annotation !== true) {
      return false
    }

    if (this.previous().length) {
      return this.previous().some(i => i.inline)
    }
    return true
  }

  isSourcesContent() {
    if (typeof this.mapOpts.sourcesContent !== 'undefined') {
      return this.mapOpts.sourcesContent
    }
    if (this.previous().length) {
      return this.previous().some(i => i.withContent())
    }
    return true
  }

  clearAnnotation() {
    if (this.mapOpts.annotation === false) return

    if (this.root) {
      let node
      for (let i = this.root.nodes.length - 1; i >= 0; i--) {
        node = this.root.nodes[i]
        if (node.type !== 'comment') continue
        if (node.text.indexOf('# sourceMappingURL=') === 0) {
          this.root.removeChild(i)
        }
      }
    } else if (this.css) {
      this.css = this.css.replace(/(\n)?\/\*#[\S\s]*?\*\/$/gm, '')
    }
  }

  setSourcesContent() {
    let already = {}
    if (this.root) {
      this.root.walk(node => {
        if (node.source) {
          let from = node.source.input.from
          if (from && !already[from]) {
            already[from] = true
            this.map.setSourceContent(
              this.toUrl(this.path(from)),
              node.source.input.css
            )
          }
        }
      })
    } else if (this.css) {
      let from = this.opts.from
        ? this.toUrl(this.path(this.opts.from))
        : '<no source>'
      this.map.setSourceContent(from, this.css)
    }
  }

  applyPrevMaps() {
    for (let prev of this.previous()) {
      let from = this.toUrl(this.path(prev.file))
      let root = prev.root || dirname(prev.file)
      let map

      if (this.mapOpts.sourcesContent === false) {
        map = new SourceMapConsumer(prev.text)
        if (map.sourcesContent) {
          map.sourcesContent = map.sourcesContent.map(() => null)
        }
      } else {
        map = prev.consumer()
      }

      this.map.applySourceMap(map, from, this.toUrl(this.path(root)))
    }
  }

  isAnnotation() {
    if (this.isInline()) {
      return true
    }
    if (typeof this.mapOpts.annotation !== 'undefined') {
      return this.mapOpts.annotation
    }
    if (this.previous().length) {
      return this.previous().some(i => i.annotation)
    }
    return true
  }

  toBase64(str) {
    if (Buffer) {
      return Buffer.from(str).toString('base64')
    } else {
      return window.btoa(unescape(encodeURIComponent(str)))
    }
  }

  addAnnotation() {
    let content

    if (this.isInline()) {
      content =
        'data:application/json;base64,' + this.toBase64(this.map.toString())
    } else if (typeof this.mapOpts.annotation === 'string') {
      content = this.mapOpts.annotation
    } else if (typeof this.mapOpts.annotation === 'function') {
      content = this.mapOpts.annotation(this.opts.to, this.root)
    } else {
      content = this.outputFile() + '.map'
    }
    let eol = '\n'
    if (this.css.includes('\r\n')) eol = '\r\n'

    this.css += eol + '/*# sourceMappingURL=' + content + ' */'
  }

  outputFile() {
    if (this.opts.to) {
      return this.path(this.opts.to)
    } else if (this.opts.from) {
      return this.path(this.opts.from)
    } else {
      return 'to.css'
    }
  }

  generateMap() {
    if (this.root) {
      this.generateString()
    } else if (this.previous().length === 1) {
      let prev = this.previous()[0].consumer()
      prev.file = this.outputFile()
      this.map = SourceMapGenerator.fromSourceMap(prev)
    } else {
      this.map = new SourceMapGenerator({ file: this.outputFile() })
      this.map.addMapping({
        source: this.opts.from
          ? this.toUrl(this.path(this.opts.from))
          : '<no source>',
        generated: { line: 1, column: 0 },
        original: { line: 1, column: 0 }
      })
    }

    if (this.isSourcesContent()) this.setSourcesContent()
    if (this.root && this.previous().length > 0) this.applyPrevMaps()
    if (this.isAnnotation()) this.addAnnotation()

    if (this.isInline()) {
      return [this.css]
    } else {
      return [this.css, this.map]
    }
  }

  path(file) {
    if (file.indexOf('<') === 0) return file
    if (/^\w+:\/\//.test(file)) return file
    if (this.mapOpts.absolute) return file

    let from = this.opts.to ? dirname(this.opts.to) : '.'

    if (typeof this.mapOpts.annotation === 'string') {
      from = dirname(resolve(from, this.mapOpts.annotation))
    }

    file = relative(from, file)
    return file
  }

  toUrl(path) {
    if (sep === '\\') {
      path = path.replace(/\\/g, '/')
    }
    return encodeURI(path).replace(/[#?]/g, encodeURIComponent)
  }

  sourcePath(node) {
    if (this.mapOpts.from) {
      return this.toUrl(this.mapOpts.from)
    } else if (this.mapOpts.absolute) {
      if (pathToFileURL) {
        return pathToFileURL(node.source.input.from).toString()
      } else {
        throw new Error(
          '`map.absolute` option is not available in this PostCSS build'
        )
      }
    } else {
      return this.toUrl(this.path(node.source.input.from))
    }
  }

  generateString() {
    this.css = ''
    this.map = new SourceMapGenerator({ file: this.outputFile() })

    let line = 1
    let column = 1

    let noSource = '<no source>'
    let mapping = {
      source: '',
      generated: { line: 0, column: 0 },
      original: { line: 0, column: 0 }
    }

    let lines, last
    this.stringify(this.root, (str, node, type) => {
      this.css += str

      if (node && type !== 'end') {
        mapping.generated.line = line
        mapping.generated.column = column - 1
        if (node.source && node.source.start) {
          mapping.source = this.sourcePath(node)
          mapping.original.line = node.source.start.line
          mapping.original.column = node.source.start.column - 1
          this.map.addMapping(mapping)
        } else {
          mapping.source = noSource
          mapping.original.line = 1
          mapping.original.column = 0
          this.map.addMapping(mapping)
        }
      }

      lines = str.match(/\n/g)
      if (lines) {
        line += lines.length
        last = str.lastIndexOf('\n')
        column = str.length - last
      } else {
        column += str.length
      }

      if (node && type !== 'start') {
        let p = node.parent || { raws: {} }
        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {
          if (node.source && node.source.end) {
            mapping.source = this.sourcePath(node)
            mapping.original.line = node.source.end.line
            mapping.original.column = node.source.end.column - 1
            mapping.generated.line = line
            mapping.generated.column = column - 2
            this.map.addMapping(mapping)
          } else {
            mapping.source = noSource
            mapping.original.line = 1
            mapping.original.column = 0
            mapping.generated.line = line
            mapping.generated.column = column - 1
            this.map.addMapping(mapping)
          }
        }
      }
    })
  }

  generate() {
    this.clearAnnotation()
    if (pathAvailable && sourceMapAvailable && this.isMap()) {
      return this.generateMap()
    } else {
      let result = ''
      this.stringify(this.root, i => {
        result += i
      })
      return [result]
    }
  }
}

module.exports = MapGenerator

}).call(this)}).call(this,require("buffer").Buffer)
},{"./input":735,"buffer":86,"path":81,"source-map-js":81,"url":81}],739:[function(require,module,exports){
(function (process){(function (){
'use strict'

let MapGenerator = require('./map-generator')
let stringify = require('./stringify')
let warnOnce = require('./warn-once')
let parse = require('./parse')
const Result = require('./result')

class NoWorkResult {
  constructor(processor, css, opts) {
    css = css.toString()
    this.stringified = false

    this._processor = processor
    this._css = css
    this._opts = opts
    this._map = undefined
    let root

    let str = stringify
    this.result = new Result(this._processor, root, this._opts)
    this.result.css = css

    let self = this
    Object.defineProperty(this.result, 'root', {
      get() {
        return self.root
      }
    })

    let map = new MapGenerator(str, root, this._opts, css)
    if (map.isMap()) {
      let [generatedCSS, generatedMap] = map.generate()
      if (generatedCSS) {
        this.result.css = generatedCSS
      }
      if (generatedMap) {
        this.result.map = generatedMap
      }
    }
  }

  get [Symbol.toStringTag]() {
    return 'NoWorkResult'
  }

  get processor() {
    return this.result.processor
  }

  get opts() {
    return this.result.opts
  }

  get css() {
    return this.result.css
  }

  get content() {
    return this.result.css
  }

  get map() {
    return this.result.map
  }

  get root() {
    if (this._root) {
      return this._root
    }

    let root
    let parser = parse

    try {
      root = parser(this._css, this._opts)
    } catch (error) {
      this.error = error
    }

    this._root = root

    return root
  }

  get messages() {
    return []
  }

  warnings() {
    return []
  }

  toString() {
    return this._css
  }

  then(onFulfilled, onRejected) {
    if (process.env.NODE_ENV !== 'production') {
      if (!('from' in this._opts)) {
        warnOnce(
          'Without `from` option PostCSS could generate wrong source map ' +
            'and will not find Browserslist config. Set it to CSS file path ' +
            'or to `undefined` to prevent this warning.'
        )
      }
    }

    return this.async().then(onFulfilled, onRejected)
  }

  catch(onRejected) {
    return this.async().catch(onRejected)
  }

  finally(onFinally) {
    return this.async().then(onFinally, onFinally)
  }

  async() {
    if (this.error) return Promise.reject(this.error)
    return Promise.resolve(this.result)
  }

  sync() {
    if (this.error) throw this.error
    return this.result
  }
}

module.exports = NoWorkResult
NoWorkResult.default = NoWorkResult

}).call(this)}).call(this,require('_process'))
},{"./map-generator":738,"./parse":741,"./result":746,"./stringify":750,"./warn-once":753,"_process":755}],740:[function(require,module,exports){
'use strict'

let { isClean, my } = require('./symbols')
let CssSyntaxError = require('./css-syntax-error')
let Stringifier = require('./stringifier')
let stringify = require('./stringify')

function cloneNode(obj, parent) {
  let cloned = new obj.constructor()

  for (let i in obj) {
    if (!Object.prototype.hasOwnProperty.call(obj, i)) {
      /* c8 ignore next 2 */
      continue
    }
    if (i === 'proxyCache') continue
    let value = obj[i]
    let type = typeof value

    if (i === 'parent' && type === 'object') {
      if (parent) cloned[i] = parent
    } else if (i === 'source') {
      cloned[i] = value
    } else if (Array.isArray(value)) {
      cloned[i] = value.map(j => cloneNode(j, cloned))
    } else {
      if (type === 'object' && value !== null) value = cloneNode(value)
      cloned[i] = value
    }
  }

  return cloned
}

class Node {
  constructor(defaults = {}) {
    this.raws = {}
    this[isClean] = false
    this[my] = true

    for (let name in defaults) {
      if (name === 'nodes') {
        this.nodes = []
        for (let node of defaults[name]) {
          if (typeof node.clone === 'function') {
            this.append(node.clone())
          } else {
            this.append(node)
          }
        }
      } else {
        this[name] = defaults[name]
      }
    }
  }

  error(message, opts = {}) {
    if (this.source) {
      let { start, end } = this.rangeBy(opts)
      return this.source.input.error(
        message,
        { line: start.line, column: start.column },
        { line: end.line, column: end.column },
        opts
      )
    }
    return new CssSyntaxError(message)
  }

  warn(result, text, opts) {
    let data = { node: this }
    for (let i in opts) data[i] = opts[i]
    return result.warn(text, data)
  }

  remove() {
    if (this.parent) {
      this.parent.removeChild(this)
    }
    this.parent = undefined
    return this
  }

  toString(stringifier = stringify) {
    if (stringifier.stringify) stringifier = stringifier.stringify
    let result = ''
    stringifier(this, i => {
      result += i
    })
    return result
  }

  assign(overrides = {}) {
    for (let name in overrides) {
      this[name] = overrides[name]
    }
    return this
  }

  clone(overrides = {}) {
    let cloned = cloneNode(this)
    for (let name in overrides) {
      cloned[name] = overrides[name]
    }
    return cloned
  }

  cloneBefore(overrides = {}) {
    let cloned = this.clone(overrides)
    this.parent.insertBefore(this, cloned)
    return cloned
  }

  cloneAfter(overrides = {}) {
    let cloned = this.clone(overrides)
    this.parent.insertAfter(this, cloned)
    return cloned
  }

  replaceWith(...nodes) {
    if (this.parent) {
      let bookmark = this
      let foundSelf = false
      for (let node of nodes) {
        if (node === this) {
          foundSelf = true
        } else if (foundSelf) {
          this.parent.insertAfter(bookmark, node)
          bookmark = node
        } else {
          this.parent.insertBefore(bookmark, node)
        }
      }

      if (!foundSelf) {
        this.remove()
      }
    }

    return this
  }

  next() {
    if (!this.parent) return undefined
    let index = this.parent.index(this)
    return this.parent.nodes[index + 1]
  }

  prev() {
    if (!this.parent) return undefined
    let index = this.parent.index(this)
    return this.parent.nodes[index - 1]
  }

  before(add) {
    this.parent.insertBefore(this, add)
    return this
  }

  after(add) {
    this.parent.insertAfter(this, add)
    return this
  }

  root() {
    let result = this
    while (result.parent && result.parent.type !== 'document') {
      result = result.parent
    }
    return result
  }

  raw(prop, defaultType) {
    let str = new Stringifier()
    return str.raw(this, prop, defaultType)
  }

  cleanRaws(keepBetween) {
    delete this.raws.before
    delete this.raws.after
    if (!keepBetween) delete this.raws.between
  }

  toJSON(_, inputs) {
    let fixed = {}
    let emitInputs = inputs == null
    inputs = inputs || new Map()
    let inputsNextIndex = 0

    for (let name in this) {
      if (!Object.prototype.hasOwnProperty.call(this, name)) {
        /* c8 ignore next 2 */
        continue
      }
      if (name === 'parent' || name === 'proxyCache') continue
      let value = this[name]

      if (Array.isArray(value)) {
        fixed[name] = value.map(i => {
          if (typeof i === 'object' && i.toJSON) {
            return i.toJSON(null, inputs)
          } else {
            return i
          }
        })
      } else if (typeof value === 'object' && value.toJSON) {
        fixed[name] = value.toJSON(null, inputs)
      } else if (name === 'source') {
        let inputId = inputs.get(value.input)
        if (inputId == null) {
          inputId = inputsNextIndex
          inputs.set(value.input, inputsNextIndex)
          inputsNextIndex++
        }
        fixed[name] = {
          inputId,
          start: value.start,
          end: value.end
        }
      } else {
        fixed[name] = value
      }
    }

    if (emitInputs) {
      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())
    }

    return fixed
  }

  positionInside(index) {
    let string = this.toString()
    let column = this.source.start.column
    let line = this.source.start.line

    for (let i = 0; i < index; i++) {
      if (string[i] === '\n') {
        column = 1
        line += 1
      } else {
        column += 1
      }
    }

    return { line, column }
  }

  positionBy(opts) {
    let pos = this.source.start
    if (opts.index) {
      pos = this.positionInside(opts.index)
    } else if (opts.word) {
      let index = this.toString().indexOf(opts.word)
      if (index !== -1) pos = this.positionInside(index)
    }
    return pos
  }

  rangeBy(opts) {
    let start = {
      line: this.source.start.line,
      column: this.source.start.column
    }
    let end = this.source.end
      ? {
          line: this.source.end.line,
          column: this.source.end.column + 1
        }
      : {
          line: start.line,
          column: start.column + 1
        }

    if (opts.word) {
      let index = this.toString().indexOf(opts.word)
      if (index !== -1) {
        start = this.positionInside(index)
        end = this.positionInside(index + opts.word.length)
      }
    } else {
      if (opts.start) {
        start = {
          line: opts.start.line,
          column: opts.start.column
        }
      } else if (opts.index) {
        start = this.positionInside(opts.index)
      }

      if (opts.end) {
        end = {
          line: opts.end.line,
          column: opts.end.column
        }
      } else if (opts.endIndex) {
        end = this.positionInside(opts.endIndex)
      } else if (opts.index) {
        end = this.positionInside(opts.index + 1)
      }
    }

    if (
      end.line < start.line ||
      (end.line === start.line && end.column <= start.column)
    ) {
      end = { line: start.line, column: start.column + 1 }
    }

    return { start, end }
  }

  getProxyProcessor() {
    return {
      set(node, prop, value) {
        if (node[prop] === value) return true
        node[prop] = value
        if (
          prop === 'prop' ||
          prop === 'value' ||
          prop === 'name' ||
          prop === 'params' ||
          prop === 'important' ||
          /* c8 ignore next */
          prop === 'text'
        ) {
          node.markDirty()
        }
        return true
      },

      get(node, prop) {
        if (prop === 'proxyOf') {
          return node
        } else if (prop === 'root') {
          return () => node.root().toProxy()
        } else {
          return node[prop]
        }
      }
    }
  }

  toProxy() {
    if (!this.proxyCache) {
      this.proxyCache = new Proxy(this, this.getProxyProcessor())
    }
    return this.proxyCache
  }

  addToError(error) {
    error.postcssNode = this
    if (error.stack && this.source && /\n\s{4}at /.test(error.stack)) {
      let s = this.source
      error.stack = error.stack.replace(
        /\n\s{4}at /,
        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`
      )
    }
    return error
  }

  markDirty() {
    if (this[isClean]) {
      this[isClean] = false
      let next = this
      while ((next = next.parent)) {
        next[isClean] = false
      }
    }
  }

  get proxyOf() {
    return this
  }
}

module.exports = Node
Node.default = Node

},{"./css-syntax-error":731,"./stringifier":749,"./stringify":750,"./symbols":751}],741:[function(require,module,exports){
(function (process){(function (){
'use strict'

let Container = require('./container')
let Parser = require('./parser')
let Input = require('./input')

function parse(css, opts) {
  let input = new Input(css, opts)
  let parser = new Parser(input)
  try {
    parser.parse()
  } catch (e) {
    if (process.env.NODE_ENV !== 'production') {
      if (e.name === 'CssSyntaxError' && opts && opts.from) {
        if (/\.scss$/i.test(opts.from)) {
          e.message +=
            '\nYou tried to parse SCSS with ' +
            'the standard CSS parser; ' +
            'try again with the postcss-scss parser'
        } else if (/\.sass/i.test(opts.from)) {
          e.message +=
            '\nYou tried to parse Sass with ' +
            'the standard CSS parser; ' +
            'try again with the postcss-sass parser'
        } else if (/\.less$/i.test(opts.from)) {
          e.message +=
            '\nYou tried to parse Less with ' +
            'the standard CSS parser; ' +
            'try again with the postcss-less parser'
        }
      }
    }
    throw e
  }

  return parser.root
}

module.exports = parse
parse.default = parse

Container.registerParse(parse)

}).call(this)}).call(this,require('_process'))
},{"./container":730,"./input":735,"./parser":742,"_process":755}],742:[function(require,module,exports){
'use strict'

let Declaration = require('./declaration')
let tokenizer = require('./tokenize')
let Comment = require('./comment')
let AtRule = require('./at-rule')
let Root = require('./root')
let Rule = require('./rule')

class Parser {
  constructor(input) {
    this.input = input

    this.root = new Root()
    this.current = this.root
    this.spaces = ''
    this.semicolon = false
    this.customProperty = false

    this.createTokenizer()
    this.root.source = { input, start: { offset: 0, line: 1, column: 1 } }
  }

  createTokenizer() {
    this.tokenizer = tokenizer(this.input)
  }

  parse() {
    let token
    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken()

      switch (token[0]) {
        case 'space':
          this.spaces += token[1]
          break

        case ';':
          this.freeSemicolon(token)
          break

        case '}':
          this.end(token)
          break

        case 'comment':
          this.comment(token)
          break

        case 'at-word':
          this.atrule(token)
          break

        case '{':
          this.emptyRule(token)
          break

        default:
          this.other(token)
          break
      }
    }
    this.endFile()
  }

  comment(token) {
    let node = new Comment()
    this.init(node, token[2])
    node.source.end = this.getPosition(token[3] || token[2])

    let text = token[1].slice(2, -2)
    if (/^\s*$/.test(text)) {
      node.text = ''
      node.raws.left = text
      node.raws.right = ''
    } else {
      let match = text.match(/^(\s*)([^]*\S)(\s*)$/)
      node.text = match[2]
      node.raws.left = match[1]
      node.raws.right = match[3]
    }
  }

  emptyRule(token) {
    let node = new Rule()
    this.init(node, token[2])
    node.selector = ''
    node.raws.between = ''
    this.current = node
  }

  other(start) {
    let end = false
    let type = null
    let colon = false
    let bracket = null
    let brackets = []
    let customProperty = start[1].startsWith('--')

    let tokens = []
    let token = start
    while (token) {
      type = token[0]
      tokens.push(token)

      if (type === '(' || type === '[') {
        if (!bracket) bracket = token
        brackets.push(type === '(' ? ')' : ']')
      } else if (customProperty && colon && type === '{') {
        if (!bracket) bracket = token
        brackets.push('}')
      } else if (brackets.length === 0) {
        if (type === ';') {
          if (colon) {
            this.decl(tokens, customProperty)
            return
          } else {
            break
          }
        } else if (type === '{') {
          this.rule(tokens)
          return
        } else if (type === '}') {
          this.tokenizer.back(tokens.pop())
          end = true
          break
        } else if (type === ':') {
          colon = true
        }
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop()
        if (brackets.length === 0) bracket = null
      }

      token = this.tokenizer.nextToken()
    }

    if (this.tokenizer.endOfFile()) end = true
    if (brackets.length > 0) this.unclosedBracket(bracket)

    if (end && colon) {
      while (tokens.length) {
        token = tokens[tokens.length - 1][0]
        if (token !== 'space' && token !== 'comment') break
        this.tokenizer.back(tokens.pop())
      }
      this.decl(tokens, customProperty)
    } else {
      this.unknownWord(tokens)
    }
  }

  rule(tokens) {
    tokens.pop()

    let node = new Rule()
    this.init(node, tokens[0][2])

    node.raws.between = this.spacesAndCommentsFromEnd(tokens)
    this.raw(node, 'selector', tokens)
    this.current = node
  }

  decl(tokens, customProperty) {
    let node = new Declaration()
    this.init(node, tokens[0][2])

    let last = tokens[tokens.length - 1]
    if (last[0] === ';') {
      this.semicolon = true
      tokens.pop()
    }
    node.source.end = this.getPosition(last[3] || last[2])

    while (tokens[0][0] !== 'word') {
      if (tokens.length === 1) this.unknownWord(tokens)
      node.raws.before += tokens.shift()[1]
    }
    node.source.start = this.getPosition(tokens[0][2])

    node.prop = ''
    while (tokens.length) {
      let type = tokens[0][0]
      if (type === ':' || type === 'space' || type === 'comment') {
        break
      }
      node.prop += tokens.shift()[1]
    }

    node.raws.between = ''

    let token
    while (tokens.length) {
      token = tokens.shift()

      if (token[0] === ':') {
        node.raws.between += token[1]
        break
      } else {
        if (token[0] === 'word' && /\w/.test(token[1])) {
          this.unknownWord([token])
        }
        node.raws.between += token[1]
      }
    }

    if (node.prop[0] === '_' || node.prop[0] === '*') {
      node.raws.before += node.prop[0]
      node.prop = node.prop.slice(1)
    }
    let firstSpaces = this.spacesAndCommentsFromStart(tokens)
    this.precheckMissedSemicolon(tokens)

    for (let i = tokens.length - 1; i >= 0; i--) {
      token = tokens[i]
      if (token[1].toLowerCase() === '!important') {
        node.important = true
        let string = this.stringFrom(tokens, i)
        string = this.spacesFromEnd(tokens) + string
        if (string !== ' !important') node.raws.important = string
        break
      } else if (token[1].toLowerCase() === 'important') {
        let cache = tokens.slice(0)
        let str = ''
        for (let j = i; j > 0; j--) {
          let type = cache[j][0]
          if (str.trim().indexOf('!') === 0 && type !== 'space') {
            break
          }
          str = cache.pop()[1] + str
        }
        if (str.trim().indexOf('!') === 0) {
          node.important = true
          node.raws.important = str
          tokens = cache
        }
      }

      if (token[0] !== 'space' && token[0] !== 'comment') {
        break
      }
    }

    let hasWord = tokens.some(i => i[0] !== 'space' && i[0] !== 'comment')
    this.raw(node, 'value', tokens)
    if (hasWord) {
      node.raws.between += firstSpaces
    } else {
      node.value = firstSpaces + node.value
    }

    if (node.value.includes(':') && !customProperty) {
      this.checkMissedSemicolon(tokens)
    }
  }

  atrule(token) {
    let node = new AtRule()
    node.name = token[1].slice(1)
    if (node.name === '') {
      this.unnamedAtrule(node, token)
    }
    this.init(node, token[2])

    let type
    let prev
    let shift
    let last = false
    let open = false
    let params = []
    let brackets = []

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken()
      type = token[0]

      if (type === '(' || type === '[') {
        brackets.push(type === '(' ? ')' : ']')
      } else if (type === '{' && brackets.length > 0) {
        brackets.push('}')
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop()
      }

      if (brackets.length === 0) {
        if (type === ';') {
          node.source.end = this.getPosition(token[2])
          this.semicolon = true
          break
        } else if (type === '{') {
          open = true
          break
        } else if (type === '}') {
          if (params.length > 0) {
            shift = params.length - 1
            prev = params[shift]
            while (prev && prev[0] === 'space') {
              prev = params[--shift]
            }
            if (prev) {
              node.source.end = this.getPosition(prev[3] || prev[2])
            }
          }
          this.end(token)
          break
        } else {
          params.push(token)
        }
      } else {
        params.push(token)
      }

      if (this.tokenizer.endOfFile()) {
        last = true
        break
      }
    }

    node.raws.between = this.spacesAndCommentsFromEnd(params)
    if (params.length) {
      node.raws.afterName = this.spacesAndCommentsFromStart(params)
      this.raw(node, 'params', params)
      if (last) {
        token = params[params.length - 1]
        node.source.end = this.getPosition(token[3] || token[2])
        this.spaces = node.raws.between
        node.raws.between = ''
      }
    } else {
      node.raws.afterName = ''
      node.params = ''
    }

    if (open) {
      node.nodes = []
      this.current = node
    }
  }

  end(token) {
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon
    }
    this.semicolon = false

    this.current.raws.after = (this.current.raws.after || '') + this.spaces
    this.spaces = ''

    if (this.current.parent) {
      this.current.source.end = this.getPosition(token[2])
      this.current = this.current.parent
    } else {
      this.unexpectedClose(token)
    }
  }

  endFile() {
    if (this.current.parent) this.unclosedBlock()
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon
    }
    this.current.raws.after = (this.current.raws.after || '') + this.spaces
  }

  freeSemicolon(token) {
    this.spaces += token[1]
    if (this.current.nodes) {
      let prev = this.current.nodes[this.current.nodes.length - 1]
      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {
        prev.raws.ownSemicolon = this.spaces
        this.spaces = ''
      }
    }
  }

  // Helpers

  getPosition(offset) {
    let pos = this.input.fromOffset(offset)
    return {
      offset,
      line: pos.line,
      column: pos.col
    }
  }

  init(node, offset) {
    this.current.push(node)
    node.source = {
      start: this.getPosition(offset),
      input: this.input
    }
    node.raws.before = this.spaces
    this.spaces = ''
    if (node.type !== 'comment') this.semicolon = false
  }

  raw(node, prop, tokens) {
    let token, type
    let length = tokens.length
    let value = ''
    let clean = true
    let next, prev
    let pattern = /^([#.|])?(\w)+/i

    for (let i = 0; i < length; i += 1) {
      token = tokens[i]
      type = token[0]

      if (type === 'comment' && node.type === 'rule') {
        prev = tokens[i - 1]
        next = tokens[i + 1]

        if (
          prev[0] !== 'space' &&
          next[0] !== 'space' &&
          pattern.test(prev[1]) &&
          pattern.test(next[1])
        ) {
          value += token[1]
        } else {
          clean = false
        }

        continue
      }

      if (type === 'comment' || (type === 'space' && i === length - 1)) {
        clean = false
      } else {
        value += token[1]
      }
    }
    if (!clean) {
      let raw = tokens.reduce((all, i) => all + i[1], '')
      node.raws[prop] = { value, raw }
    }
    node[prop] = value
  }

  spacesAndCommentsFromEnd(tokens) {
    let lastTokenType
    let spaces = ''
    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0]
      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break
      spaces = tokens.pop()[1] + spaces
    }
    return spaces
  }

  spacesAndCommentsFromStart(tokens) {
    let next
    let spaces = ''
    while (tokens.length) {
      next = tokens[0][0]
      if (next !== 'space' && next !== 'comment') break
      spaces += tokens.shift()[1]
    }
    return spaces
  }

  spacesFromEnd(tokens) {
    let lastTokenType
    let spaces = ''
    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0]
      if (lastTokenType !== 'space') break
      spaces = tokens.pop()[1] + spaces
    }
    return spaces
  }

  stringFrom(tokens, from) {
    let result = ''
    for (let i = from; i < tokens.length; i++) {
      result += tokens[i][1]
    }
    tokens.splice(from, tokens.length - from)
    return result
  }

  colon(tokens) {
    let brackets = 0
    let token, type, prev
    for (let [i, element] of tokens.entries()) {
      token = element
      type = token[0]

      if (type === '(') {
        brackets += 1
      }
      if (type === ')') {
        brackets -= 1
      }
      if (brackets === 0 && type === ':') {
        if (!prev) {
          this.doubleColon(token)
        } else if (prev[0] === 'word' && prev[1] === 'progid') {
          continue
        } else {
          return i
        }
      }

      prev = token
    }
    return false
  }

  // Errors

  unclosedBracket(bracket) {
    throw this.input.error(
      'Unclosed bracket',
      { offset: bracket[2] },
      { offset: bracket[2] + 1 }
    )
  }

  unknownWord(tokens) {
    throw this.input.error(
      'Unknown word',
      { offset: tokens[0][2] },
      { offset: tokens[0][2] + tokens[0][1].length }
    )
  }

  unexpectedClose(token) {
    throw this.input.error(
      'Unexpected }',
      { offset: token[2] },
      { offset: token[2] + 1 }
    )
  }

  unclosedBlock() {
    let pos = this.current.source.start
    throw this.input.error('Unclosed block', pos.line, pos.column)
  }

  doubleColon(token) {
    throw this.input.error(
      'Double colon',
      { offset: token[2] },
      { offset: token[2] + token[1].length }
    )
  }

  unnamedAtrule(node, token) {
    throw this.input.error(
      'At-rule without name',
      { offset: token[2] },
      { offset: token[2] + token[1].length }
    )
  }

  precheckMissedSemicolon(/* tokens */) {
    // Hook for Safe Parser
  }

  checkMissedSemicolon(tokens) {
    let colon = this.colon(tokens)
    if (colon === false) return

    let founded = 0
    let token
    for (let j = colon - 1; j >= 0; j--) {
      token = tokens[j]
      if (token[0] !== 'space') {
        founded += 1
        if (founded === 2) break
      }
    }
    // If the token is a word, e.g. `!important`, `red` or any other valid property's value.
    // Then we need to return the colon after that word token. [3] is the "end" colon of that word.
    // And because we need it after that one we do +1 to get the next one.
    throw this.input.error(
      'Missed semicolon',
      token[0] === 'word' ? token[3] + 1 : token[2]
    )
  }
}

module.exports = Parser

},{"./at-rule":728,"./comment":729,"./declaration":732,"./root":747,"./rule":748,"./tokenize":752}],743:[function(require,module,exports){
(function (process){(function (){
'use strict'

let CssSyntaxError = require('./css-syntax-error')
let Declaration = require('./declaration')
let LazyResult = require('./lazy-result')
let Container = require('./container')
let Processor = require('./processor')
let stringify = require('./stringify')
let fromJSON = require('./fromJSON')
let Document = require('./document')
let Warning = require('./warning')
let Comment = require('./comment')
let AtRule = require('./at-rule')
let Result = require('./result.js')
let Input = require('./input')
let parse = require('./parse')
let list = require('./list')
let Rule = require('./rule')
let Root = require('./root')
let Node = require('./node')

function postcss(...plugins) {
  if (plugins.length === 1 && Array.isArray(plugins[0])) {
    plugins = plugins[0]
  }
  return new Processor(plugins)
}

postcss.plugin = function plugin(name, initializer) {
  // eslint-disable-next-line no-console
  if (console && console.warn) {
    // eslint-disable-next-line no-console
    console.warn(
      name +
        ': postcss.plugin was deprecated. Migration guide:\n' +
        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'
    )
    if (process.env.LANG && process.env.LANG.startsWith('cn')) {
      /* c8 ignore next 7 */
      // eslint-disable-next-line no-console
      console.warn(
        name +
          ': 里面 postcss.plugin 被弃用. 迁移指南:\n' +
          'https://www.w3ctech.com/topic/2226'
      )
    }
  }
  function creator(...args) {
    let transformer = initializer(...args)
    transformer.postcssPlugin = name
    transformer.postcssVersion = new Processor().version
    return transformer
  }

  let cache
  Object.defineProperty(creator, 'postcss', {
    get() {
      if (!cache) cache = creator()
      return cache
    }
  })

  creator.process = function (css, processOpts, pluginOpts) {
    return postcss([creator(pluginOpts)]).process(css, processOpts)
  }

  return creator
}

postcss.stringify = stringify
postcss.parse = parse
postcss.fromJSON = fromJSON
postcss.list = list

postcss.comment = defaults => new Comment(defaults)
postcss.atRule = defaults => new AtRule(defaults)
postcss.decl = defaults => new Declaration(defaults)
postcss.rule = defaults => new Rule(defaults)
postcss.root = defaults => new Root(defaults)
postcss.document = defaults => new Document(defaults)

postcss.CssSyntaxError = CssSyntaxError
postcss.Declaration = Declaration
postcss.Container = Container
postcss.Processor = Processor
postcss.Document = Document
postcss.Comment = Comment
postcss.Warning = Warning
postcss.AtRule = AtRule
postcss.Result = Result
postcss.Input = Input
postcss.Rule = Rule
postcss.Root = Root
postcss.Node = Node

LazyResult.registerPostcss(postcss)

module.exports = postcss
postcss.default = postcss

}).call(this)}).call(this,require('_process'))
},{"./at-rule":728,"./comment":729,"./container":730,"./css-syntax-error":731,"./declaration":732,"./document":733,"./fromJSON":734,"./input":735,"./lazy-result":736,"./list":737,"./node":740,"./parse":741,"./processor":745,"./result.js":746,"./root":747,"./rule":748,"./stringify":750,"./warning":754,"_process":755}],744:[function(require,module,exports){
(function (Buffer){(function (){
'use strict'

let { SourceMapConsumer, SourceMapGenerator } = require('source-map-js')
let { existsSync, readFileSync } = require('fs')
let { dirname, join } = require('path')

function fromBase64(str) {
  if (Buffer) {
    return Buffer.from(str, 'base64').toString()
  } else {
    /* c8 ignore next 2 */
    return window.atob(str)
  }
}

class PreviousMap {
  constructor(css, opts) {
    if (opts.map === false) return
    this.loadAnnotation(css)
    this.inline = this.startWith(this.annotation, 'data:')

    let prev = opts.map ? opts.map.prev : undefined
    let text = this.loadMap(opts.from, prev)
    if (!this.mapFile && opts.from) {
      this.mapFile = opts.from
    }
    if (this.mapFile) this.root = dirname(this.mapFile)
    if (text) this.text = text
  }

  consumer() {
    if (!this.consumerCache) {
      this.consumerCache = new SourceMapConsumer(this.text)
    }
    return this.consumerCache
  }

  withContent() {
    return !!(
      this.consumer().sourcesContent &&
      this.consumer().sourcesContent.length > 0
    )
  }

  startWith(string, start) {
    if (!string) return false
    return string.substr(0, start.length) === start
  }

  getAnnotationURL(sourceMapString) {
    return sourceMapString.replace(/^\/\*\s*# sourceMappingURL=/, '').trim()
  }

  loadAnnotation(css) {
    let comments = css.match(/\/\*\s*# sourceMappingURL=/gm)
    if (!comments) return

    // sourceMappingURLs from comments, strings, etc.
    let start = css.lastIndexOf(comments.pop())
    let end = css.indexOf('*/', start)

    if (start > -1 && end > -1) {
      // Locate the last sourceMappingURL to avoid pickin
      this.annotation = this.getAnnotationURL(css.substring(start, end))
    }
  }

  decodeInline(text) {
    let baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/
    let baseUri = /^data:application\/json;base64,/
    let charsetUri = /^data:application\/json;charset=utf-?8,/
    let uri = /^data:application\/json,/

    if (charsetUri.test(text) || uri.test(text)) {
      return decodeURIComponent(text.substr(RegExp.lastMatch.length))
    }

    if (baseCharsetUri.test(text) || baseUri.test(text)) {
      return fromBase64(text.substr(RegExp.lastMatch.length))
    }

    let encoding = text.match(/data:application\/json;([^,]+),/)[1]
    throw new Error('Unsupported source map encoding ' + encoding)
  }

  loadFile(path) {
    this.root = dirname(path)
    if (existsSync(path)) {
      this.mapFile = path
      return readFileSync(path, 'utf-8').toString().trim()
    }
  }

  loadMap(file, prev) {
    if (prev === false) return false

    if (prev) {
      if (typeof prev === 'string') {
        return prev
      } else if (typeof prev === 'function') {
        let prevPath = prev(file)
        if (prevPath) {
          let map = this.loadFile(prevPath)
          if (!map) {
            throw new Error(
              'Unable to load previous source map: ' + prevPath.toString()
            )
          }
          return map
        }
      } else if (prev instanceof SourceMapConsumer) {
        return SourceMapGenerator.fromSourceMap(prev).toString()
      } else if (prev instanceof SourceMapGenerator) {
        return prev.toString()
      } else if (this.isMap(prev)) {
        return JSON.stringify(prev)
      } else {
        throw new Error(
          'Unsupported previous source map format: ' + prev.toString()
        )
      }
    } else if (this.inline) {
      return this.decodeInline(this.annotation)
    } else if (this.annotation) {
      let map = this.annotation
      if (file) map = join(dirname(file), map)
      return this.loadFile(map)
    }
  }

  isMap(map) {
    if (typeof map !== 'object') return false
    return (
      typeof map.mappings === 'string' ||
      typeof map._mappings === 'string' ||
      Array.isArray(map.sections)
    )
  }
}

module.exports = PreviousMap
PreviousMap.default = PreviousMap

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":86,"fs":81,"path":81,"source-map-js":81}],745:[function(require,module,exports){
(function (process){(function (){
'use strict'

let NoWorkResult = require('./no-work-result')
let LazyResult = require('./lazy-result')
let Document = require('./document')
let Root = require('./root')

class Processor {
  constructor(plugins = []) {
    this.version = '8.4.5'
    this.plugins = this.normalize(plugins)
  }

  use(plugin) {
    this.plugins = this.plugins.concat(this.normalize([plugin]))
    return this
  }

  process(css, opts = {}) {
    if (
      this.plugins.length === 0 &&
      typeof opts.parser === 'undefined' &&
      typeof opts.stringifier === 'undefined' &&
      typeof opts.syntax === 'undefined'
    ) {
      return new NoWorkResult(this, css, opts)
    } else {
      return new LazyResult(this, css, opts)
    }
  }

  normalize(plugins) {
    let normalized = []
    for (let i of plugins) {
      if (i.postcss === true) {
        i = i()
      } else if (i.postcss) {
        i = i.postcss
      }

      if (typeof i === 'object' && Array.isArray(i.plugins)) {
        normalized = normalized.concat(i.plugins)
      } else if (typeof i === 'object' && i.postcssPlugin) {
        normalized.push(i)
      } else if (typeof i === 'function') {
        normalized.push(i)
      } else if (typeof i === 'object' && (i.parse || i.stringify)) {
        if (process.env.NODE_ENV !== 'production') {
          throw new Error(
            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +
              'one of the syntax/parser/stringifier options as outlined ' +
              'in your PostCSS runner documentation.'
          )
        }
      } else {
        throw new Error(i + ' is not a PostCSS plugin')
      }
    }
    return normalized
  }
}

module.exports = Processor
Processor.default = Processor

Root.registerProcessor(Processor)
Document.registerProcessor(Processor)

}).call(this)}).call(this,require('_process'))
},{"./document":733,"./lazy-result":736,"./no-work-result":739,"./root":747,"_process":755}],746:[function(require,module,exports){
'use strict'

let Warning = require('./warning')

class Result {
  constructor(processor, root, opts) {
    this.processor = processor
    this.messages = []
    this.root = root
    this.opts = opts
    this.css = undefined
    this.map = undefined
  }

  toString() {
    return this.css
  }

  warn(text, opts = {}) {
    if (!opts.plugin) {
      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
        opts.plugin = this.lastPlugin.postcssPlugin
      }
    }

    let warning = new Warning(text, opts)
    this.messages.push(warning)

    return warning
  }

  warnings() {
    return this.messages.filter(i => i.type === 'warning')
  }

  get content() {
    return this.css
  }
}

module.exports = Result
Result.default = Result

},{"./warning":754}],747:[function(require,module,exports){
'use strict'

let Container = require('./container')

let LazyResult, Processor

class Root extends Container {
  constructor(defaults) {
    super(defaults)
    this.type = 'root'
    if (!this.nodes) this.nodes = []
  }

  removeChild(child, ignore) {
    let index = this.index(child)

    if (!ignore && index === 0 && this.nodes.length > 1) {
      this.nodes[1].raws.before = this.nodes[index].raws.before
    }

    return super.removeChild(child)
  }

  normalize(child, sample, type) {
    let nodes = super.normalize(child)

    if (sample) {
      if (type === 'prepend') {
        if (this.nodes.length > 1) {
          sample.raws.before = this.nodes[1].raws.before
        } else {
          delete sample.raws.before
        }
      } else if (this.first !== sample) {
        for (let node of nodes) {
          node.raws.before = sample.raws.before
        }
      }
    }

    return nodes
  }

  toResult(opts = {}) {
    let lazy = new LazyResult(new Processor(), this, opts)
    return lazy.stringify()
  }
}

Root.registerLazyResult = dependant => {
  LazyResult = dependant
}

Root.registerProcessor = dependant => {
  Processor = dependant
}

module.exports = Root
Root.default = Root

},{"./container":730}],748:[function(require,module,exports){
'use strict'

let Container = require('./container')
let list = require('./list')

class Rule extends Container {
  constructor(defaults) {
    super(defaults)
    this.type = 'rule'
    if (!this.nodes) this.nodes = []
  }

  get selectors() {
    return list.comma(this.selector)
  }

  set selectors(values) {
    let match = this.selector ? this.selector.match(/,\s*/) : null
    let sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen')
    this.selector = values.join(sep)
  }
}

module.exports = Rule
Rule.default = Rule

Container.registerRule(Rule)

},{"./container":730,"./list":737}],749:[function(require,module,exports){
'use strict'

const DEFAULT_RAW = {
  colon: ': ',
  indent: '    ',
  beforeDecl: '\n',
  beforeRule: '\n',
  beforeOpen: ' ',
  beforeClose: '\n',
  beforeComment: '\n',
  after: '\n',
  emptyBody: '',
  commentLeft: ' ',
  commentRight: ' ',
  semicolon: false
}

function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1)
}

class Stringifier {
  constructor(builder) {
    this.builder = builder
  }

  stringify(node, semicolon) {
    /* c8 ignore start */
    if (!this[node.type]) {
      throw new Error(
        'Unknown AST node type ' +
          node.type +
          '. ' +
          'Maybe you need to change PostCSS stringifier.'
      )
    }
    /* c8 ignore stop */
    this[node.type](node, semicolon)
  }

  document(node) {
    this.body(node)
  }

  root(node) {
    this.body(node)
    if (node.raws.after) this.builder(node.raws.after)
  }

  comment(node) {
    let left = this.raw(node, 'left', 'commentLeft')
    let right = this.raw(node, 'right', 'commentRight')
    this.builder('/*' + left + node.text + right + '*/', node)
  }

  decl(node, semicolon) {
    let between = this.raw(node, 'between', 'colon')
    let string = node.prop + between + this.rawValue(node, 'value')

    if (node.important) {
      string += node.raws.important || ' !important'
    }

    if (semicolon) string += ';'
    this.builder(string, node)
  }

  rule(node) {
    this.block(node, this.rawValue(node, 'selector'))
    if (node.raws.ownSemicolon) {
      this.builder(node.raws.ownSemicolon, node, 'end')
    }
  }

  atrule(node, semicolon) {
    let name = '@' + node.name
    let params = node.params ? this.rawValue(node, 'params') : ''

    if (typeof node.raws.afterName !== 'undefined') {
      name += node.raws.afterName
    } else if (params) {
      name += ' '
    }

    if (node.nodes) {
      this.block(node, name + params)
    } else {
      let end = (node.raws.between || '') + (semicolon ? ';' : '')
      this.builder(name + params + end, node)
    }
  }

  body(node) {
    let last = node.nodes.length - 1
    while (last > 0) {
      if (node.nodes[last].type !== 'comment') break
      last -= 1
    }

    let semicolon = this.raw(node, 'semicolon')
    for (let i = 0; i < node.nodes.length; i++) {
      let child = node.nodes[i]
      let before = this.raw(child, 'before')
      if (before) this.builder(before)
      this.stringify(child, last !== i || semicolon)
    }
  }

  block(node, start) {
    let between = this.raw(node, 'between', 'beforeOpen')
    this.builder(start + between + '{', node, 'start')

    let after
    if (node.nodes && node.nodes.length) {
      this.body(node)
      after = this.raw(node, 'after')
    } else {
      after = this.raw(node, 'after', 'emptyBody')
    }

    if (after) this.builder(after)
    this.builder('}', node, 'end')
  }

  raw(node, own, detect) {
    let value
    if (!detect) detect = own

    // Already had
    if (own) {
      value = node.raws[own]
      if (typeof value !== 'undefined') return value
    }

    let parent = node.parent

    if (detect === 'before') {
      // Hack for first rule in CSS
      if (!parent || (parent.type === 'root' && parent.first === node)) {
        return ''
      }

      // `root` nodes in `document` should use only their own raws
      if (parent && parent.type === 'document') {
        return ''
      }
    }

    // Floating child without parent
    if (!parent) return DEFAULT_RAW[detect]

    // Detect style by other nodes
    let root = node.root()
    if (!root.rawCache) root.rawCache = {}
    if (typeof root.rawCache[detect] !== 'undefined') {
      return root.rawCache[detect]
    }

    if (detect === 'before' || detect === 'after') {
      return this.beforeAfter(node, detect)
    } else {
      let method = 'raw' + capitalize(detect)
      if (this[method]) {
        value = this[method](root, node)
      } else {
        root.walk(i => {
          value = i.raws[own]
          if (typeof value !== 'undefined') return false
        })
      }
    }

    if (typeof value === 'undefined') value = DEFAULT_RAW[detect]

    root.rawCache[detect] = value
    return value
  }

  rawSemicolon(root) {
    let value
    root.walk(i => {
      if (i.nodes && i.nodes.length && i.last.type === 'decl') {
        value = i.raws.semicolon
        if (typeof value !== 'undefined') return false
      }
    })
    return value
  }

  rawEmptyBody(root) {
    let value
    root.walk(i => {
      if (i.nodes && i.nodes.length === 0) {
        value = i.raws.after
        if (typeof value !== 'undefined') return false
      }
    })
    return value
  }

  rawIndent(root) {
    if (root.raws.indent) return root.raws.indent
    let value
    root.walk(i => {
      let p = i.parent
      if (p && p !== root && p.parent && p.parent === root) {
        if (typeof i.raws.before !== 'undefined') {
          let parts = i.raws.before.split('\n')
          value = parts[parts.length - 1]
          value = value.replace(/\S/g, '')
          return false
        }
      }
    })
    return value
  }

  rawBeforeComment(root, node) {
    let value
    root.walkComments(i => {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before
        if (value.includes('\n')) {
          value = value.replace(/[^\n]+$/, '')
        }
        return false
      }
    })
    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeDecl')
    } else if (value) {
      value = value.replace(/\S/g, '')
    }
    return value
  }

  rawBeforeDecl(root, node) {
    let value
    root.walkDecls(i => {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before
        if (value.includes('\n')) {
          value = value.replace(/[^\n]+$/, '')
        }
        return false
      }
    })
    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeRule')
    } else if (value) {
      value = value.replace(/\S/g, '')
    }
    return value
  }

  rawBeforeRule(root) {
    let value
    root.walk(i => {
      if (i.nodes && (i.parent !== root || root.first !== i)) {
        if (typeof i.raws.before !== 'undefined') {
          value = i.raws.before
          if (value.includes('\n')) {
            value = value.replace(/[^\n]+$/, '')
          }
          return false
        }
      }
    })
    if (value) value = value.replace(/\S/g, '')
    return value
  }

  rawBeforeClose(root) {
    let value
    root.walk(i => {
      if (i.nodes && i.nodes.length > 0) {
        if (typeof i.raws.after !== 'undefined') {
          value = i.raws.after
          if (value.includes('\n')) {
            value = value.replace(/[^\n]+$/, '')
          }
          return false
        }
      }
    })
    if (value) value = value.replace(/\S/g, '')
    return value
  }

  rawBeforeOpen(root) {
    let value
    root.walk(i => {
      if (i.type !== 'decl') {
        value = i.raws.between
        if (typeof value !== 'undefined') return false
      }
    })
    return value
  }

  rawColon(root) {
    let value
    root.walkDecls(i => {
      if (typeof i.raws.between !== 'undefined') {
        value = i.raws.between.replace(/[^\s:]/g, '')
        return false
      }
    })
    return value
  }

  beforeAfter(node, detect) {
    let value
    if (node.type === 'decl') {
      value = this.raw(node, null, 'beforeDecl')
    } else if (node.type === 'comment') {
      value = this.raw(node, null, 'beforeComment')
    } else if (detect === 'before') {
      value = this.raw(node, null, 'beforeRule')
    } else {
      value = this.raw(node, null, 'beforeClose')
    }

    let buf = node.parent
    let depth = 0
    while (buf && buf.type !== 'root') {
      depth += 1
      buf = buf.parent
    }

    if (value.includes('\n')) {
      let indent = this.raw(node, null, 'indent')
      if (indent.length) {
        for (let step = 0; step < depth; step++) value += indent
      }
    }

    return value
  }

  rawValue(node, prop) {
    let value = node[prop]
    let raw = node.raws[prop]
    if (raw && raw.value === value) {
      return raw.raw
    }

    return value
  }
}

module.exports = Stringifier
Stringifier.default = Stringifier

},{}],750:[function(require,module,exports){
'use strict'

let Stringifier = require('./stringifier')

function stringify(node, builder) {
  let str = new Stringifier(builder)
  str.stringify(node)
}

module.exports = stringify
stringify.default = stringify

},{"./stringifier":749}],751:[function(require,module,exports){
'use strict'

module.exports.isClean = Symbol('isClean')

module.exports.my = Symbol('my')

},{}],752:[function(require,module,exports){
'use strict'

const SINGLE_QUOTE = "'".charCodeAt(0)
const DOUBLE_QUOTE = '"'.charCodeAt(0)
const BACKSLASH = '\\'.charCodeAt(0)
const SLASH = '/'.charCodeAt(0)
const NEWLINE = '\n'.charCodeAt(0)
const SPACE = ' '.charCodeAt(0)
const FEED = '\f'.charCodeAt(0)
const TAB = '\t'.charCodeAt(0)
const CR = '\r'.charCodeAt(0)
const OPEN_SQUARE = '['.charCodeAt(0)
const CLOSE_SQUARE = ']'.charCodeAt(0)
const OPEN_PARENTHESES = '('.charCodeAt(0)
const CLOSE_PARENTHESES = ')'.charCodeAt(0)
const OPEN_CURLY = '{'.charCodeAt(0)
const CLOSE_CURLY = '}'.charCodeAt(0)
const SEMICOLON = ';'.charCodeAt(0)
const ASTERISK = '*'.charCodeAt(0)
const COLON = ':'.charCodeAt(0)
const AT = '@'.charCodeAt(0)

const RE_AT_END = /[\t\n\f\r "#'()/;[\\\]{}]/g
const RE_WORD_END = /[\t\n\f\r !"#'():;@[\\\]{}]|\/(?=\*)/g
const RE_BAD_BRACKET = /.[\n"'(/\\]/
const RE_HEX_ESCAPE = /[\da-f]/i

module.exports = function tokenizer(input, options = {}) {
  let css = input.css.valueOf()
  let ignore = options.ignoreErrors

  let code, next, quote, content, escape
  let escaped, escapePos, prev, n, currentToken

  let length = css.length
  let pos = 0
  let buffer = []
  let returned = []

  function position() {
    return pos
  }

  function unclosed(what) {
    throw input.error('Unclosed ' + what, pos)
  }

  function endOfFile() {
    return returned.length === 0 && pos >= length
  }

  function nextToken(opts) {
    if (returned.length) return returned.pop()
    if (pos >= length) return

    let ignoreUnclosed = opts ? opts.ignoreUnclosed : false

    code = css.charCodeAt(pos)

    switch (code) {
      case NEWLINE:
      case SPACE:
      case TAB:
      case CR:
      case FEED: {
        next = pos
        do {
          next += 1
          code = css.charCodeAt(next)
        } while (
          code === SPACE ||
          code === NEWLINE ||
          code === TAB ||
          code === CR ||
          code === FEED
        )

        currentToken = ['space', css.slice(pos, next)]
        pos = next - 1
        break
      }

      case OPEN_SQUARE:
      case CLOSE_SQUARE:
      case OPEN_CURLY:
      case CLOSE_CURLY:
      case COLON:
      case SEMICOLON:
      case CLOSE_PARENTHESES: {
        let controlChar = String.fromCharCode(code)
        currentToken = [controlChar, controlChar, pos]
        break
      }

      case OPEN_PARENTHESES: {
        prev = buffer.length ? buffer.pop()[1] : ''
        n = css.charCodeAt(pos + 1)
        if (
          prev === 'url' &&
          n !== SINGLE_QUOTE &&
          n !== DOUBLE_QUOTE &&
          n !== SPACE &&
          n !== NEWLINE &&
          n !== TAB &&
          n !== FEED &&
          n !== CR
        ) {
          next = pos
          do {
            escaped = false
            next = css.indexOf(')', next + 1)
            if (next === -1) {
              if (ignore || ignoreUnclosed) {
                next = pos
                break
              } else {
                unclosed('bracket')
              }
            }
            escapePos = next
            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
              escapePos -= 1
              escaped = !escaped
            }
          } while (escaped)

          currentToken = ['brackets', css.slice(pos, next + 1), pos, next]

          pos = next
        } else {
          next = css.indexOf(')', pos + 1)
          content = css.slice(pos, next + 1)

          if (next === -1 || RE_BAD_BRACKET.test(content)) {
            currentToken = ['(', '(', pos]
          } else {
            currentToken = ['brackets', content, pos, next]
            pos = next
          }
        }

        break
      }

      case SINGLE_QUOTE:
      case DOUBLE_QUOTE: {
        quote = code === SINGLE_QUOTE ? "'" : '"'
        next = pos
        do {
          escaped = false
          next = css.indexOf(quote, next + 1)
          if (next === -1) {
            if (ignore || ignoreUnclosed) {
              next = pos + 1
              break
            } else {
              unclosed('string')
            }
          }
          escapePos = next
          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
            escapePos -= 1
            escaped = !escaped
          }
        } while (escaped)

        currentToken = ['string', css.slice(pos, next + 1), pos, next]
        pos = next
        break
      }

      case AT: {
        RE_AT_END.lastIndex = pos + 1
        RE_AT_END.test(css)
        if (RE_AT_END.lastIndex === 0) {
          next = css.length - 1
        } else {
          next = RE_AT_END.lastIndex - 2
        }

        currentToken = ['at-word', css.slice(pos, next + 1), pos, next]

        pos = next
        break
      }

      case BACKSLASH: {
        next = pos
        escape = true
        while (css.charCodeAt(next + 1) === BACKSLASH) {
          next += 1
          escape = !escape
        }
        code = css.charCodeAt(next + 1)
        if (
          escape &&
          code !== SLASH &&
          code !== SPACE &&
          code !== NEWLINE &&
          code !== TAB &&
          code !== CR &&
          code !== FEED
        ) {
          next += 1
          if (RE_HEX_ESCAPE.test(css.charAt(next))) {
            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
              next += 1
            }
            if (css.charCodeAt(next + 1) === SPACE) {
              next += 1
            }
          }
        }

        currentToken = ['word', css.slice(pos, next + 1), pos, next]

        pos = next
        break
      }

      default: {
        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
          next = css.indexOf('*/', pos + 2) + 1
          if (next === 0) {
            if (ignore || ignoreUnclosed) {
              next = css.length
            } else {
              unclosed('comment')
            }
          }

          currentToken = ['comment', css.slice(pos, next + 1), pos, next]
          pos = next
        } else {
          RE_WORD_END.lastIndex = pos + 1
          RE_WORD_END.test(css)
          if (RE_WORD_END.lastIndex === 0) {
            next = css.length - 1
          } else {
            next = RE_WORD_END.lastIndex - 2
          }

          currentToken = ['word', css.slice(pos, next + 1), pos, next]
          buffer.push(currentToken)
          pos = next
        }

        break
      }
    }

    pos++
    return currentToken
  }

  function back(token) {
    returned.push(token)
  }

  return {
    back,
    nextToken,
    endOfFile,
    position
  }
}

},{}],753:[function(require,module,exports){
/* eslint-disable no-console */
'use strict'

let printed = {}

module.exports = function warnOnce(message) {
  if (printed[message]) return
  printed[message] = true

  if (typeof console !== 'undefined' && console.warn) {
    console.warn(message)
  }
}

},{}],754:[function(require,module,exports){
'use strict'

class Warning {
  constructor(text, opts = {}) {
    this.type = 'warning'
    this.text = text

    if (opts.node && opts.node.source) {
      let range = opts.node.rangeBy(opts)
      this.line = range.start.line
      this.column = range.start.column
      this.endLine = range.end.line
      this.endColumn = range.end.column
    }

    for (let opt in opts) this[opt] = opts[opt]
  }

  toString() {
    if (this.node) {
      return this.node.error(this.text, {
        plugin: this.plugin,
        index: this.index,
        word: this.word
      }).message
    }

    if (this.plugin) {
      return this.plugin + ': ' + this.text
    }

    return this.text
  }
}

module.exports = Warning
Warning.default = Warning

},{}],755:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],756:[function(require,module,exports){
(function (global){(function (){

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],757:[function(require,module,exports){
const postcss = require('postcss');
const postcssPresetEnv = require('postcss-preset-env');

window.postcss = postcss;
window.postcssPresetEnv = postcssPresetEnv;



/*postcss([
  postcssPresetEnv()
]).process(".top { .child { .subchild { color: black; } } }").then( result => {
	console.log( result );
});
*/
},{"postcss":743,"postcss-preset-env":689}]},{},[757]);
